{
  "version": 3,
  "sources": ["../../object-keys/isArguments.js", "../../object-keys/implementation.js", "../../object-keys/index.js", "../../es-errors/index.js", "../../es-errors/eval.js", "../../es-errors/range.js", "../../es-errors/ref.js", "../../es-errors/syntax.js", "../../es-errors/type.js", "../../es-errors/uri.js", "../../has-symbols/shams.js", "../../has-symbols/index.js", "../../has-proto/index.js", "../../function-bind/implementation.js", "../../function-bind/index.js", "../../hasown/index.js", "../../get-intrinsic/index.js", "../../es-define-property/index.js", "../../gopd/index.js", "../../define-data-property/index.js", "../../has-property-descriptors/index.js", "../../define-properties/index.js", "../../set-function-length/index.js", "../../call-bind/index.js", "../../object-inspect/index.js", "../../call-bind/callBound.js", "../../es-abstract/helpers/IsArray.js", "../../es-abstract/2024/IsArray.js", "../../es-abstract/2024/Call.js", "../../es-abstract/2024/IsPropertyKey.js", "../../es-abstract/5/Type.js", "../../es-abstract/2024/Type.js", "../../es-abstract/2024/Get.js", "../../es-abstract/helpers/isLeadingSurrogate.js", "../../es-abstract/helpers/isTrailingSurrogate.js", "../../es-abstract/2024/UTF16SurrogatePairToCodePoint.js", "../../es-abstract/2024/CodePointAt.js", "../../es-abstract/helpers/isNaN.js", "../../es-abstract/helpers/isFinite.js", "../../es-abstract/helpers/isInteger.js", "../../es-abstract/helpers/maxSafeInteger.js", "../../es-abstract/2024/AdvanceStringIndex.js", "../../es-abstract/2024/CreateIterResultObject.js", "../../es-abstract/2024/ToBoolean.js", "../../es-abstract/2024/IteratorComplete.js", "../../es-abstract/2024/IteratorValue.js", "../../es-abstract/2024/PromiseResolve.js", "../../es-abstract/2024/AsyncFromSyncIteratorContinuation.js", "../../es-abstract/2024/GetV.js", "../../is-callable/index.js", "../../es-abstract/2024/IsCallable.js", "../../es-abstract/2024/GetMethod.js", "../../es-abstract/helpers/records/iterator-record.js", "../../es-abstract/2024/IteratorNext.js", "../../es-abstract/helpers/forEach.js", "../../side-channel/index.js", "../../internal-slot/index.js", "../../es-abstract/2024/OrdinaryObjectCreate.js", "../../es-abstract/2024/CreateAsyncFromSyncIterator.js", "../../es-abstract/2024/GetIteratorFromMethod.js", "../../has-tostringtag/shams.js", "../../is-string/index.js", "../../es-abstract/helpers/getIteratorMethod.js", "../../es-abstract/2024/GetIterator.js", "../../es-abstract/2024/CompletionRecord.js", "../../es-abstract/2024/IteratorClose.js", "../../es-abstract/2024/IteratorStep.js", "../../es-abstract/2024/ThrowCompletion.js", "../../es-abstract/2024/AddEntriesFromIterable.js", "../../es-abstract/helpers/records/property-descriptor.js", "../../es-abstract/2024/IsAccessorDescriptor.js", "../../es-abstract/helpers/isPrimitive.js", "../../es-abstract/2024/IsExtensible.js", "../../es-abstract/2024/ToPropertyDescriptor.js", "../../es-abstract/2024/SameValue.js", "../../es-abstract/helpers/DefineOwnProperty.js", "../../es-abstract/helpers/isFullyPopulatedPropertyDescriptor.js", "../../es-abstract/helpers/fromPropertyDescriptor.js", "../../es-abstract/2024/FromPropertyDescriptor.js", "../../es-abstract/2024/IsDataDescriptor.js", "../../es-abstract/2024/IsGenericDescriptor.js", "../../es-abstract/2024/ValidateAndApplyPropertyDescriptor.js", "../../es-abstract/2024/OrdinaryDefineOwnProperty.js", "../../es-abstract/2024/CreateDataProperty.js", "../../es-abstract/2024/CreateDataPropertyOrThrow.js", "../../es-object-atoms/RequireObjectCoercible.js", "../../es-to-primitive/helpers/isPrimitive.js", "../../is-date-object/index.js", "../../is-symbol/index.js", "../../es-to-primitive/es2015.js", "../../es-abstract/2024/ToPrimitive.js", "../../es-abstract/2024/ToString.js", "../../es-abstract/2024/ToPropertyKey.js", "../../object.fromentries/implementation.js", "../../object.fromentries/polyfill.js", "../../object.fromentries/shim.js", "../../object.fromentries/index.js", "../../object.entries/implementation.js", "../../object.entries/polyfill.js", "../../object.entries/shim.js", "../../object.entries/index.js", "../../es-abstract/2023/ArrayCreate.js", "../../es-abstract/2023/IsPropertyKey.js", "../../es-abstract/2023/Type.js", "../../es-abstract/2023/Get.js", "../../es-abstract/2023/IsArray.js", "../../es-abstract/GetIntrinsic.js", "../../es-abstract/2023/FromPropertyDescriptor.js", "../../es-abstract/2023/IsDataDescriptor.js", "../../es-abstract/2023/SameValue.js", "../../es-abstract/2023/ToBoolean.js", "../../es-abstract/2023/IsCallable.js", "../../es-abstract/2023/ToPropertyDescriptor.js", "../../es-abstract/2023/DefinePropertyOrThrow.js", "../../es-abstract/2023/IsConstructor.js", "../../es-abstract/2023/ArraySpeciesCreate.js", "../../es-abstract/2023/Call.js", "../../es-abstract/2023/IsAccessorDescriptor.js", "../../es-abstract/2023/IsExtensible.js", "../../es-abstract/2023/IsGenericDescriptor.js", "../../es-abstract/2023/ValidateAndApplyPropertyDescriptor.js", "../../es-abstract/2023/OrdinaryDefineOwnProperty.js", "../../es-abstract/2023/CreateDataProperty.js", "../../es-abstract/2023/CreateDataPropertyOrThrow.js", "../../es-abstract/2023/HasProperty.js", "../../es-abstract/2023/ToPrimitive.js", "../../is-regex/index.js", "../../safe-regex-test/index.js", "../../string.prototype.trim/implementation.js", "../../string.prototype.trim/polyfill.js", "../../string.prototype.trim/shim.js", "../../string.prototype.trim/index.js", "../../es-abstract/2023/StringToNumber.js", "../../es-abstract/2023/ToNumber.js", "../../es-abstract/2023/floor.js", "../../es-abstract/2023/truncate.js", "../../es-abstract/2023/ToIntegerOrInfinity.js", "../../es-abstract/2023/ToLength.js", "../../es-abstract/2023/LengthOfArrayLike.js", "../../es-abstract/2023/ToString.js", "../../es-abstract/2023/FlattenIntoArray.js", "../../es-object-atoms/index.js", "../../es-object-atoms/ToObject.js", "../../es-abstract/2023/ToObject.js", "../../array.prototype.flatmap/implementation.js", "../../array.prototype.flatmap/polyfill.js", "../../es-shim-unscopables/index.js", "../../array.prototype.flatmap/shim.js", "../../array.prototype.flatmap/index.js", "../../object.values/implementation.js", "../../object.values/polyfill.js", "../../object.values/shim.js", "../../object.values/index.js", "../../es-abstract/2024/StringToNumber.js", "../../es-abstract/2024/ToNumber.js", "../../es-abstract/2024/floor.js", "../../es-abstract/2024/truncate.js", "../../es-abstract/2024/ToIntegerOrInfinity.js", "../../es-abstract/2024/ToLength.js", "../../es-abstract/2024/SameValueZero.js", "../../array-includes/implementation.js", "../../array-includes/polyfill.js", "../../array-includes/shim.js", "../../array-includes/index.js", "../../es-iterator-helpers/aos/GetIteratorDirect.js", "../../es-iterator-helpers/aos/GetIteratorFlattenable.js", "../../es-abstract/2024/OrdinaryHasInstance.js", "../../globalthis/implementation.browser.js", "../../globalthis/polyfill.js", "../../globalthis/shim.js", "../../globalthis/index.js", "../../is-number-object/index.js", "../../is-boolean-object/index.js", "../../has-bigints/index.js", "../../is-bigint/index.js", "../../which-boxed-primitive/index.js", "../../is-map/index.js", "../../is-set/index.js", "../../is-weakmap/index.js", "../../is-weakset/index.js", "../../which-collection/index.js", "../../for-each/index.js", "../../possible-typed-array-names/index.js", "../../available-typed-arrays/index.js", "../../which-typed-array/index.js", "../../isarray/index.js", "../../is-weakref/index.js", "../../is-finalizationregistry/index.js", "../../es-abstract/2023/HasOwnProperty.js", "../../functions-have-names/index.js", "../../function.prototype.name/implementation.js", "../../function.prototype.name/polyfill.js", "../../function.prototype.name/shim.js", "../../function.prototype.name/index.js", "../../is-generator-function/index.js", "../../is-async-function/index.js", "../../which-builtin-type/index.js", "../../reflect.getprototypeof/implementation.js", "../../reflect.getprototypeof/polyfill.js", "../../reflect.getprototypeof/shim.js", "../../reflect.getprototypeof/index.js", "../../set-function-name/index.js", "../../iterator.prototype/index.js", "../../es-iterator-helpers/Iterator/implementation.js", "../../es-iterator-helpers/Iterator/polyfill.js", "../../es-iterator-helpers/Iterator.prototype/implementation.js", "../../es-iterator-helpers/WrapForValidIteratorPrototype/index.js", "../../es-iterator-helpers/Iterator.from/implementation.js", "../../es-iterator-helpers/Iterator/shim.js", "../../es-iterator-helpers/Iterator/index.js", "../../es-iterator-helpers/Iterator.from/polyfill.js", "../../es-iterator-helpers/Iterator.from/shim.js", "../../es-iterator-helpers/Iterator.from/index.js", "../../es-iterator-helpers/aos/GeneratorStart.js", "../../es-abstract/helpers/every.js", "../../safe-array-concat/index.js", "../../es-iterator-helpers/aos/CreateIteratorFromClosure.js", "../../es-abstract/2024/IteratorStepValue.js", "../../es-set-tostringtag/index.js", "../../es-iterator-helpers/aos/GeneratorValidate.js", "../../es-iterator-helpers/aos/GeneratorResume.js", "../../es-abstract/2024/NormalCompletion.js", "../../es-iterator-helpers/aos/GeneratorResumeAbrupt.js", "../../es-iterator-helpers/IteratorHelperPrototype/index.js", "../../es-iterator-helpers/Iterator.prototype.map/implementation.js", "../../es-iterator-helpers/Iterator.prototype.map/polyfill.js", "../../es-iterator-helpers/Iterator.prototype.map/shim.js", "../../es-iterator-helpers/Iterator.prototype.map/index.js", "../../eslint-plugin-react/lib/util/eslint.js", "../../eslint-plugin-react/lib/util/variable.js", "../../eslint-plugin-react/lib/util/pragma.js", "../../estraverse/estraverse.js", "../../eslint-plugin-react/lib/util/ast.js", "../../esutils/lib/ast.js", "../../esutils/lib/code.js", "../../esutils/lib/keyword.js", "../../esutils/lib/utils.js", "../../doctrine/package.json", "browser-external:assert", "../../doctrine/lib/utility.js", "../../doctrine/lib/typed.js", "../../doctrine/lib/doctrine.js", "../../eslint-plugin-react/lib/util/componentUtil.js", "../../eslint-plugin-react/lib/util/annotations.js", "../../eslint-plugin-react/lib/util/props.js", "browser-external:fs", "browser-external:path", "browser-external:os", "../../resolve/lib/homedir.js", "../../resolve/lib/caller.js", "../../path-parse/index.js", "../../resolve/lib/node-modules-paths.js", "../../resolve/lib/normalize-options.js", "../../is-core-module/core.json", "../../is-core-module/index.js", "../../resolve/lib/async.js", "../../resolve/lib/sync.js", "../../resolve/index.js", "../../semver/semver.js", "../../eslint-plugin-react/lib/util/error.js", "../../eslint-plugin-react/lib/util/version.js", "../../es-iterator-helpers/Iterator.prototype.filter/implementation.js", "../../es-iterator-helpers/Iterator.prototype.filter/polyfill.js", "../../es-iterator-helpers/Iterator.prototype.filter/shim.js", "../../es-iterator-helpers/Iterator.prototype.filter/index.js", "../../es-iterator-helpers/Iterator.prototype.some/implementation.js", "../../es-iterator-helpers/Iterator.prototype.some/polyfill.js", "../../es-iterator-helpers/Iterator.prototype.some/shim.js", "../../es-iterator-helpers/Iterator.prototype.some/index.js", "../../eslint-plugin-react/lib/util/propWrapper.js", "../../eslint-plugin-react/lib/util/isFirstLetterCapitalized.js", "../../eslint-plugin-react/lib/util/propTypes.js", "../../jsx-ast-utils/lib/propName.js", "../../jsx-ast-utils/lib/hasProp.js", "../../jsx-ast-utils/lib/elementType.js", "../../array.prototype.flat/implementation.js", "../../array.prototype.flat/polyfill.js", "../../array.prototype.flat/shim.js", "../../array.prototype.flat/index.js", "../../jsx-ast-utils/lib/eventHandlers.js", "../../jsx-ast-utils/lib/getProp.js", "../../jsx-ast-utils/lib/values/Literal.js", "../../jsx-ast-utils/lib/values/JSXElement.js", "../../jsx-ast-utils/lib/values/JSXText.js", "../../jsx-ast-utils/lib/values/JSXFragment.js", "../../jsx-ast-utils/lib/values/expressions/Identifier.js", "../../jsx-ast-utils/lib/values/expressions/TemplateLiteral.js", "../../jsx-ast-utils/lib/values/expressions/TaggedTemplateExpression.js", "../../jsx-ast-utils/lib/values/expressions/FunctionExpression.js", "../../jsx-ast-utils/lib/values/expressions/LogicalExpression.js", "../../jsx-ast-utils/lib/values/expressions/MemberExpression.js", "../../jsx-ast-utils/lib/values/expressions/ChainExpression.js", "../../jsx-ast-utils/lib/values/expressions/OptionalCallExpression.js", "../../jsx-ast-utils/lib/values/expressions/OptionalMemberExpression.js", "../../jsx-ast-utils/lib/values/expressions/CallExpression.js", "../../jsx-ast-utils/lib/values/expressions/UnaryExpression.js", "../../jsx-ast-utils/lib/values/expressions/ThisExpression.js", "../../jsx-ast-utils/lib/values/expressions/ConditionalExpression.js", "../../jsx-ast-utils/lib/values/expressions/BinaryExpression.js", "../../object.assign/implementation.js", "../../object.assign/polyfill.js", "../../object.assign/shim.js", "../../object.assign/index.js", "../../jsx-ast-utils/lib/values/expressions/ObjectExpression.js", "../../jsx-ast-utils/lib/values/expressions/NewExpression.js", "../../jsx-ast-utils/lib/values/expressions/UpdateExpression.js", "../../jsx-ast-utils/lib/values/expressions/ArrayExpression.js", "../../jsx-ast-utils/lib/values/expressions/BindExpression.js", "../../jsx-ast-utils/lib/values/expressions/SpreadElement.js", "../../jsx-ast-utils/lib/values/expressions/TypeCastExpression.js", "../../jsx-ast-utils/lib/values/expressions/SequenceExpression.js", "../../jsx-ast-utils/lib/values/expressions/TSNonNullExpression.js", "../../jsx-ast-utils/lib/values/expressions/AssignmentExpression.js", "../../jsx-ast-utils/lib/values/expressions/index.js", "../../jsx-ast-utils/lib/values/index.js", "../../jsx-ast-utils/lib/getPropValue.js", "../../jsx-ast-utils/lib/index.js", "../../jsx-ast-utils/elementType.js", "../../eslint-plugin-react/lib/util/isDestructuredFromPragmaImport.js", "../../eslint-plugin-react/lib/util/isCreateElement.js", "../../eslint-plugin-react/lib/util/jsx.js", "../../eslint-plugin-react/lib/util/usedPropTypes.js", "../../eslint-plugin-react/lib/util/defaultProps.js", "../../eslint-plugin-react/lib/util/Components.js", "../../eslint-plugin-react/lib/util/docsUrl.js", "../../eslint/package.json", "../../eslint-plugin-react/lib/util/message.js", "../../eslint-plugin-react/lib/util/report.js", "../../eslint-plugin-react/lib/rules/boolean-prop-naming.js", "../../jsx-ast-utils/getProp.js", "../../jsx-ast-utils/getLiteralPropValue.js", "../../eslint-plugin-react/lib/rules/button-has-type.js", "../../eslint-plugin-react/lib/rules/checked-requires-onchange-or-readonly.js", "../../eslint-plugin-react/lib/rules/default-props-match-prop-types.js", "../../eslint-plugin-react/lib/rules/destructuring-assignment.js", "../../es-iterator-helpers/Iterator.prototype.forEach/implementation.js", "../../es-iterator-helpers/Iterator.prototype.forEach/polyfill.js", "../../es-iterator-helpers/Iterator.prototype.forEach/shim.js", "../../es-iterator-helpers/Iterator.prototype.forEach/index.js", "../../eslint-plugin-react/lib/util/isCreateContext.js", "../../eslint-plugin-react/lib/rules/display-name.js", "../../concat-map/index.js", "../../balanced-match/index.js", "../../brace-expansion/index.js", "../../minimatch/minimatch.js", "../../eslint-plugin-react/lib/rules/forbid-component-props.js", "../../eslint-plugin-react/lib/rules/forbid-dom-props.js", "../../eslint-plugin-react/lib/rules/forbid-elements.js", "../../eslint-plugin-react/lib/rules/forbid-foreign-prop-types.js", "../../eslint-plugin-react/lib/rules/forbid-prop-types.js", "../../eslint-plugin-react/lib/rules/forward-ref-uses-ref.js", "../../eslint-plugin-react/lib/rules/function-component-definition.js", "../../eslint-plugin-react/lib/rules/hook-use-state.js", "../../eslint-plugin-react/lib/rules/iframe-missing-sandbox.js", "../../eslint-plugin-react/lib/rules/jsx-boolean-value.js", "../../eslint-plugin-react/lib/rules/jsx-child-element-spacing.js", "../../es-abstract/helpers/callBind.js", "../../es-abstract/2019/RequireObjectCoercible.js", "../../es-abstract/2019/ToString.js", "../../es-abstract/5/abs.js", "../../es-abstract/5/floor.js", "../../es-to-primitive/es5.js", "../../es-abstract/5/ToPrimitive.js", "../../es-abstract/5/ToNumber.js", "../../es-abstract/helpers/sign.js", "../../es-abstract/5/ToInteger.js", "../../es-abstract/2019/ToPrimitive.js", "../../es-abstract/2019/ToNumber.js", "../../es-abstract/2019/ToInteger.js", "../../string.prototype.repeat/implementation.js", "../../string.prototype.repeat/polyfill.js", "../../string.prototype.repeat/shim.js", "../../string.prototype.repeat/index.js", "../../eslint-plugin-react/lib/rules/jsx-closing-bracket-location.js", "../../eslint-plugin-react/lib/rules/jsx-closing-tag-location.js", "../../eslint-plugin-react/lib/rules/jsx-curly-spacing.js", "../../eslint-plugin-react/lib/rules/jsx-curly-newline.js", "../../eslint-plugin-react/lib/rules/jsx-equals-spacing.js", "../../eslint-plugin-react/lib/rules/jsx-filename-extension.js", "../../eslint-plugin-react/lib/rules/jsx-first-prop-new-line.js", "../../eslint-plugin-react/lib/rules/jsx-handler-names.js", "../../es-abstract/2024/IsRegExp.js", "../../regexp.prototype.flags/implementation.js", "../../regexp.prototype.flags/polyfill.js", "../../regexp.prototype.flags/shim.js", "../../regexp.prototype.flags/index.js", "../../es-abstract/2024/DefinePropertyOrThrow.js", "../../es-abstract/2024/DefineMethodProperty.js", "../../es-abstract/2024/RegExpExec.js", "../../es-abstract/2024/Set.js", "../../es-abstract/2024/CreateRegExpStringIterator.js", "../../es-abstract/2024/IsConstructor.js", "../../es-abstract/2024/SpeciesConstructor.js", "../../string.prototype.matchall/regexp-matchall.js", "../../string.prototype.matchall/polyfill-regexp-matchall.js", "../../string.prototype.matchall/implementation.js", "../../string.prototype.matchall/polyfill.js", "../../string.prototype.matchall/shim.js", "../../string.prototype.matchall/index.js", "../../eslint-plugin-react/lib/rules/jsx-indent.js", "../../eslint-plugin-react/lib/rules/jsx-indent-props.js", "../../jsx-ast-utils/hasProp.js", "../../jsx-ast-utils/propName.js", "../../eslint-plugin-react/lib/rules/jsx-key.js", "../../eslint-plugin-react/lib/rules/jsx-max-depth.js", "../../eslint-plugin-react/lib/rules/jsx-max-props-per-line.js", "../../eslint-plugin-react/lib/rules/jsx-newline.js", "../../eslint-plugin-react/lib/rules/jsx-no-bind.js", "../../eslint-plugin-react/lib/rules/jsx-no-comment-textnodes.js", "../../eslint-plugin-react/lib/rules/jsx-no-constructed-context-values.js", "../../eslint-plugin-react/lib/rules/jsx-no-duplicate-props.js", "../../es-iterator-helpers/Iterator.prototype.find/implementation.js", "../../es-iterator-helpers/Iterator.prototype.find/polyfill.js", "../../es-iterator-helpers/Iterator.prototype.find/shim.js", "../../es-iterator-helpers/Iterator.prototype.find/index.js", "../../eslint-plugin-react/lib/rules/jsx-no-leaked-render.js", "../../es-iterator-helpers/Iterator.prototype.flatMap/implementation.js", "../../es-iterator-helpers/Iterator.prototype.flatMap/polyfill.js", "../../es-iterator-helpers/Iterator.prototype.flatMap/shim.js", "../../es-iterator-helpers/Iterator.prototype.flatMap/index.js", "../../eslint-plugin-react/lib/rules/jsx-no-literals.js", "../../eslint-plugin-react/lib/util/linkComponents.js", "../../eslint-plugin-react/lib/rules/jsx-no-script-url.js", "../../eslint-plugin-react/lib/rules/jsx-no-target-blank.js", "../../eslint-plugin-react/lib/rules/jsx-no-useless-fragment.js", "../../eslint-plugin-react/lib/rules/jsx-one-expression-per-line.js", "../../eslint-plugin-react/lib/rules/jsx-no-undef.js", "../../eslint-plugin-react/lib/rules/jsx-curly-brace-presence.js", "../../eslint-plugin-react/lib/rules/jsx-pascal-case.js", "../../eslint-plugin-react/lib/rules/jsx-fragments.js", "../../eslint-plugin-react/lib/rules/jsx-props-no-multi-spaces.js", "../../eslint-plugin-react/lib/rules/jsx-props-no-spreading.js", "../../eslint-plugin-react/lib/rules/jsx-props-no-spread-multi.js", "../../eslint-plugin-react/lib/util/log.js", "../../eslint-plugin-react/lib/rules/jsx-sort-default-props.js", "../../es-abstract/2024/ArrayCreate.js", "../../es-abstract/2024/StringToBigInt.js", "../../es-abstract/2024/ToNumeric.js", "../../es-abstract/2024/BigInt/lessThan.js", "../../es-abstract/2024/Number/lessThan.js", "../../es-abstract/2024/IsLessThan.js", "../../es-abstract/2024/CompareArrayElements.js", "../../es-abstract/2024/LengthOfArrayLike.js", "../../es-abstract/2024/HasProperty.js", "../../es-abstract/helpers/isAbstractClosure.js", "../../es-abstract/2024/SortIndexedProperties.js", "../../es-abstract/2024/ToObject.js", "../../array.prototype.tosorted/implementation.js", "../../array.prototype.tosorted/polyfill.js", "../../array.prototype.tosorted/shim.js", "../../array.prototype.tosorted/index.js", "../../eslint-plugin-react/lib/util/propTypesSort.js", "../../eslint-plugin-react/lib/rules/jsx-sort-props.js", "../../eslint-plugin-react/lib/util/getTokenBeforeClosingBracket.js", "../../eslint-plugin-react/lib/rules/jsx-space-before-closing.js", "../../eslint-plugin-react/lib/rules/jsx-tag-spacing.js", "../../eslint-plugin-react/lib/rules/jsx-uses-react.js", "../../eslint-plugin-react/lib/rules/jsx-uses-vars.js", "../../eslint-plugin-react/lib/rules/jsx-wrap-multilines.js", "../../eslint-plugin-react/lib/rules/no-invalid-html-attribute.js", "../../eslint-plugin-react/lib/rules/no-access-state-in-setstate.js", "../../eslint-plugin-react/lib/rules/no-adjacent-inline-elements.js", "../../eslint-plugin-react/lib/rules/no-array-index-key.js", "../../eslint-plugin-react/lib/util/lifecycleMethods.js", "../../eslint-plugin-react/lib/rules/no-arrow-function-lifecycle.js", "../../eslint-plugin-react/lib/rules/no-children-prop.js", "../../eslint-plugin-react/lib/rules/no-danger.js", "../../eslint-plugin-react/lib/rules/no-danger-with-children.js", "../../eslint-plugin-react/lib/rules/no-deprecated.js", "../../array.prototype.findlast/implementation.js", "../../array.prototype.findlast/polyfill.js", "../../array.prototype.findlast/shim.js", "../../array.prototype.findlast/index.js", "../../eslint-plugin-react/lib/util/makeNoMethodSetStateRule.js", "../../eslint-plugin-react/lib/rules/no-did-mount-set-state.js", "../../eslint-plugin-react/lib/rules/no-did-update-set-state.js", "../../eslint-plugin-react/lib/rules/no-direct-mutation-state.js", "../../eslint-plugin-react/lib/rules/no-find-dom-node.js", "../../eslint-plugin-react/lib/rules/no-is-mounted.js", "../../eslint-plugin-react/lib/rules/no-multi-comp.js", "../../eslint-plugin-react/lib/rules/no-namespace.js", "../../eslint-plugin-react/lib/rules/no-set-state.js", "../../eslint-plugin-react/lib/rules/no-string-refs.js", "../../eslint-plugin-react/lib/rules/no-redundant-should-component-update.js", "../../eslint-plugin-react/lib/rules/no-render-return-value.js", "../../eslint-plugin-react/lib/rules/no-this-in-sfc.js", "../../react-is/cjs/react-is.development.js", "../../react-is/index.js", "../../object-assign/index.js", "../../prop-types/lib/ReactPropTypesSecret.js", "../../prop-types/lib/has.js", "../../prop-types/checkPropTypes.js", "../../prop-types/factoryWithTypeCheckers.js", "../../prop-types/index.js", "../../eslint-plugin-react/lib/rules/no-typos.js", "../../eslint-plugin-react/lib/rules/no-unescaped-entities.js", "../../eslint-plugin-react/lib/rules/no-unknown-property.js", "../../eslint-plugin-react/lib/rules/no-unsafe.js", "../../eslint-plugin-react/lib/rules/no-unstable-nested-components.js", "../../eslint-plugin-react/lib/rules/no-unused-class-component-methods.js", "../../eslint-plugin-react/lib/rules/no-unused-prop-types.js", "../../eslint-plugin-react/lib/rules/no-unused-state.js", "../../eslint-plugin-react/lib/rules/no-object-type-as-default-prop.js", "../../eslint-plugin-react/lib/rules/no-will-update-set-state.js", "../../eslint-plugin-react/lib/rules/prefer-es6-class.js", "../../eslint-plugin-react/lib/rules/prefer-exact-props.js", "../../eslint-plugin-react/lib/rules/prefer-read-only-props.js", "../../eslint-plugin-react/lib/rules/prefer-stateless-function.js", "../../eslint-plugin-react/lib/rules/prop-types.js", "../../eslint-plugin-react/lib/rules/react-in-jsx-scope.js", "../../eslint-plugin-react/lib/rules/require-default-props.js", "../../eslint-plugin-react/lib/rules/require-optimization.js", "../../eslint-plugin-react/lib/rules/require-render-return.js", "../../eslint-plugin-react/lib/rules/self-closing-comp.js", "../../eslint-plugin-react/lib/rules/sort-comp.js", "../../eslint-plugin-react/lib/rules/sort-default-props.js", "../../eslint-plugin-react/lib/rules/sort-prop-types.js", "../../eslint-plugin-react/lib/rules/state-in-constructor.js", "../../eslint-plugin-react/lib/rules/static-property-placement.js", "../../eslint-plugin-react/lib/rules/style-prop-object.js", "../../eslint-plugin-react/lib/rules/void-dom-elements-no-children.js", "../../eslint-plugin-react/lib/rules/index.js", "../../eslint-plugin-react/index.js"],
  "sourcesContent": ["'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n", "'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n", "'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n", "'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n", "'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n", "'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n", "'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n", "'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n", "'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\nvar test = {\n\t__proto__: null,\n\tfoo: {}\n};\n\nvar $Object = Object;\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n\t// @ts-expect-error: TS errors on an inherited property for some reason\n\treturn { __proto__: test }.foo === test.foo\n\t\t&& !(test instanceof $Object);\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n", "'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n", "'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n", "'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = require('define-data-property');\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = require('has-property-descriptors')();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = require('es-errors/type');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = require('es-define-property');\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Array = GetIntrinsic('%Array%');\n\n// eslint-disable-next-line global-require\nvar toStr = !$Array.isArray && require('call-bind/callBound')('Object.prototype.toString');\n\nmodule.exports = $Array.isArray || function IsArray(argument) {\n\treturn toStr(argument) === '[object Array]';\n};\n", "'use strict';\n\n// https://262.ecma-international.org/6.0/#sec-isarray\nmodule.exports = require('../helpers/IsArray');\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\n\nvar $TypeError = require('es-errors/type');\n\nvar IsArray = require('./IsArray');\n\nvar $apply = GetIntrinsic('%Reflect.apply%', true) || callBound('Function.prototype.apply');\n\n// https://262.ecma-international.org/6.0/#sec-call\n\nmodule.exports = function Call(F, V) {\n\tvar argumentsList = arguments.length > 2 ? arguments[2] : [];\n\tif (!IsArray(argumentsList)) {\n\t\tthrow new $TypeError('Assertion failed: optional `argumentsList`, if provided, must be a List');\n\t}\n\treturn $apply(F, V, argumentsList);\n};\n", "'use strict';\n\n// https://262.ecma-international.org/6.0/#sec-ispropertykey\n\nmodule.exports = function IsPropertyKey(argument) {\n\treturn typeof argument === 'string' || typeof argument === 'symbol';\n};\n", "'use strict';\n\n// https://262.ecma-international.org/5.1/#sec-8\n\nmodule.exports = function Type(x) {\n\tif (x === null) {\n\t\treturn 'Null';\n\t}\n\tif (typeof x === 'undefined') {\n\t\treturn 'Undefined';\n\t}\n\tif (typeof x === 'function' || typeof x === 'object') {\n\t\treturn 'Object';\n\t}\n\tif (typeof x === 'number') {\n\t\treturn 'Number';\n\t}\n\tif (typeof x === 'boolean') {\n\t\treturn 'Boolean';\n\t}\n\tif (typeof x === 'string') {\n\t\treturn 'String';\n\t}\n};\n", "'use strict';\n\nvar ES5Type = require('../5/Type');\n\n// https://262.ecma-international.org/11.0/#sec-ecmascript-data-types-and-values\n\nmodule.exports = function Type(x) {\n\tif (typeof x === 'symbol') {\n\t\treturn 'Symbol';\n\t}\n\tif (typeof x === 'bigint') {\n\t\treturn 'BigInt';\n\t}\n\treturn ES5Type(x);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar inspect = require('object-inspect');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-get-o-p\n\nmodule.exports = function Get(O, P) {\n\t// 7.3.1.1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\t// 7.3.1.2\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n\t}\n\t// 7.3.1.3\n\treturn O[P];\n};\n", "'use strict';\n\nmodule.exports = function isLeadingSurrogate(charCode) {\n\treturn typeof charCode === 'number' && charCode >= 0xD800 && charCode <= 0xDBFF;\n};\n", "'use strict';\n\nmodule.exports = function isTrailingSurrogate(charCode) {\n\treturn typeof charCode === 'number' && charCode >= 0xDC00 && charCode <= 0xDFFF;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = require('es-errors/type');\nvar $fromCharCode = GetIntrinsic('%String.fromCharCode%');\n\nvar isLeadingSurrogate = require('../helpers/isLeadingSurrogate');\nvar isTrailingSurrogate = require('../helpers/isTrailingSurrogate');\n\n// https://tc39.es/ecma262/2020/#sec-utf16decodesurrogatepair\n\nmodule.exports = function UTF16SurrogatePairToCodePoint(lead, trail) {\n\tif (!isLeadingSurrogate(lead) || !isTrailingSurrogate(trail)) {\n\t\tthrow new $TypeError('Assertion failed: `lead` must be a leading surrogate char code, and `trail` must be a trailing surrogate char code');\n\t}\n\t// var cp = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n\treturn $fromCharCode(lead) + $fromCharCode(trail);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar callBound = require('call-bind/callBound');\nvar isLeadingSurrogate = require('../helpers/isLeadingSurrogate');\nvar isTrailingSurrogate = require('../helpers/isTrailingSurrogate');\n\nvar UTF16SurrogatePairToCodePoint = require('./UTF16SurrogatePairToCodePoint');\n\nvar $charAt = callBound('String.prototype.charAt');\nvar $charCodeAt = callBound('String.prototype.charCodeAt');\n\n// https://262.ecma-international.org/12.0/#sec-codepointat\n\nmodule.exports = function CodePointAt(string, position) {\n\tif (typeof string !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `string` must be a String');\n\t}\n\tvar size = string.length;\n\tif (position < 0 || position >= size) {\n\t\tthrow new $TypeError('Assertion failed: `position` must be >= 0, and < the length of `string`');\n\t}\n\tvar first = $charCodeAt(string, position);\n\tvar cp = $charAt(string, position);\n\tvar firstIsLeading = isLeadingSurrogate(first);\n\tvar firstIsTrailing = isTrailingSurrogate(first);\n\tif (!firstIsLeading && !firstIsTrailing) {\n\t\treturn {\n\t\t\t'[[CodePoint]]': cp,\n\t\t\t'[[CodeUnitCount]]': 1,\n\t\t\t'[[IsUnpairedSurrogate]]': false\n\t\t};\n\t}\n\tif (firstIsTrailing || (position + 1 === size)) {\n\t\treturn {\n\t\t\t'[[CodePoint]]': cp,\n\t\t\t'[[CodeUnitCount]]': 1,\n\t\t\t'[[IsUnpairedSurrogate]]': true\n\t\t};\n\t}\n\tvar second = $charCodeAt(string, position + 1);\n\tif (!isTrailingSurrogate(second)) {\n\t\treturn {\n\t\t\t'[[CodePoint]]': cp,\n\t\t\t'[[CodeUnitCount]]': 1,\n\t\t\t'[[IsUnpairedSurrogate]]': true\n\t\t};\n\t}\n\n\treturn {\n\t\t'[[CodePoint]]': UTF16SurrogatePairToCodePoint(first, second),\n\t\t'[[CodeUnitCount]]': 2,\n\t\t'[[IsUnpairedSurrogate]]': false\n\t};\n};\n", "'use strict';\n\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n", "'use strict';\n\nvar $isNaN = require('./isNaN');\n\nmodule.exports = function (x) { return (typeof x === 'number' || typeof x === 'bigint') && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $abs = GetIntrinsic('%Math.abs%');\nvar $floor = GetIntrinsic('%Math.floor%');\n\nvar $isNaN = require('./isNaN');\nvar $isFinite = require('./isFinite');\n\nmodule.exports = function isInteger(argument) {\n\tif (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n\t\treturn false;\n\t}\n\tvar absValue = $abs(argument);\n\treturn $floor(absValue) === absValue;\n};\n\n", "'use strict';\n\nmodule.exports = Number.MAX_SAFE_INTEGER || 9007199254740991; // Math.pow(2, 53) - 1;\n", "'use strict';\n\nvar CodePointAt = require('./CodePointAt');\n\nvar isInteger = require('../helpers/isInteger');\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\n\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/12.0/#sec-advancestringindex\n\nmodule.exports = function AdvanceStringIndex(S, index, unicode) {\n\tif (typeof S !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tif (!isInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {\n\t\tthrow new $TypeError('Assertion failed: `length` must be an integer >= 0 and <= 2**53');\n\t}\n\tif (typeof unicode !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: `unicode` must be a Boolean');\n\t}\n\tif (!unicode) {\n\t\treturn index + 1;\n\t}\n\tvar length = S.length;\n\tif ((index + 1) >= length) {\n\t\treturn index + 1;\n\t}\n\tvar cp = CodePointAt(S, index);\n\treturn index + cp['[[CodeUnitCount]]'];\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/6.0/#sec-createiterresultobject\n\nmodule.exports = function CreateIterResultObject(value, done) {\n\tif (typeof done !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: Type(done) is not Boolean');\n\t}\n\treturn {\n\t\tvalue: value,\n\t\tdone: done\n\t};\n};\n", "'use strict';\n\n// http://262.ecma-international.org/5.1/#sec-9.2\n\nmodule.exports = function ToBoolean(value) { return !!value; };\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar ToBoolean = require('./ToBoolean');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-iteratorcomplete\n\nmodule.exports = function IteratorComplete(iterResult) {\n\tif (Type(iterResult) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t}\n\treturn ToBoolean(Get(iterResult, 'done'));\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-iteratorvalue\n\nmodule.exports = function IteratorValue(iterResult) {\n\tif (Type(iterResult) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t}\n\treturn Get(iterResult, 'value');\n};\n\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBind = require('call-bind');\nvar $SyntaxError = require('es-errors/syntax');\n\nvar $resolve = GetIntrinsic('%Promise.resolve%', true);\nvar $PromiseResolve = $resolve && callBind($resolve);\n\n// https://262.ecma-international.org/9.0/#sec-promise-resolve\n\nmodule.exports = function PromiseResolve(C, x) {\n\tif (!$PromiseResolve) {\n\t\tthrow new $SyntaxError('This environment does not support Promises.');\n\t}\n\treturn $PromiseResolve(C, x);\n};\n\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $Promise = GetIntrinsic('%Promise%', true);\n\nvar callBound = require('call-bind/callBound');\n\nvar CreateIterResultObject = require('./CreateIterResultObject');\nvar IteratorComplete = require('./IteratorComplete');\nvar IteratorValue = require('./IteratorValue');\nvar PromiseResolve = require('./PromiseResolve');\nvar Type = require('./Type');\n\nvar $then = callBound('Promise.prototype.then', true);\n\n// https://262.ecma-international.org/10.0/#sec-asyncfromsynciteratorcontinuation\n\nmodule.exports = function AsyncFromSyncIteratorContinuation(result) {\n\tif (Type(result) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\n\tif (arguments.length > 1) {\n\t\tthrow new $SyntaxError('although AsyncFromSyncIteratorContinuation should take a second argument, it is not used in this implementation');\n\t}\n\n\tif (!$Promise) {\n\t\tthrow new $SyntaxError('This environment does not support Promises.');\n\t}\n\n\treturn new $Promise(function (resolve) {\n\t\tvar done = IteratorComplete(result); // step 2\n\t\tvar value = IteratorValue(result); // step 4\n\t\tvar valueWrapper = PromiseResolve($Promise, value); // step 6\n\n\t\t// eslint-disable-next-line no-shadow\n\t\tvar onFulfilled = function (value) { // steps 8-9\n\t\t\treturn CreateIterResultObject(value, done); // step 8.a\n\t\t};\n\t\tresolve($then(valueWrapper, onFulfilled)); // step 11\n\t}); // step 12\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar inspect = require('object-inspect');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n// var ToObject = require('./ToObject');\n\n// https://262.ecma-international.org/6.0/#sec-getv\n\nmodule.exports = function GetV(V, P) {\n\t// 7.3.2.1\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n\t}\n\n\t// 7.3.2.2-3\n\t// var O = ToObject(V);\n\n\t// 7.3.2.4\n\treturn V[P];\n};\n", "'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n", "'use strict';\n\n// http://262.ecma-international.org/5.1/#sec-9.11\n\nmodule.exports = require('is-callable');\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar GetV = require('./GetV');\nvar IsCallable = require('./IsCallable');\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar inspect = require('object-inspect');\n\n// https://262.ecma-international.org/6.0/#sec-getmethod\n\nmodule.exports = function GetMethod(O, P) {\n\t// 7.3.9.1\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\n\t// 7.3.9.2\n\tvar func = GetV(O, P);\n\n\t// 7.3.9.4\n\tif (func == null) {\n\t\treturn void 0;\n\t}\n\n\t// 7.3.9.5\n\tif (!IsCallable(func)) {\n\t\tthrow new $TypeError(inspect(P) + ' is not a function: ' + inspect(func));\n\t}\n\n\t// 7.3.9.6\n\treturn func;\n};\n", "'use strict';\n\nvar hasOwn = require('hasown');\n\nmodule.exports = function isIteratorRecord(value) {\n\treturn !!value\n\t\t&& typeof value === 'object'\n\t\t&& hasOwn(value, '[[Iterator]]')\n\t\t&& hasOwn(value, '[[NextMethod]]')\n\t\t&& typeof value['[[NextMethod]]'] === 'function'\n\t\t&& hasOwn(value, '[[Done]]')\n\t\t&& typeof value['[[Done]]'] === 'boolean';\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar Type = require('./Type');\n\nvar isIteratorRecord = require('../helpers/records/iterator-record');\n\n// https://262.ecma-international.org/14.0/#sec-iteratornext\n\nmodule.exports = function IteratorNext(iteratorRecord) {\n\tif (!isIteratorRecord(iteratorRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `iteratorRecord` must be an Iterator Record'); // step 1\n\t}\n\n\tvar result;\n\tif (arguments.length < 2) { // step 1\n\t\tresult = Call(iteratorRecord['[[NextMethod]]'], iteratorRecord['[[Iterator]]']); // step 1.a\n\t} else { // step 2\n\t\tresult = Call(iteratorRecord['[[NextMethod]]'], iteratorRecord['[[Iterator]]'], [arguments[1]]); // step 2.a\n\t}\n\n\tif (Type(result) !== 'Object') {\n\t\tthrow new $TypeError('iterator next must return an object'); // step 3\n\t}\n\treturn result; // step 4\n};\n", "'use strict';\n\nmodule.exports = function forEach(array, callback) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tcallback(array[i], i, array); // eslint-disable-line callback-return\n\t}\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('.').listGetNode} */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\tfor (; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('.').listGet} */\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('.').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('.').listHas} */\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @type {WeakMap<object, unknown>} */ var $wm;\n\t/** @type {Map<object, unknown>} */ var $m;\n\t/** @type {import('.').RootNode<unknown>} */ var $o;\n\n\t/** @type {import('.').Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n", "'use strict';\n\nvar hasOwn = require('hasown');\nvar channel = require('side-channel')();\n\nvar $TypeError = require('es-errors/type');\n\nvar SLOT = {\n\tassert: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tchannel.assert(O);\n\t\tif (!SLOT.has(O, slot)) {\n\t\t\tthrow new $TypeError('`' + slot + '` is not present on `O`');\n\t\t}\n\t},\n\tget: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\treturn slots && slots['$' + slot];\n\t},\n\thas: function (O, slot) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\treturn !!slots && hasOwn(slots, '$' + slot);\n\t},\n\tset: function (O, slot, V) {\n\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\tthrow new $TypeError('`O` is not an object');\n\t\t}\n\t\tif (typeof slot !== 'string') {\n\t\t\tthrow new $TypeError('`slot` must be a string');\n\t\t}\n\t\tvar slots = channel.get(O);\n\t\tif (!slots) {\n\t\t\tslots = {};\n\t\t\tchannel.set(O, slots);\n\t\t}\n\t\tslots['$' + slot] = V;\n\t}\n};\n\nif (Object.freeze) {\n\tObject.freeze(SLOT);\n}\n\nmodule.exports = SLOT;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $ObjectCreate = GetIntrinsic('%Object.create%', true);\nvar $TypeError = require('es-errors/type');\nvar $SyntaxError = require('es-errors/syntax');\n\nvar IsArray = require('./IsArray');\nvar Type = require('./Type');\n\nvar forEach = require('../helpers/forEach');\n\nvar SLOT = require('internal-slot');\n\nvar hasProto = require('has-proto')();\n\n// https://262.ecma-international.org/11.0/#sec-objectcreate\n\nmodule.exports = function OrdinaryObjectCreate(proto) {\n\tif (proto !== null && Type(proto) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `proto` must be null or an object');\n\t}\n\tvar additionalInternalSlotsList = arguments.length < 2 ? [] : arguments[1];\n\tif (!IsArray(additionalInternalSlotsList)) {\n\t\tthrow new $TypeError('Assertion failed: `additionalInternalSlotsList` must be an Array');\n\t}\n\n\t// var internalSlotsList = ['[[Prototype]]', '[[Extensible]]']; // step 1\n\t// internalSlotsList.push(...additionalInternalSlotsList); // step 2\n\t// var O = MakeBasicObject(internalSlotsList); // step 3\n\t// setProto(O, proto); // step 4\n\t// return O; // step 5\n\n\tvar O;\n\tif ($ObjectCreate) {\n\t\tO = $ObjectCreate(proto);\n\t} else if (hasProto) {\n\t\tO = { __proto__: proto };\n\t} else {\n\t\tif (proto === null) {\n\t\t\tthrow new $SyntaxError('native Object.create support is required to create null objects');\n\t\t}\n\t\tvar T = function T() {};\n\t\tT.prototype = proto;\n\t\tO = new T();\n\t}\n\n\tif (additionalInternalSlotsList.length > 0) {\n\t\tforEach(additionalInternalSlotsList, function (slot) {\n\t\t\tSLOT.set(O, slot, void undefined);\n\t\t});\n\t}\n\n\treturn O;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $Promise = GetIntrinsic('%Promise%', true);\n\nvar AsyncFromSyncIteratorContinuation = require('./AsyncFromSyncIteratorContinuation');\nvar Call = require('./Call');\nvar CreateIterResultObject = require('./CreateIterResultObject');\nvar Get = require('./Get');\nvar GetMethod = require('./GetMethod');\nvar IteratorNext = require('./IteratorNext');\nvar OrdinaryObjectCreate = require('./OrdinaryObjectCreate');\nvar Type = require('./Type');\n\nvar SLOT = require('internal-slot');\n\nvar isIteratorRecord = require('../helpers/records/iterator-record');\n\nvar $AsyncFromSyncIteratorPrototype = GetIntrinsic('%AsyncFromSyncIteratorPrototype%', true) || {\n\tnext: function next(value) {\n\t\tif (!$Promise) {\n\t\t\tthrow new $SyntaxError('This environment does not support Promises.');\n\t\t}\n\n\t\tvar O = this; // step 1\n\n\t\tSLOT.assert(O, '[[SyncIteratorRecord]]'); // step 2\n\n\t\tvar argsLength = arguments.length;\n\n\t\treturn new $Promise(function (resolve) { // step 3\n\t\t\tvar syncIteratorRecord = SLOT.get(O, '[[SyncIteratorRecord]]'); // step 4\n\t\t\tvar result;\n\t\t\tif (argsLength > 0) {\n\t\t\t\tresult = IteratorNext(syncIteratorRecord, value); // step 5.a\n\t\t\t} else { // step 6\n\t\t\t\tresult = IteratorNext(syncIteratorRecord);// step 6.a\n\t\t\t}\n\t\t\tresolve(AsyncFromSyncIteratorContinuation(result)); // step 8\n\t\t});\n\t},\n\t'return': function () {\n\t\tif (!$Promise) {\n\t\t\tthrow new $SyntaxError('This environment does not support Promises.');\n\t\t}\n\n\t\tvar O = this; // step 1\n\n\t\tSLOT.assert(O, '[[SyncIteratorRecord]]'); // step 2\n\n\t\tvar valueIsPresent = arguments.length > 0;\n\t\tvar value = valueIsPresent ? arguments[0] : void undefined;\n\n\t\treturn new $Promise(function (resolve, reject) { // step 3\n\t\t\tvar syncIterator = SLOT.get(O, '[[SyncIteratorRecord]]')['[[Iterator]]']; // step 4\n\t\t\tvar iteratorReturn = GetMethod(syncIterator, 'return'); // step 5\n\n\t\t\tif (typeof iteratorReturn === 'undefined') { // step 7\n\t\t\t\tvar iterResult = CreateIterResultObject(value, true); // step 7.a\n\t\t\t\tCall(resolve, undefined, [iterResult]); // step 7.b\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar result;\n\t\t\tif (valueIsPresent) { // step 8\n\t\t\t\tresult = Call(iteratorReturn, syncIterator, [value]); // step 8.a\n\t\t\t} else { // step 9\n\t\t\t\tresult = Call(iteratorReturn, syncIterator); // step 9.a\n\t\t\t}\n\t\t\tif (Type(result) !== 'Object') { // step 11\n\t\t\t\tCall(reject, undefined, [new $TypeError('Iterator `return` method returned a non-object value.')]); // step 11.a\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(AsyncFromSyncIteratorContinuation(result)); // step 12\n\t\t});\n\t},\n\t'throw': function () {\n\t\tif (!$Promise) {\n\t\t\tthrow new $SyntaxError('This environment does not support Promises.');\n\t\t}\n\n\t\tvar O = this; // step 1\n\n\t\tSLOT.assert(O, '[[SyncIteratorRecord]]'); // step 2\n\n\t\tvar valueIsPresent = arguments.length > 0;\n\t\tvar value = valueIsPresent ? arguments[0] : void undefined;\n\n\t\treturn new $Promise(function (resolve, reject) { // step 3\n\t\t\tvar syncIterator = SLOT.get(O, '[[SyncIteratorRecord]]')['[[Iterator]]']; // step 4\n\n\t\t\tvar throwMethod = GetMethod(syncIterator, 'throw'); // step 5\n\n\t\t\tif (typeof throwMethod === 'undefined') { // step 7\n\t\t\t\tCall(reject, undefined, [value]); // step 7.a\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar result;\n\t\t\tif (valueIsPresent) { // step 8\n\t\t\t\tresult = Call(throwMethod, syncIterator, [value]); // step 8.a\n\t\t\t} else { // step 9\n\t\t\t\tresult = Call(throwMethod, syncIterator); // step 9.a\n\t\t\t}\n\t\t\tif (Type(result) !== 'Object') { // step 11\n\t\t\t\tCall(reject, undefined, [new $TypeError('Iterator `throw` method returned a non-object value.')]); // step 11.a\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(AsyncFromSyncIteratorContinuation(result/* , promiseCapability */)); // step 12\n\t\t});\n\t}\n};\n\n// https://262.ecma-international.org/14.0/#sec-createasyncfromsynciterator\n\nmodule.exports = function CreateAsyncFromSyncIterator(syncIteratorRecord) {\n\tif (!isIteratorRecord(syncIteratorRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `syncIteratorRecord` must be an Iterator Record');\n\t}\n\n\t// var asyncIterator = OrdinaryObjectCreate(%AsyncFromSyncIteratorPrototype%, « [[SyncIteratorRecord]] »); // step 1\n\tvar asyncIterator = OrdinaryObjectCreate($AsyncFromSyncIteratorPrototype);\n\n\tSLOT.set(asyncIterator, '[[SyncIteratorRecord]]', syncIteratorRecord); // step 2\n\n\tvar nextMethod = Get(asyncIterator, 'next'); // step 3\n\n\treturn { // steps 3-4\n\t\t'[[Iterator]]': asyncIterator,\n\t\t'[[NextMethod]]': nextMethod,\n\t\t'[[Done]]': false\n\t};\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/15.0/#sec-getiteratorfrommethod\n\nmodule.exports = function GetIteratorFromMethod(obj, method) {\n\tif (!IsCallable(method)) {\n\t\tthrow new $TypeError('method must be a function');\n\t}\n\n\tvar iterator = Call(method, obj); // step 1\n\tif (Type(iterator) !== 'Object') {\n\t\tthrow new $TypeError('iterator must return an object'); // step 2\n\t}\n\n\tvar nextMethod = Get(iterator, 'next'); // step 3\n\treturn { // steps 4-5\n\t\t'[[Iterator]]': iterator,\n\t\t'[[NextMethod]]': nextMethod,\n\t\t'[[Done]]': false\n\t};\n};\n", "'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n", "'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') {\n\t\treturn true;\n\t}\n\tif (typeof value !== 'object') {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n", "'use strict';\n\nvar hasSymbols = require('has-symbols')();\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar isString = require('is-string');\n\nvar $iterator = GetIntrinsic('%Symbol.iterator%', true);\nvar $stringSlice = callBound('String.prototype.slice');\nvar $String = GetIntrinsic('%String%');\n\nmodule.exports = function getIteratorMethod(ES, iterable) {\n\tvar usingIterator;\n\tif (hasSymbols) {\n\t\tusingIterator = ES.GetMethod(iterable, $iterator);\n\t} else if (ES.IsArray(iterable)) {\n\t\tusingIterator = function () {\n\t\t\tvar i = -1;\n\t\t\tvar arr = this; // eslint-disable-line no-invalid-this\n\t\t\treturn {\n\t\t\t\tnext: function () {\n\t\t\t\t\ti += 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: i >= arr.length,\n\t\t\t\t\t\tvalue: arr[i]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else if (isString(iterable)) {\n\t\tusingIterator = function () {\n\t\t\tvar i = 0;\n\t\t\treturn {\n\t\t\t\tnext: function () {\n\t\t\t\t\tvar nextIndex = ES.AdvanceStringIndex($String(iterable), i, true);\n\t\t\t\t\tvar value = $stringSlice(iterable, i, nextIndex);\n\t\t\t\t\ti = nextIndex;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: nextIndex > iterable.length,\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\treturn usingIterator;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = require('es-errors/type');\nvar $asyncIterator = GetIntrinsic('%Symbol.asyncIterator%', true);\n\nvar inspect = require('object-inspect');\nvar hasSymbols = require('has-symbols')();\n\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\nvar CreateAsyncFromSyncIterator = require('./CreateAsyncFromSyncIterator');\nvar GetIteratorFromMethod = require('./GetIteratorFromMethod');\nvar GetMethod = require('./GetMethod');\nvar IsArray = require('./IsArray');\n\nvar getIteratorMethod = require('../helpers/getIteratorMethod');\n\n// https://262.ecma-international.org/14.0/#sec-getiterator\n\nmodule.exports = function GetIterator(obj, kind) {\n\tif (kind !== 'SYNC' && kind !== 'ASYNC') {\n\t\tthrow new $TypeError(\"Assertion failed: `kind` must be one of 'sync' or 'async', got \" + inspect(kind));\n\t}\n\n\tvar method;\n\tif (kind === 'ASYNC') { // step 1\n\t\tif (hasSymbols && $asyncIterator) {\n\t\t\tmethod = GetMethod(obj, $asyncIterator); // step 1.a\n\t\t}\n\t}\n\tif (typeof method === 'undefined') { // step 1.b\n\t\t// var syncMethod = GetMethod(obj, $iterator); // step 1.b.i\n\t\tvar syncMethod = getIteratorMethod(\n\t\t\t{\n\t\t\t\tAdvanceStringIndex: AdvanceStringIndex,\n\t\t\t\tGetMethod: GetMethod,\n\t\t\t\tIsArray: IsArray\n\t\t\t},\n\t\t\tobj\n\t\t);\n\t\tif (kind === 'ASYNC') {\n\t\t\tif (typeof syncMethod === 'undefined') {\n\t\t\t\tthrow new $TypeError('iterator method is `undefined`'); // step 1.b.ii\n\t\t\t}\n\t\t\tvar syncIteratorRecord = GetIteratorFromMethod(obj, syncMethod); // step 1.b.iii\n\t\t\treturn CreateAsyncFromSyncIterator(syncIteratorRecord); // step 1.b.iv\n\t\t}\n\t\tmethod = syncMethod; // step 2, kind of\n\t}\n\n\tif (typeof method === 'undefined') {\n\t\tthrow new $TypeError('iterator method is `undefined`'); // step 3\n\t}\n\treturn GetIteratorFromMethod(obj, method); // step 4\n};\n", "'use strict';\n\nvar $SyntaxError = require('es-errors/syntax');\n\nvar SLOT = require('internal-slot');\n\n// https://262.ecma-international.org/7.0/#sec-completion-record-specification-type\n\nvar CompletionRecord = function CompletionRecord(type, value) {\n\tif (!(this instanceof CompletionRecord)) {\n\t\treturn new CompletionRecord(type, value);\n\t}\n\tif (type !== 'normal' && type !== 'break' && type !== 'continue' && type !== 'return' && type !== 'throw') {\n\t\tthrow new $SyntaxError('Assertion failed: `type` must be one of \"normal\", \"break\", \"continue\", \"return\", or \"throw\"');\n\t}\n\tSLOT.set(this, '[[Type]]', type);\n\tSLOT.set(this, '[[Value]]', value);\n\t// [[Target]] slot?\n};\n\nCompletionRecord.prototype.type = function Type() {\n\treturn SLOT.get(this, '[[Type]]');\n};\n\nCompletionRecord.prototype.value = function Value() {\n\treturn SLOT.get(this, '[[Value]]');\n};\n\nCompletionRecord.prototype['?'] = function ReturnIfAbrupt() {\n\tvar type = SLOT.get(this, '[[Type]]');\n\tvar value = SLOT.get(this, '[[Value]]');\n\n\tif (type === 'normal') {\n\t\treturn value;\n\t}\n\tif (type === 'throw') {\n\t\tthrow value;\n\t}\n\tthrow new $SyntaxError('Completion Record is not of type \"normal\" or \"throw\": other types not supported');\n};\n\nCompletionRecord.prototype['!'] = function assert() {\n\tvar type = SLOT.get(this, '[[Type]]');\n\n\tif (type !== 'normal') {\n\t\tthrow new $SyntaxError('Assertion failed: Completion Record is not of type \"normal\"');\n\t}\n\treturn SLOT.get(this, '[[Value]]');\n};\n\nmodule.exports = CompletionRecord;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar CompletionRecord = require('./CompletionRecord');\nvar GetMethod = require('./GetMethod');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\nvar isIteratorRecord = require('../helpers/records/iterator-record');\n\n// https://262.ecma-international.org/14.0/#sec-iteratorclose\n\nmodule.exports = function IteratorClose(iteratorRecord, completion) {\n\tif (!isIteratorRecord(iteratorRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `iteratorRecord` must be an Iterator Record'); // step 1\n\t}\n\tif (Type(iteratorRecord['[[Iterator]]']) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: iteratorRecord.[[Iterator]] must be an Object'); // step 1\n\t}\n\n\tif (!IsCallable(completion) && !(completion instanceof CompletionRecord)) { // step 2\n\t\tthrow new $TypeError('Assertion failed: completion is not a thunk representing a Completion Record, nor a Completion Record instance');\n\t}\n\tvar completionThunk = completion instanceof CompletionRecord ? function () { return completion['?'](); } : completion;\n\n\tvar iterator = iteratorRecord['[[Iterator]]']; // step 3\n\n\tvar iteratorReturn;\n\ttry {\n\t\titeratorReturn = GetMethod(iterator, 'return'); // step 4\n\t} catch (e) {\n\t\tcompletionThunk(); // throws if `completion` is a throw completion // step 6\n\t\tcompletionThunk = null; // ensure it's not called twice.\n\t\tthrow e; // step 7\n\t}\n\tif (typeof iteratorReturn === 'undefined') {\n\t\treturn completionThunk(); // step 5.a - 5.b\n\t}\n\n\tvar innerResult;\n\ttry {\n\t\tinnerResult = Call(iteratorReturn, iterator, []);\n\t} catch (e) {\n\t\t// if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n\n\t\tcompletionThunk(); // throws if `completion` is a throw completion // step 6\n\t\tcompletionThunk = null; // ensure it's not called twice.\n\n\t\t// if not, then return the innerResult completion\n\t\tthrow e; // step 7\n\t}\n\tvar completionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n\tcompletionThunk = null; // ensure it's not called twice.\n\n\tif (Type(innerResult) !== 'Object') {\n\t\tthrow new $TypeError('iterator .return must return an object');\n\t}\n\n\treturn completionRecord;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IteratorComplete = require('./IteratorComplete');\nvar IteratorNext = require('./IteratorNext');\n\nvar isIteratorRecord = require('../helpers/records/iterator-record');\n\n// https://262.ecma-international.org/14.0/#sec-iteratorstep\n\nmodule.exports = function IteratorStep(iteratorRecord) {\n\tif (!isIteratorRecord(iteratorRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `iteratorRecord` must be an Iterator Record'); // step 1\n\t}\n\n\tvar result = IteratorNext(iteratorRecord); // step 1\n\tvar done = IteratorComplete(result); // step 2\n\treturn done === true ? false : result; // steps 3-4\n};\n\n", "'use strict';\n\nvar CompletionRecord = require('./CompletionRecord');\n\n// https://262.ecma-international.org/9.0/#sec-throwcompletion\n\nmodule.exports = function ThrowCompletion(argument) {\n\treturn new CompletionRecord('throw', argument);\n};\n", "'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar Get = require('./Get');\nvar GetIterator = require('./GetIterator');\nvar IsCallable = require('./IsCallable');\nvar IteratorClose = require('./IteratorClose');\nvar IteratorStep = require('./IteratorStep');\nvar IteratorValue = require('./IteratorValue');\nvar ThrowCompletion = require('./ThrowCompletion');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/15.0/#sec-add-entries-from-iterable\n\nmodule.exports = function AddEntriesFromIterable(target, iterable, adder) {\n\tif (!IsCallable(adder)) {\n\t\tthrow new $TypeError('Assertion failed: `adder` is not callable');\n\t}\n\tif (iterable == null) {\n\t\tthrow new $TypeError('Assertion failed: `iterable` is present, and not nullish');\n\t}\n\tvar iteratorRecord = GetIterator(iterable, 'SYNC');\n\twhile (true) { // eslint-disable-line no-constant-condition\n\t\tvar next = IteratorStep(iteratorRecord);\n\t\tif (!next) {\n\t\t\treturn target;\n\t\t}\n\t\tvar nextItem = IteratorValue(next);\n\t\tif (Type(nextItem) !== 'Object') {\n\t\t\tvar error = ThrowCompletion(new $TypeError('iterator next must return an Object, got ' + inspect(nextItem)));\n\t\t\treturn IteratorClose(iteratorRecord, error);\n\t\t}\n\t\ttry {\n\t\t\tvar k = Get(nextItem, '0');\n\t\t\tvar v = Get(nextItem, '1');\n\t\t\tCall(adder, target, [k, v]);\n\t\t} catch (e) {\n\t\t\treturn IteratorClose(iteratorRecord, ThrowCompletion(e));\n\t\t}\n\t}\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar hasOwn = require('hasown');\n\nvar allowed = {\n\t__proto__: null,\n\t'[[Configurable]]': true,\n\t'[[Enumerable]]': true,\n\t'[[Get]]': true,\n\t'[[Set]]': true,\n\t'[[Value]]': true,\n\t'[[Writable]]': true\n};\n\n// https://262.ecma-international.org/6.0/#sec-property-descriptor-specification-type\n\nmodule.exports = function isPropertyDescriptor(Desc) {\n\tif (!Desc || typeof Desc !== 'object') {\n\t\treturn false;\n\t}\n\n\tfor (var key in Desc) { // eslint-disable-line\n\t\tif (hasOwn(Desc, key) && !allowed[key]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tvar isData = hasOwn(Desc, '[[Value]]') || hasOwn(Desc, '[[Writable]]');\n\tvar IsAccessor = hasOwn(Desc, '[[Get]]') || hasOwn(Desc, '[[Set]]');\n\tif (isData && IsAccessor) {\n\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t}\n\treturn true;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar hasOwn = require('hasown');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.1\n\nmodule.exports = function IsAccessorDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');\n\t}\n\n\tif (!hasOwn(Desc, '[[Get]]') && !hasOwn(Desc, '[[Set]]')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nmodule.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $preventExtensions = GetIntrinsic('%Object.preventExtensions%', true);\nvar $isExtensible = GetIntrinsic('%Object.isExtensible%', true);\n\nvar isPrimitive = require('../helpers/isPrimitive');\n\n// https://262.ecma-international.org/6.0/#sec-isextensible-o\n\nmodule.exports = $preventExtensions\n\t? function IsExtensible(obj) {\n\t\treturn !isPrimitive(obj) && $isExtensible(obj);\n\t}\n\t: function IsExtensible(obj) {\n\t\treturn !isPrimitive(obj);\n\t};\n", "'use strict';\n\nvar hasOwn = require('hasown');\n\nvar $TypeError = require('es-errors/type');\n\nvar Type = require('./Type');\nvar ToBoolean = require('./ToBoolean');\nvar IsCallable = require('./IsCallable');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.5\n\nmodule.exports = function ToPropertyDescriptor(Obj) {\n\tif (Type(Obj) !== 'Object') {\n\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t}\n\n\tvar desc = {};\n\tif (hasOwn(Obj, 'enumerable')) {\n\t\tdesc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);\n\t}\n\tif (hasOwn(Obj, 'configurable')) {\n\t\tdesc['[[Configurable]]'] = ToBoolean(Obj.configurable);\n\t}\n\tif (hasOwn(Obj, 'value')) {\n\t\tdesc['[[Value]]'] = Obj.value;\n\t}\n\tif (hasOwn(Obj, 'writable')) {\n\t\tdesc['[[Writable]]'] = ToBoolean(Obj.writable);\n\t}\n\tif (hasOwn(Obj, 'get')) {\n\t\tvar getter = Obj.get;\n\t\tif (typeof getter !== 'undefined' && !IsCallable(getter)) {\n\t\t\tthrow new $TypeError('getter must be a function');\n\t\t}\n\t\tdesc['[[Get]]'] = getter;\n\t}\n\tif (hasOwn(Obj, 'set')) {\n\t\tvar setter = Obj.set;\n\t\tif (typeof setter !== 'undefined' && !IsCallable(setter)) {\n\t\t\tthrow new $TypeError('setter must be a function');\n\t\t}\n\t\tdesc['[[Set]]'] = setter;\n\t}\n\n\tif ((hasOwn(desc, '[[Get]]') || hasOwn(desc, '[[Set]]')) && (hasOwn(desc, '[[Value]]') || hasOwn(desc, '[[Writable]]'))) {\n\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t}\n\treturn desc;\n};\n", "'use strict';\n\nvar $isNaN = require('../helpers/isNaN');\n\n// http://262.ecma-international.org/5.1/#sec-9.12\n\nmodule.exports = function SameValue(x, y) {\n\tif (x === y) { // 0 === -0, but they are not identical.\n\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\treturn true;\n\t}\n\treturn $isNaN(x) && $isNaN(y);\n};\n", "'use strict';\n\nvar hasPropertyDescriptors = require('has-property-descriptors');\n\nvar $defineProperty = require('es-define-property');\n\nvar hasArrayLengthDefineBug = hasPropertyDescriptors.hasArrayLengthDefineBug();\n\n// eslint-disable-next-line global-require\nvar isArray = hasArrayLengthDefineBug && require('../helpers/IsArray');\n\nvar callBound = require('call-bind/callBound');\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\n\n// eslint-disable-next-line max-params\nmodule.exports = function DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, desc) {\n\tif (!$defineProperty) {\n\t\tif (!IsDataDescriptor(desc)) {\n\t\t\t// ES3 does not support getters/setters\n\t\t\treturn false;\n\t\t}\n\t\tif (!desc['[[Configurable]]'] || !desc['[[Writable]]']) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// fallback for ES3\n\t\tif (P in O && $isEnumerable(O, P) !== !!desc['[[Enumerable]]']) {\n\t\t\t// a non-enumerable existing property\n\t\t\treturn false;\n\t\t}\n\n\t\t// property does not exist at all, or exists but is enumerable\n\t\tvar V = desc['[[Value]]'];\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tO[P] = V; // will use [[Define]]\n\t\treturn SameValue(O[P], V);\n\t}\n\tif (\n\t\thasArrayLengthDefineBug\n\t\t&& P === 'length'\n\t\t&& '[[Value]]' in desc\n\t\t&& isArray(O)\n\t\t&& O.length !== desc['[[Value]]']\n\t) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tO.length = desc['[[Value]]'];\n\t\treturn O.length === desc['[[Value]]'];\n\t}\n\n\t$defineProperty(O, P, FromPropertyDescriptor(desc));\n\treturn true;\n};\n", "'use strict';\n\nvar isPropertyDescriptor = require('./records/property-descriptor');\n\nmodule.exports = function isFullyPopulatedPropertyDescriptor(ES, Desc) {\n\treturn isPropertyDescriptor(Desc)\n\t\t&& typeof Desc === 'object'\n\t\t&& '[[Enumerable]]' in Desc\n\t\t&& '[[Configurable]]' in Desc\n\t\t&& (ES.IsAccessorDescriptor(Desc) || ES.IsDataDescriptor(Desc));\n};\n", "'use strict';\n\nmodule.exports = function fromPropertyDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn Desc;\n\t}\n\tvar obj = {};\n\tif ('[[Value]]' in Desc) {\n\t\tobj.value = Desc['[[Value]]'];\n\t}\n\tif ('[[Writable]]' in Desc) {\n\t\tobj.writable = !!Desc['[[Writable]]'];\n\t}\n\tif ('[[Get]]' in Desc) {\n\t\tobj.get = Desc['[[Get]]'];\n\t}\n\tif ('[[Set]]' in Desc) {\n\t\tobj.set = Desc['[[Set]]'];\n\t}\n\tif ('[[Enumerable]]' in Desc) {\n\t\tobj.enumerable = !!Desc['[[Enumerable]]'];\n\t}\n\tif ('[[Configurable]]' in Desc) {\n\t\tobj.configurable = !!Desc['[[Configurable]]'];\n\t}\n\treturn obj;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\nvar fromPropertyDescriptor = require('../helpers/fromPropertyDescriptor');\n\n// https://262.ecma-international.org/6.0/#sec-frompropertydescriptor\n\nmodule.exports = function FromPropertyDescriptor(Desc) {\n\tif (typeof Desc !== 'undefined' && !isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');\n\t}\n\n\treturn fromPropertyDescriptor(Desc);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar hasOwn = require('hasown');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.2\n\nmodule.exports = function IsDataDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');\n\t}\n\n\tif (!hasOwn(Desc, '[[Value]]') && !hasOwn(Desc, '[[Writable]]')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\n// https://262.ecma-international.org/6.0/#sec-isgenericdescriptor\n\nmodule.exports = function IsGenericDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');\n\t}\n\n\tif (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\nvar isFullyPopulatedPropertyDescriptor = require('../helpers/isFullyPopulatedPropertyDescriptor');\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/13.0/#sec-validateandapplypropertydescriptor\n\n// see https://github.com/tc39/ecma262/pull/2468 for ES2022 changes\n\n// eslint-disable-next-line max-lines-per-function, max-statements\nmodule.exports = function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n\tvar oType = Type(O);\n\tif (oType !== 'Undefined' && oType !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be undefined or an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tif (typeof extensible !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: extensible must be a Boolean');\n\t}\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (typeof current !== 'undefined' && !isPropertyDescriptor(current)) {\n\t\tthrow new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n\t}\n\n\tif (typeof current === 'undefined') { // step 2\n\t\tif (!extensible) {\n\t\t\treturn false; // step 2.a\n\t\t}\n\t\tif (oType === 'Undefined') {\n\t\t\treturn true; // step 2.b\n\t\t}\n\t\tif (IsAccessorDescriptor(Desc)) { // step 2.c\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\tDesc\n\t\t\t);\n\t\t}\n\t\t// step 2.d\n\t\treturn DefineOwnProperty(\n\t\t\tIsDataDescriptor,\n\t\t\tSameValue,\n\t\t\tFromPropertyDescriptor,\n\t\t\tO,\n\t\t\tP,\n\t\t\t{\n\t\t\t\t'[[Configurable]]': !!Desc['[[Configurable]]'],\n\t\t\t\t'[[Enumerable]]': !!Desc['[[Enumerable]]'],\n\t\t\t\t'[[Value]]': Desc['[[Value]]'],\n\t\t\t\t'[[Writable]]': !!Desc['[[Writable]]']\n\t\t\t}\n\t\t);\n\t}\n\n\t// 3. Assert: current is a fully populated Property Descriptor.\n\tif (\n\t\t!isFullyPopulatedPropertyDescriptor(\n\t\t\t{\n\t\t\t\tIsAccessorDescriptor: IsAccessorDescriptor,\n\t\t\t\tIsDataDescriptor: IsDataDescriptor\n\t\t\t},\n\t\t\tcurrent\n\t\t)\n\t) {\n\t\tthrow new $TypeError('`current`, when present, must be a fully populated and valid Property Descriptor');\n\t}\n\n\t// 4. If every field in Desc is absent, return true.\n\t// this can't really match the assertion that it's a Property Descriptor in our JS implementation\n\n\t// 5. If current.[[Configurable]] is false, then\n\tif (!current['[[Configurable]]']) {\n\t\tif ('[[Configurable]]' in Desc && Desc['[[Configurable]]']) {\n\t\t\t// step 5.a\n\t\t\treturn false;\n\t\t}\n\t\tif ('[[Enumerable]]' in Desc && !SameValue(Desc['[[Enumerable]]'], current['[[Enumerable]]'])) {\n\t\t\t// step 5.b\n\t\t\treturn false;\n\t\t}\n\t\tif (!IsGenericDescriptor(Desc) && !SameValue(IsAccessorDescriptor(Desc), IsAccessorDescriptor(current))) {\n\t\t\t// step 5.c\n\t\t\treturn false;\n\t\t}\n\t\tif (IsAccessorDescriptor(current)) { // step 5.d\n\t\t\tif ('[[Get]]' in Desc && !SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Set]]' in Desc && !SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (!current['[[Writable]]']) { // step 5.e\n\t\t\tif ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Value]]' in Desc && !SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// 6. If O is not undefined, then\n\tif (oType !== 'Undefined') {\n\t\tvar configurable;\n\t\tvar enumerable;\n\t\tif (IsDataDescriptor(current) && IsAccessorDescriptor(Desc)) { // step 6.a\n\t\t\tconfigurable = ('[[Configurable]]' in Desc ? Desc : current)['[[Configurable]]'];\n\t\t\tenumerable = ('[[Enumerable]]' in Desc ? Desc : current)['[[Enumerable]]'];\n\t\t\t// Replace the property named P of object O with an accessor property having [[Configurable]] and [[Enumerable]] attributes as described by current and each other attribute set to its default value.\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\t{\n\t\t\t\t\t'[[Configurable]]': !!configurable,\n\t\t\t\t\t'[[Enumerable]]': !!enumerable,\n\t\t\t\t\t'[[Get]]': ('[[Get]]' in Desc ? Desc : current)['[[Get]]'],\n\t\t\t\t\t'[[Set]]': ('[[Set]]' in Desc ? Desc : current)['[[Set]]']\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (IsAccessorDescriptor(current) && IsDataDescriptor(Desc)) {\n\t\t\tconfigurable = ('[[Configurable]]' in Desc ? Desc : current)['[[Configurable]]'];\n\t\t\tenumerable = ('[[Enumerable]]' in Desc ? Desc : current)['[[Enumerable]]'];\n\t\t\t// i. Replace the property named P of object O with a data property having [[Configurable]] and [[Enumerable]] attributes as described by current and each other attribute set to its default value.\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\t{\n\t\t\t\t\t'[[Configurable]]': !!configurable,\n\t\t\t\t\t'[[Enumerable]]': !!enumerable,\n\t\t\t\t\t'[[Value]]': ('[[Value]]' in Desc ? Desc : current)['[[Value]]'],\n\t\t\t\t\t'[[Writable]]': !!('[[Writable]]' in Desc ? Desc : current)['[[Writable]]']\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// For each field of Desc that is present, set the corresponding attribute of the property named P of object O to the value of the field.\n\t\treturn DefineOwnProperty(\n\t\t\tIsDataDescriptor,\n\t\t\tSameValue,\n\t\t\tFromPropertyDescriptor,\n\t\t\tO,\n\t\t\tP,\n\t\t\tDesc\n\t\t);\n\t}\n\n\treturn true; // step 7\n};\n", "'use strict';\n\nvar $gOPD = require('gopd');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsExtensible = require('./IsExtensible');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\nvar ValidateAndApplyPropertyDescriptor = require('./ValidateAndApplyPropertyDescriptor');\n\n// https://262.ecma-international.org/6.0/#sec-ordinarydefineownproperty\n\nmodule.exports = function OrdinaryDefineOwnProperty(O, P, Desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (!$gOPD) {\n\t\t// ES3/IE 8 fallback\n\t\tif (IsAccessorDescriptor(Desc)) {\n\t\t\tthrow new $SyntaxError('This environment does not support accessor property descriptors.');\n\t\t}\n\t\tvar creatingNormalDataProperty = !(P in O)\n\t\t\t&& Desc['[[Writable]]']\n\t\t\t&& Desc['[[Enumerable]]']\n\t\t\t&& Desc['[[Configurable]]']\n\t\t\t&& '[[Value]]' in Desc;\n\t\tvar settingExistingDataProperty = (P in O)\n\t\t\t&& (!('[[Configurable]]' in Desc) || Desc['[[Configurable]]'])\n\t\t\t&& (!('[[Enumerable]]' in Desc) || Desc['[[Enumerable]]'])\n\t\t\t&& (!('[[Writable]]' in Desc) || Desc['[[Writable]]'])\n\t\t\t&& '[[Value]]' in Desc;\n\t\tif (creatingNormalDataProperty || settingExistingDataProperty) {\n\t\t\tO[P] = Desc['[[Value]]']; // eslint-disable-line no-param-reassign\n\t\t\treturn SameValue(O[P], Desc['[[Value]]']);\n\t\t}\n\t\tthrow new $SyntaxError('This environment does not support defining non-writable, non-enumerable, or non-configurable properties');\n\t}\n\tvar desc = $gOPD(O, P);\n\tvar current = desc && ToPropertyDescriptor(desc);\n\tvar extensible = IsExtensible(O);\n\treturn ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar OrdinaryDefineOwnProperty = require('./OrdinaryDefineOwnProperty');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-createdataproperty\n\nmodule.exports = function CreateDataProperty(O, P, V) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\tvar newDesc = {\n\t\t'[[Configurable]]': true,\n\t\t'[[Enumerable]]': true,\n\t\t'[[Value]]': V,\n\t\t'[[Writable]]': true\n\t};\n\treturn OrdinaryDefineOwnProperty(O, P, newDesc);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar CreateDataProperty = require('./CreateDataProperty');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// // https://262.ecma-international.org/14.0/#sec-createdatapropertyorthrow\n\nmodule.exports = function CreateDataPropertyOrThrow(O, P, V) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\tvar success = CreateDataProperty(O, P, V);\n\tif (!success) {\n\t\tthrow new $TypeError('unable to create data property');\n\t}\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\n/** @type {import('./RequireObjectCoercible')} */\nmodule.exports = function RequireObjectCoercible(value) {\n\tif (value == null) {\n\t\tthrow new $TypeError((arguments.length > 0 && arguments[1]) || ('Cannot call method on ' + value));\n\t}\n\treturn value;\n};\n", "'use strict';\n\nmodule.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n", "'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateGetDayCall(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n", "'use strict';\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar isPrimitive = require('./helpers/isPrimitive');\nvar isCallable = require('is-callable');\nvar isDate = require('is-date-object');\nvar isSymbol = require('is-symbol');\n\nvar ordinaryToPrimitive = function OrdinaryToPrimitive(O, hint) {\n\tif (typeof O === 'undefined' || O === null) {\n\t\tthrow new TypeError('Cannot call method on ' + O);\n\t}\n\tif (typeof hint !== 'string' || (hint !== 'number' && hint !== 'string')) {\n\t\tthrow new TypeError('hint must be \"string\" or \"number\"');\n\t}\n\tvar methodNames = hint === 'string' ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\tvar method, result, i;\n\tfor (i = 0; i < methodNames.length; ++i) {\n\t\tmethod = O[methodNames[i]];\n\t\tif (isCallable(method)) {\n\t\t\tresult = method.call(O);\n\t\t\tif (isPrimitive(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\tthrow new TypeError('No default value');\n};\n\nvar GetMethod = function GetMethod(O, P) {\n\tvar func = O[P];\n\tif (func !== null && typeof func !== 'undefined') {\n\t\tif (!isCallable(func)) {\n\t\t\tthrow new TypeError(func + ' returned for property ' + P + ' of object ' + O + ' is not a function');\n\t\t}\n\t\treturn func;\n\t}\n\treturn void 0;\n};\n\n// http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tvar hint = 'default';\n\tif (arguments.length > 1) {\n\t\tif (arguments[1] === String) {\n\t\t\thint = 'string';\n\t\t} else if (arguments[1] === Number) {\n\t\t\thint = 'number';\n\t\t}\n\t}\n\n\tvar exoticToPrim;\n\tif (hasSymbols) {\n\t\tif (Symbol.toPrimitive) {\n\t\t\texoticToPrim = GetMethod(input, Symbol.toPrimitive);\n\t\t} else if (isSymbol(input)) {\n\t\t\texoticToPrim = Symbol.prototype.valueOf;\n\t\t}\n\t}\n\tif (typeof exoticToPrim !== 'undefined') {\n\t\tvar result = exoticToPrim.call(input, hint);\n\t\tif (isPrimitive(result)) {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new TypeError('unable to convert exotic object to primitive');\n\t}\n\tif (hint === 'default' && (isDate(input) || isSymbol(input))) {\n\t\thint = 'string';\n\t}\n\treturn ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);\n};\n", "'use strict';\n\nvar toPrimitive = require('es-to-primitive/es2015');\n\n// https://262.ecma-international.org/6.0/#sec-toprimitive\n\nmodule.exports = function ToPrimitive(input) {\n\tif (arguments.length > 1) {\n\t\treturn toPrimitive(input, arguments[1]);\n\t}\n\treturn toPrimitive(input);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/6.0/#sec-tostring\n\nmodule.exports = function ToString(argument) {\n\tif (typeof argument === 'symbol') {\n\t\tthrow new $TypeError('Cannot convert a Symbol value to a string');\n\t}\n\treturn $String(argument);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\n\nvar ToPrimitive = require('./ToPrimitive');\nvar ToString = require('./ToString');\n\n// https://262.ecma-international.org/6.0/#sec-topropertykey\n\nmodule.exports = function ToPropertyKey(argument) {\n\tvar key = ToPrimitive(argument, $String);\n\treturn typeof key === 'symbol' ? key : ToString(key);\n};\n", "'use strict';\n\nvar AddEntriesFromIterable = require('es-abstract/2024/AddEntriesFromIterable');\nvar CreateDataPropertyOrThrow = require('es-abstract/2024/CreateDataPropertyOrThrow');\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\nvar ToPropertyKey = require('es-abstract/2024/ToPropertyKey');\n\nvar adder = function addDataProperty(key, value) {\n\tvar O = this; // eslint-disable-line no-invalid-this\n\tvar propertyKey = ToPropertyKey(key);\n\tCreateDataPropertyOrThrow(O, propertyKey, value);\n};\n\nmodule.exports = function fromEntries(iterable) {\n\tRequireObjectCoercible(iterable);\n\n\treturn AddEntriesFromIterable({}, iterable, adder);\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.fromEntries === 'function' ? Object.fromEntries : implementation;\n};\n", "'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimEntries() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { fromEntries: polyfill }, {\n\t\tfromEntries: function testEntries() {\n\t\t\treturn Object.fromEntries !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\nvar callBound = require('call-bind/callBound');\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar $push = callBound('Array.prototype.push');\n\nmodule.exports = function entries(O) {\n\tvar obj = RequireObjectCoercible(O);\n\tvar entrys = [];\n\tfor (var key in obj) {\n\t\tif ($isEnumerable(obj, key)) { // checks own-ness as well\n\t\t\t$push(entrys, [key, obj[key]]);\n\t\t}\n\t}\n\treturn entrys;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.entries === 'function' ? Object.entries : implementation;\n};\n", "'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimEntries() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { entries: polyfill }, {\n\t\tentries: function testEntries() {\n\t\t\treturn Object.entries !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $ArrayPrototype = GetIntrinsic('%Array.prototype%');\nvar $RangeError = require('es-errors/range');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar isInteger = require('../helpers/isInteger');\n\nvar MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n\nvar hasProto = require('has-proto')();\n\nvar $setProto = GetIntrinsic('%Object.setPrototypeOf%', true) || (\n\thasProto\n\t\t? function (O, proto) {\n\t\t\tO.__proto__ = proto; // eslint-disable-line no-proto, no-param-reassign\n\t\t\treturn O;\n\t\t}\n\t\t: null\n);\n\n// https://262.ecma-international.org/12.0/#sec-arraycreate\n\nmodule.exports = function ArrayCreate(length) {\n\tif (!isInteger(length) || length < 0) {\n\t\tthrow new $TypeError('Assertion failed: `length` must be an integer Number >= 0');\n\t}\n\tif (length > MAX_ARRAY_LENGTH) {\n\t\tthrow new $RangeError('length is greater than (2**32 - 1)');\n\t}\n\tvar proto = arguments.length > 1 ? arguments[1] : $ArrayPrototype;\n\tvar A = []; // steps 3, 5\n\tif (proto !== $ArrayPrototype) { // step 4\n\t\tif (!$setProto) {\n\t\t\tthrow new $SyntaxError('ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n\t\t}\n\t\t$setProto(A, proto);\n\t}\n\tif (length !== 0) { // bypasses the need for step 6\n\t\tA.length = length;\n\t}\n\t/* step 6, the above as a shortcut for the below\n\tOrdinaryDefineOwnProperty(A, 'length', {\n\t\t'[[Configurable]]': false,\n\t\t'[[Enumerable]]': false,\n\t\t'[[Value]]': length,\n\t\t'[[Writable]]': true\n\t});\n\t*/\n\treturn A;\n};\n", "'use strict';\n\n// https://262.ecma-international.org/6.0/#sec-ispropertykey\n\nmodule.exports = function IsPropertyKey(argument) {\n\treturn typeof argument === 'string' || typeof argument === 'symbol';\n};\n", "'use strict';\n\nvar ES5Type = require('../5/Type');\n\n// https://262.ecma-international.org/11.0/#sec-ecmascript-data-types-and-values\n\nmodule.exports = function Type(x) {\n\tif (typeof x === 'symbol') {\n\t\treturn 'Symbol';\n\t}\n\tif (typeof x === 'bigint') {\n\t\treturn 'BigInt';\n\t}\n\treturn ES5Type(x);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar inspect = require('object-inspect');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-get-o-p\n\nmodule.exports = function Get(O, P) {\n\t// 7.3.1.1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\t// 7.3.1.2\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n\t}\n\t// 7.3.1.3\n\treturn O[P];\n};\n", "'use strict';\n\n// https://262.ecma-international.org/6.0/#sec-isarray\nmodule.exports = require('../helpers/IsArray');\n", "'use strict';\n\n// TODO: remove, semver-major\n\nmodule.exports = require('get-intrinsic');\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\nvar fromPropertyDescriptor = require('../helpers/fromPropertyDescriptor');\n\n// https://262.ecma-international.org/6.0/#sec-frompropertydescriptor\n\nmodule.exports = function FromPropertyDescriptor(Desc) {\n\tif (typeof Desc !== 'undefined' && !isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');\n\t}\n\n\treturn fromPropertyDescriptor(Desc);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar hasOwn = require('hasown');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.2\n\nmodule.exports = function IsDataDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');\n\t}\n\n\tif (!hasOwn(Desc, '[[Value]]') && !hasOwn(Desc, '[[Writable]]')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar $isNaN = require('../helpers/isNaN');\n\n// http://262.ecma-international.org/5.1/#sec-9.12\n\nmodule.exports = function SameValue(x, y) {\n\tif (x === y) { // 0 === -0, but they are not identical.\n\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\treturn true;\n\t}\n\treturn $isNaN(x) && $isNaN(y);\n};\n", "'use strict';\n\n// http://262.ecma-international.org/5.1/#sec-9.2\n\nmodule.exports = function ToBoolean(value) { return !!value; };\n", "'use strict';\n\n// http://262.ecma-international.org/5.1/#sec-9.11\n\nmodule.exports = require('is-callable');\n", "'use strict';\n\nvar hasOwn = require('hasown');\n\nvar $TypeError = require('es-errors/type');\n\nvar Type = require('./Type');\nvar ToBoolean = require('./ToBoolean');\nvar IsCallable = require('./IsCallable');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.5\n\nmodule.exports = function ToPropertyDescriptor(Obj) {\n\tif (Type(Obj) !== 'Object') {\n\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t}\n\n\tvar desc = {};\n\tif (hasOwn(Obj, 'enumerable')) {\n\t\tdesc['[[Enumerable]]'] = ToBoolean(Obj.enumerable);\n\t}\n\tif (hasOwn(Obj, 'configurable')) {\n\t\tdesc['[[Configurable]]'] = ToBoolean(Obj.configurable);\n\t}\n\tif (hasOwn(Obj, 'value')) {\n\t\tdesc['[[Value]]'] = Obj.value;\n\t}\n\tif (hasOwn(Obj, 'writable')) {\n\t\tdesc['[[Writable]]'] = ToBoolean(Obj.writable);\n\t}\n\tif (hasOwn(Obj, 'get')) {\n\t\tvar getter = Obj.get;\n\t\tif (typeof getter !== 'undefined' && !IsCallable(getter)) {\n\t\t\tthrow new $TypeError('getter must be a function');\n\t\t}\n\t\tdesc['[[Get]]'] = getter;\n\t}\n\tif (hasOwn(Obj, 'set')) {\n\t\tvar setter = Obj.set;\n\t\tif (typeof setter !== 'undefined' && !IsCallable(setter)) {\n\t\t\tthrow new $TypeError('setter must be a function');\n\t\t}\n\t\tdesc['[[Set]]'] = setter;\n\t}\n\n\tif ((hasOwn(desc, '[[Get]]') || hasOwn(desc, '[[Set]]')) && (hasOwn(desc, '[[Value]]') || hasOwn(desc, '[[Writable]]'))) {\n\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t}\n\treturn desc;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-definepropertyorthrow\n\nmodule.exports = function DefinePropertyOrThrow(O, P, desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\n\tvar Desc = isPropertyDescriptor(desc) ? desc : ToPropertyDescriptor(desc);\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n\t}\n\n\treturn DefineOwnProperty(\n\t\tIsDataDescriptor,\n\t\tSameValue,\n\t\tFromPropertyDescriptor,\n\t\tO,\n\t\tP,\n\t\tDesc\n\t);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic.js');\n\nvar $construct = GetIntrinsic('%Reflect.construct%', true);\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\ntry {\n\tDefinePropertyOrThrow({}, '', { '[[Get]]': function () {} });\n} catch (e) {\n\t// Accessor properties aren't supported\n\tDefinePropertyOrThrow = null;\n}\n\n// https://262.ecma-international.org/6.0/#sec-isconstructor\n\nif (DefinePropertyOrThrow && $construct) {\n\tvar isConstructorMarker = {};\n\tvar badArrayLike = {};\n\tDefinePropertyOrThrow(badArrayLike, 'length', {\n\t\t'[[Get]]': function () {\n\t\t\tthrow isConstructorMarker;\n\t\t},\n\t\t'[[Enumerable]]': true\n\t});\n\n\tmodule.exports = function IsConstructor(argument) {\n\t\ttry {\n\t\t\t// `Reflect.construct` invokes `IsConstructor(target)` before `Get(args, 'length')`:\n\t\t\t$construct(argument, badArrayLike);\n\t\t} catch (err) {\n\t\t\treturn err === isConstructorMarker;\n\t\t}\n\t};\n} else {\n\tmodule.exports = function IsConstructor(argument) {\n\t\t// unfortunately there's no way to truly check this without try/catch `new argument` in old environments\n\t\treturn typeof argument === 'function' && !!argument.prototype;\n\t};\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $species = GetIntrinsic('%Symbol.species%', true);\nvar $TypeError = require('es-errors/type');\n\nvar ArrayCreate = require('./ArrayCreate');\nvar Get = require('./Get');\nvar IsArray = require('./IsArray');\nvar IsConstructor = require('./IsConstructor');\nvar Type = require('./Type');\n\nvar isInteger = require('../helpers/isInteger');\n\n// https://262.ecma-international.org/12.0/#sec-arrayspeciescreate\n\nmodule.exports = function ArraySpeciesCreate(originalArray, length) {\n\tif (!isInteger(length) || length < 0) {\n\t\tthrow new $TypeError('Assertion failed: length must be an integer >= 0');\n\t}\n\n\tvar isArray = IsArray(originalArray);\n\tif (!isArray) {\n\t\treturn ArrayCreate(length);\n\t}\n\n\tvar C = Get(originalArray, 'constructor');\n\t// TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n\t// if (IsConstructor(C)) {\n\t// \tif C is another realm's Array, C = undefined\n\t// \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n\t// }\n\tif ($species && Type(C) === 'Object') {\n\t\tC = Get(C, $species);\n\t\tif (C === null) {\n\t\t\tC = void 0;\n\t\t}\n\t}\n\n\tif (typeof C === 'undefined') {\n\t\treturn ArrayCreate(length);\n\t}\n\tif (!IsConstructor(C)) {\n\t\tthrow new $TypeError('C must be a constructor');\n\t}\n\treturn new C(length); // Construct(C, length);\n};\n\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\n\nvar $TypeError = require('es-errors/type');\n\nvar IsArray = require('./IsArray');\n\nvar $apply = GetIntrinsic('%Reflect.apply%', true) || callBound('Function.prototype.apply');\n\n// https://262.ecma-international.org/6.0/#sec-call\n\nmodule.exports = function Call(F, V) {\n\tvar argumentsList = arguments.length > 2 ? arguments[2] : [];\n\tif (!IsArray(argumentsList)) {\n\t\tthrow new $TypeError('Assertion failed: optional `argumentsList`, if provided, must be a List');\n\t}\n\treturn $apply(F, V, argumentsList);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar hasOwn = require('hasown');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\n// https://262.ecma-international.org/5.1/#sec-8.10.1\n\nmodule.exports = function IsAccessorDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');\n\t}\n\n\tif (!hasOwn(Desc, '[[Get]]') && !hasOwn(Desc, '[[Set]]')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $preventExtensions = GetIntrinsic('%Object.preventExtensions%', true);\nvar $isExtensible = GetIntrinsic('%Object.isExtensible%', true);\n\nvar isPrimitive = require('../helpers/isPrimitive');\n\n// https://262.ecma-international.org/6.0/#sec-isextensible-o\n\nmodule.exports = $preventExtensions\n\t? function IsExtensible(obj) {\n\t\treturn !isPrimitive(obj) && $isExtensible(obj);\n\t}\n\t: function IsExtensible(obj) {\n\t\treturn !isPrimitive(obj);\n\t};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\n// https://262.ecma-international.org/6.0/#sec-isgenericdescriptor\n\nmodule.exports = function IsGenericDescriptor(Desc) {\n\tif (typeof Desc === 'undefined') {\n\t\treturn false;\n\t}\n\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: `Desc` must be a Property Descriptor');\n\t}\n\n\tif (!IsAccessorDescriptor(Desc) && !IsDataDescriptor(Desc)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\nvar isFullyPopulatedPropertyDescriptor = require('../helpers/isFullyPopulatedPropertyDescriptor');\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/13.0/#sec-validateandapplypropertydescriptor\n\n// see https://github.com/tc39/ecma262/pull/2468 for ES2022 changes\n\n// eslint-disable-next-line max-lines-per-function, max-statements\nmodule.exports = function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n\tvar oType = Type(O);\n\tif (oType !== 'Undefined' && oType !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be undefined or an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tif (typeof extensible !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: extensible must be a Boolean');\n\t}\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (typeof current !== 'undefined' && !isPropertyDescriptor(current)) {\n\t\tthrow new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n\t}\n\n\tif (typeof current === 'undefined') { // step 2\n\t\tif (!extensible) {\n\t\t\treturn false; // step 2.a\n\t\t}\n\t\tif (oType === 'Undefined') {\n\t\t\treturn true; // step 2.b\n\t\t}\n\t\tif (IsAccessorDescriptor(Desc)) { // step 2.c\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\tDesc\n\t\t\t);\n\t\t}\n\t\t// step 2.d\n\t\treturn DefineOwnProperty(\n\t\t\tIsDataDescriptor,\n\t\t\tSameValue,\n\t\t\tFromPropertyDescriptor,\n\t\t\tO,\n\t\t\tP,\n\t\t\t{\n\t\t\t\t'[[Configurable]]': !!Desc['[[Configurable]]'],\n\t\t\t\t'[[Enumerable]]': !!Desc['[[Enumerable]]'],\n\t\t\t\t'[[Value]]': Desc['[[Value]]'],\n\t\t\t\t'[[Writable]]': !!Desc['[[Writable]]']\n\t\t\t}\n\t\t);\n\t}\n\n\t// 3. Assert: current is a fully populated Property Descriptor.\n\tif (\n\t\t!isFullyPopulatedPropertyDescriptor(\n\t\t\t{\n\t\t\t\tIsAccessorDescriptor: IsAccessorDescriptor,\n\t\t\t\tIsDataDescriptor: IsDataDescriptor\n\t\t\t},\n\t\t\tcurrent\n\t\t)\n\t) {\n\t\tthrow new $TypeError('`current`, when present, must be a fully populated and valid Property Descriptor');\n\t}\n\n\t// 4. If every field in Desc is absent, return true.\n\t// this can't really match the assertion that it's a Property Descriptor in our JS implementation\n\n\t// 5. If current.[[Configurable]] is false, then\n\tif (!current['[[Configurable]]']) {\n\t\tif ('[[Configurable]]' in Desc && Desc['[[Configurable]]']) {\n\t\t\t// step 5.a\n\t\t\treturn false;\n\t\t}\n\t\tif ('[[Enumerable]]' in Desc && !SameValue(Desc['[[Enumerable]]'], current['[[Enumerable]]'])) {\n\t\t\t// step 5.b\n\t\t\treturn false;\n\t\t}\n\t\tif (!IsGenericDescriptor(Desc) && !SameValue(IsAccessorDescriptor(Desc), IsAccessorDescriptor(current))) {\n\t\t\t// step 5.c\n\t\t\treturn false;\n\t\t}\n\t\tif (IsAccessorDescriptor(current)) { // step 5.d\n\t\t\tif ('[[Get]]' in Desc && !SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Set]]' in Desc && !SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (!current['[[Writable]]']) { // step 5.e\n\t\t\tif ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Value]]' in Desc && !SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\t// 6. If O is not undefined, then\n\tif (oType !== 'Undefined') {\n\t\tvar configurable;\n\t\tvar enumerable;\n\t\tif (IsDataDescriptor(current) && IsAccessorDescriptor(Desc)) { // step 6.a\n\t\t\tconfigurable = ('[[Configurable]]' in Desc ? Desc : current)['[[Configurable]]'];\n\t\t\tenumerable = ('[[Enumerable]]' in Desc ? Desc : current)['[[Enumerable]]'];\n\t\t\t// Replace the property named P of object O with an accessor property having [[Configurable]] and [[Enumerable]] attributes as described by current and each other attribute set to its default value.\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\t{\n\t\t\t\t\t'[[Configurable]]': !!configurable,\n\t\t\t\t\t'[[Enumerable]]': !!enumerable,\n\t\t\t\t\t'[[Get]]': ('[[Get]]' in Desc ? Desc : current)['[[Get]]'],\n\t\t\t\t\t'[[Set]]': ('[[Set]]' in Desc ? Desc : current)['[[Set]]']\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (IsAccessorDescriptor(current) && IsDataDescriptor(Desc)) {\n\t\t\tconfigurable = ('[[Configurable]]' in Desc ? Desc : current)['[[Configurable]]'];\n\t\t\tenumerable = ('[[Enumerable]]' in Desc ? Desc : current)['[[Enumerable]]'];\n\t\t\t// i. Replace the property named P of object O with a data property having [[Configurable]] and [[Enumerable]] attributes as described by current and each other attribute set to its default value.\n\t\t\treturn DefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\t{\n\t\t\t\t\t'[[Configurable]]': !!configurable,\n\t\t\t\t\t'[[Enumerable]]': !!enumerable,\n\t\t\t\t\t'[[Value]]': ('[[Value]]' in Desc ? Desc : current)['[[Value]]'],\n\t\t\t\t\t'[[Writable]]': !!('[[Writable]]' in Desc ? Desc : current)['[[Writable]]']\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\t// For each field of Desc that is present, set the corresponding attribute of the property named P of object O to the value of the field.\n\t\treturn DefineOwnProperty(\n\t\t\tIsDataDescriptor,\n\t\t\tSameValue,\n\t\t\tFromPropertyDescriptor,\n\t\t\tO,\n\t\t\tP,\n\t\t\tDesc\n\t\t);\n\t}\n\n\treturn true; // step 7\n};\n", "'use strict';\n\nvar $gOPD = require('gopd');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsExtensible = require('./IsExtensible');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\nvar ValidateAndApplyPropertyDescriptor = require('./ValidateAndApplyPropertyDescriptor');\n\n// https://262.ecma-international.org/6.0/#sec-ordinarydefineownproperty\n\nmodule.exports = function OrdinaryDefineOwnProperty(O, P, Desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (!$gOPD) {\n\t\t// ES3/IE 8 fallback\n\t\tif (IsAccessorDescriptor(Desc)) {\n\t\t\tthrow new $SyntaxError('This environment does not support accessor property descriptors.');\n\t\t}\n\t\tvar creatingNormalDataProperty = !(P in O)\n\t\t\t&& Desc['[[Writable]]']\n\t\t\t&& Desc['[[Enumerable]]']\n\t\t\t&& Desc['[[Configurable]]']\n\t\t\t&& '[[Value]]' in Desc;\n\t\tvar settingExistingDataProperty = (P in O)\n\t\t\t&& (!('[[Configurable]]' in Desc) || Desc['[[Configurable]]'])\n\t\t\t&& (!('[[Enumerable]]' in Desc) || Desc['[[Enumerable]]'])\n\t\t\t&& (!('[[Writable]]' in Desc) || Desc['[[Writable]]'])\n\t\t\t&& '[[Value]]' in Desc;\n\t\tif (creatingNormalDataProperty || settingExistingDataProperty) {\n\t\t\tO[P] = Desc['[[Value]]']; // eslint-disable-line no-param-reassign\n\t\t\treturn SameValue(O[P], Desc['[[Value]]']);\n\t\t}\n\t\tthrow new $SyntaxError('This environment does not support defining non-writable, non-enumerable, or non-configurable properties');\n\t}\n\tvar desc = $gOPD(O, P);\n\tvar current = desc && ToPropertyDescriptor(desc);\n\tvar extensible = IsExtensible(O);\n\treturn ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar OrdinaryDefineOwnProperty = require('./OrdinaryDefineOwnProperty');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-createdataproperty\n\nmodule.exports = function CreateDataProperty(O, P, V) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\tvar newDesc = {\n\t\t'[[Configurable]]': true,\n\t\t'[[Enumerable]]': true,\n\t\t'[[Value]]': V,\n\t\t'[[Writable]]': true\n\t};\n\treturn OrdinaryDefineOwnProperty(O, P, newDesc);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar CreateDataProperty = require('./CreateDataProperty');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// // https://262.ecma-international.org/14.0/#sec-createdatapropertyorthrow\n\nmodule.exports = function CreateDataPropertyOrThrow(O, P, V) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\tvar success = CreateDataProperty(O, P, V);\n\tif (!success) {\n\t\tthrow new $TypeError('unable to create data property');\n\t}\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-hasproperty\n\nmodule.exports = function HasProperty(O, P) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `O` must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: `P` must be a Property Key');\n\t}\n\treturn P in O;\n};\n", "'use strict';\n\nvar toPrimitive = require('es-to-primitive/es2015');\n\n// https://262.ecma-international.org/6.0/#sec-toprimitive\n\nmodule.exports = function ToPrimitive(input) {\n\tif (arguments.length > 1) {\n\t\treturn toPrimitive(input, arguments[1]);\n\t}\n\treturn toPrimitive(input);\n};\n", "'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n", "'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar isRegex = require('is-regex');\n\nvar $exec = callBound('RegExp.prototype.exec');\nvar $TypeError = require('es-errors/type');\n\nmodule.exports = function regexTester(regex) {\n\tif (!isRegex(regex)) {\n\t\tthrow new $TypeError('`regex` must be a RegExp');\n\t}\n\treturn function test(s) {\n\t\treturn $exec(regex, s) !== null;\n\t};\n};\n", "'use strict';\n\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\nvar ToString = require('es-abstract/2024/ToString');\nvar callBound = require('call-bind/callBound');\nvar $replace = callBound('String.prototype.replace');\n\nvar mvsIsWS = (/^\\s$/).test('\\u180E');\n/* eslint-disable no-control-regex */\nvar leftWhitespace = mvsIsWS\n\t? /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/\n\t: /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = mvsIsWS\n\t? /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/\n\t: /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n/* eslint-enable no-control-regex */\n\nmodule.exports = function trim() {\n\tvar S = ToString(RequireObjectCoercible(this));\n\treturn $replace($replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\nvar mongolianVowelSeparator = '\\u180E';\n\nmodule.exports = function getPolyfill() {\n\tif (\n\t\tString.prototype.trim\n\t\t&& zeroWidthSpace.trim() === zeroWidthSpace\n\t\t&& mongolianVowelSeparator.trim() === mongolianVowelSeparator\n\t\t&& ('_' + mongolianVowelSeparator).trim() === ('_' + mongolianVowelSeparator)\n\t\t&& (mongolianVowelSeparator + '_').trim() === (mongolianVowelSeparator + '_')\n\t) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, {\n\t\ttrim: function testTrim() {\n\t\t\treturn String.prototype.trim !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar bound = callBind(getPolyfill());\nvar boundMethod = function trim(receiver) {\n\tRequireObjectCoercible(receiver);\n\treturn bound(receiver);\n};\n\ndefine(boundMethod, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundMethod;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Number = GetIntrinsic('%Number%');\nvar $RegExp = GetIntrinsic('%RegExp%');\nvar $TypeError = require('es-errors/type');\nvar $parseInteger = GetIntrinsic('%parseInt%');\n\nvar callBound = require('call-bind/callBound');\nvar regexTester = require('safe-regex-test');\n\nvar $strSlice = callBound('String.prototype.slice');\nvar isBinary = regexTester(/^0b[01]+$/i);\nvar isOctal = regexTester(/^0o[0-7]+$/i);\nvar isInvalidHexLiteral = regexTester(/^[-+]0x[0-9a-f]+$/i);\nvar nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = regexTester(nonWSregex);\n\nvar $trim = require('string.prototype.trim');\n\n// https://262.ecma-international.org/13.0/#sec-stringtonumber\n\nmodule.exports = function StringToNumber(argument) {\n\tif (typeof argument !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `argument` is not a String');\n\t}\n\tif (isBinary(argument)) {\n\t\treturn $Number($parseInteger($strSlice(argument, 2), 2));\n\t}\n\tif (isOctal(argument)) {\n\t\treturn $Number($parseInteger($strSlice(argument, 2), 8));\n\t}\n\tif (hasNonWS(argument) || isInvalidHexLiteral(argument)) {\n\t\treturn NaN;\n\t}\n\tvar trimmed = $trim(argument);\n\tif (trimmed !== argument) {\n\t\treturn StringToNumber(trimmed);\n\t}\n\treturn $Number(argument);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = require('es-errors/type');\nvar $Number = GetIntrinsic('%Number%');\nvar isPrimitive = require('../helpers/isPrimitive');\n\nvar ToPrimitive = require('./ToPrimitive');\nvar StringToNumber = require('./StringToNumber');\n\n// https://262.ecma-international.org/13.0/#sec-tonumber\n\nmodule.exports = function ToNumber(argument) {\n\tvar value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);\n\tif (typeof value === 'symbol') {\n\t\tthrow new $TypeError('Cannot convert a Symbol value to a number');\n\t}\n\tif (typeof value === 'bigint') {\n\t\tthrow new $TypeError('Conversion from \\'BigInt\\' to \\'number\\' is not allowed.');\n\t}\n\tif (typeof value === 'string') {\n\t\treturn StringToNumber(value);\n\t}\n\treturn $Number(value);\n};\n", "'use strict';\n\n// var modulo = require('./modulo');\nvar $floor = Math.floor;\n\n// http://262.ecma-international.org/11.0/#eqn-floor\n\nmodule.exports = function floor(x) {\n\t// return x - modulo(x, 1);\n\tif (typeof x === 'bigint') {\n\t\treturn x;\n\t}\n\treturn $floor(x);\n};\n", "'use strict';\n\nvar floor = require('./floor');\n\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/14.0/#eqn-truncate\n\nmodule.exports = function truncate(x) {\n\tif (typeof x !== 'number' && typeof x !== 'bigint') {\n\t\tthrow new $TypeError('argument must be a Number or a BigInt');\n\t}\n\tvar result = x < 0 ? -floor(-x) : floor(x);\n\treturn result === 0 ? 0 : result; // in the spec, these are math values, so we filter out -0 here\n};\n", "'use strict';\n\nvar ToNumber = require('./ToNumber');\nvar truncate = require('./truncate');\n\nvar $isNaN = require('../helpers/isNaN');\nvar $isFinite = require('../helpers/isFinite');\n\n// https://262.ecma-international.org/14.0/#sec-tointegerorinfinity\n\nmodule.exports = function ToIntegerOrInfinity(value) {\n\tvar number = ToNumber(value);\n\tif ($isNaN(number) || number === 0) { return 0; }\n\tif (!$isFinite(number)) { return number; }\n\treturn truncate(number);\n};\n", "'use strict';\n\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\n\nvar ToIntegerOrInfinity = require('./ToIntegerOrInfinity');\n\nmodule.exports = function ToLength(argument) {\n\tvar len = ToIntegerOrInfinity(argument);\n\tif (len <= 0) { return 0; } // includes converting -0 to +0\n\tif (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }\n\treturn len;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar ToLength = require('./ToLength');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/11.0/#sec-lengthofarraylike\n\nmodule.exports = function LengthOfArrayLike(obj) {\n\tif (Type(obj) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `obj` must be an Object');\n\t}\n\treturn ToLength(Get(obj, 'length'));\n};\n\n// TODO: use this all over\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/6.0/#sec-tostring\n\nmodule.exports = function ToString(argument) {\n\tif (typeof argument === 'symbol') {\n\t\tthrow new $TypeError('Cannot convert a Symbol value to a string');\n\t}\n\treturn $String(argument);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\n\nvar Call = require('./Call');\nvar CreateDataPropertyOrThrow = require('./CreateDataPropertyOrThrow');\nvar Get = require('./Get');\nvar HasProperty = require('./HasProperty');\nvar IsArray = require('./IsArray');\nvar LengthOfArrayLike = require('./LengthOfArrayLike');\nvar ToString = require('./ToString');\n\n// https://262.ecma-international.org/11.0/#sec-flattenintoarray\n\nmodule.exports = function FlattenIntoArray(target, source, sourceLen, start, depth) {\n\tvar mapperFunction;\n\tif (arguments.length > 5) {\n\t\tmapperFunction = arguments[5];\n\t}\n\n\tvar targetIndex = start;\n\tvar sourceIndex = 0;\n\twhile (sourceIndex < sourceLen) {\n\t\tvar P = ToString(sourceIndex);\n\t\tvar exists = HasProperty(source, P);\n\t\tif (exists === true) {\n\t\t\tvar element = Get(source, P);\n\t\t\tif (typeof mapperFunction !== 'undefined') {\n\t\t\t\tif (arguments.length <= 6) {\n\t\t\t\t\tthrow new $TypeError('Assertion failed: thisArg is required when mapperFunction is provided');\n\t\t\t\t}\n\t\t\t\telement = Call(mapperFunction, arguments[6], [element, sourceIndex, source]);\n\t\t\t}\n\t\t\tvar shouldFlatten = false;\n\t\t\tif (depth > 0) {\n\t\t\t\tshouldFlatten = IsArray(element);\n\t\t\t}\n\t\t\tif (shouldFlatten) {\n\t\t\t\tvar elementLen = LengthOfArrayLike(element);\n\t\t\t\ttargetIndex = FlattenIntoArray(target, element, elementLen, targetIndex, depth - 1);\n\t\t\t} else {\n\t\t\t\tif (targetIndex >= MAX_SAFE_INTEGER) {\n\t\t\t\t\tthrow new $TypeError('index too large');\n\t\t\t\t}\n\t\t\t\tCreateDataPropertyOrThrow(target, ToString(targetIndex), element);\n\t\t\t\ttargetIndex += 1;\n\t\t\t}\n\t\t}\n\t\tsourceIndex += 1;\n\t}\n\n\treturn targetIndex;\n};\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n", "'use strict';\n\nvar $Object = require('./');\nvar RequireObjectCoercible = require('./RequireObjectCoercible');\n\n/** @type {import('./ToObject')} */\nmodule.exports = function ToObject(value) {\n\tRequireObjectCoercible(value);\n\treturn $Object(value);\n};\n", "'use strict';\n\n// https://262.ecma-international.org/6.0/#sec-toobject\n\nmodule.exports = require('es-object-atoms/ToObject');\n", "'use strict';\n\nvar ArraySpeciesCreate = require('es-abstract/2023/ArraySpeciesCreate');\nvar FlattenIntoArray = require('es-abstract/2023/FlattenIntoArray');\nvar Get = require('es-abstract/2023/Get');\nvar IsCallable = require('es-abstract/2023/IsCallable');\nvar ToLength = require('es-abstract/2023/ToLength');\nvar ToObject = require('es-abstract/2023/ToObject');\n\nmodule.exports = function flatMap(mapperFunction) {\n\tvar O = ToObject(this);\n\tvar sourceLen = ToLength(Get(O, 'length'));\n\n\tif (!IsCallable(mapperFunction)) {\n\t\tthrow new TypeError('mapperFunction must be a function');\n\t}\n\n\tvar T;\n\tif (arguments.length > 1) {\n\t\tT = arguments[1];\n\t}\n\n\tvar A = ArraySpeciesCreate(O, 0);\n\tFlattenIntoArray(A, O, sourceLen, 0, 1, mapperFunction, T);\n\treturn A;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn Array.prototype.flatMap || implementation;\n};\n", "'use strict';\n\nvar hasOwn = require('hasown');\n\nvar hasUnscopables = typeof Symbol === 'function' && typeof Symbol.unscopables === 'symbol';\n\nvar map = hasUnscopables && Array.prototype[Symbol.unscopables];\n\nvar $TypeError = TypeError;\n\nmodule.exports = function shimUnscopables(method) {\n\tif (typeof method !== 'string' || !method) {\n\t\tthrow new $TypeError('method must be a non-empty string');\n\t}\n\tif (!hasOwn(Array.prototype, method)) {\n\t\tthrow new $TypeError('method must be on Array.prototype');\n\t}\n\tif (hasUnscopables) {\n\t\tmap[method] = true;\n\t}\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar shimUnscopables = require('es-shim-unscopables');\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimFlatMap() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\tArray.prototype,\n\t\t{ flatMap: polyfill },\n\t\t{ flatMap: function () { return Array.prototype.flatMap !== polyfill; } }\n\t);\n\n\tshimUnscopables('flatMap');\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar polyfill = getPolyfill();\nvar shim = require('./shim');\n\nvar boundFlatMap = callBind(polyfill);\n\ndefine(boundFlatMap, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundFlatMap;\n", "'use strict';\n\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\nvar callBound = require('call-bind/callBound');\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar $push = callBound('Array.prototype.push');\n\nmodule.exports = function values(O) {\n\tvar obj = RequireObjectCoercible(O);\n\tvar vals = [];\n\tfor (var key in obj) {\n\t\tif ($isEnumerable(obj, key)) { // checks own-ness as well\n\t\t\t$push(vals, obj[key]);\n\t\t}\n\t}\n\treturn vals;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.values === 'function' ? Object.values : implementation;\n};\n", "'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimValues() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { values: polyfill }, {\n\t\tvalues: function testValues() {\n\t\t\treturn Object.values !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Number = GetIntrinsic('%Number%');\nvar $RegExp = GetIntrinsic('%RegExp%');\nvar $TypeError = require('es-errors/type');\nvar $parseInteger = GetIntrinsic('%parseInt%');\n\nvar callBound = require('call-bind/callBound');\nvar regexTester = require('safe-regex-test');\n\nvar $strSlice = callBound('String.prototype.slice');\nvar isBinary = regexTester(/^0b[01]+$/i);\nvar isOctal = regexTester(/^0o[0-7]+$/i);\nvar isInvalidHexLiteral = regexTester(/^[-+]0x[0-9a-f]+$/i);\nvar nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = regexTester(nonWSregex);\n\nvar $trim = require('string.prototype.trim');\n\n// https://262.ecma-international.org/13.0/#sec-stringtonumber\n\nmodule.exports = function StringToNumber(argument) {\n\tif (typeof argument !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `argument` is not a String');\n\t}\n\tif (isBinary(argument)) {\n\t\treturn $Number($parseInteger($strSlice(argument, 2), 2));\n\t}\n\tif (isOctal(argument)) {\n\t\treturn $Number($parseInteger($strSlice(argument, 2), 8));\n\t}\n\tif (hasNonWS(argument) || isInvalidHexLiteral(argument)) {\n\t\treturn NaN;\n\t}\n\tvar trimmed = $trim(argument);\n\tif (trimmed !== argument) {\n\t\treturn StringToNumber(trimmed);\n\t}\n\treturn $Number(argument);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = require('es-errors/type');\nvar $Number = GetIntrinsic('%Number%');\nvar isPrimitive = require('../helpers/isPrimitive');\n\nvar ToPrimitive = require('./ToPrimitive');\nvar StringToNumber = require('./StringToNumber');\n\n// https://262.ecma-international.org/13.0/#sec-tonumber\n\nmodule.exports = function ToNumber(argument) {\n\tvar value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);\n\tif (typeof value === 'symbol') {\n\t\tthrow new $TypeError('Cannot convert a Symbol value to a number');\n\t}\n\tif (typeof value === 'bigint') {\n\t\tthrow new $TypeError('Conversion from \\'BigInt\\' to \\'number\\' is not allowed.');\n\t}\n\tif (typeof value === 'string') {\n\t\treturn StringToNumber(value);\n\t}\n\treturn $Number(value);\n};\n", "'use strict';\n\n// var modulo = require('./modulo');\nvar $floor = Math.floor;\n\n// http://262.ecma-international.org/11.0/#eqn-floor\n\nmodule.exports = function floor(x) {\n\t// return x - modulo(x, 1);\n\tif (typeof x === 'bigint') {\n\t\treturn x;\n\t}\n\treturn $floor(x);\n};\n", "'use strict';\n\nvar floor = require('./floor');\n\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/14.0/#eqn-truncate\n\nmodule.exports = function truncate(x) {\n\tif (typeof x !== 'number' && typeof x !== 'bigint') {\n\t\tthrow new $TypeError('argument must be a Number or a BigInt');\n\t}\n\tvar result = x < 0 ? -floor(-x) : floor(x);\n\treturn result === 0 ? 0 : result; // in the spec, these are math values, so we filter out -0 here\n};\n", "'use strict';\n\nvar ToNumber = require('./ToNumber');\nvar truncate = require('./truncate');\n\nvar $isNaN = require('../helpers/isNaN');\nvar $isFinite = require('../helpers/isFinite');\n\n// https://262.ecma-international.org/14.0/#sec-tointegerorinfinity\n\nmodule.exports = function ToIntegerOrInfinity(value) {\n\tvar number = ToNumber(value);\n\tif ($isNaN(number) || number === 0) { return 0; }\n\tif (!$isFinite(number)) { return number; }\n\treturn truncate(number);\n};\n", "'use strict';\n\nvar MAX_SAFE_INTEGER = require('../helpers/maxSafeInteger');\n\nvar ToIntegerOrInfinity = require('./ToIntegerOrInfinity');\n\nmodule.exports = function ToLength(argument) {\n\tvar len = ToIntegerOrInfinity(argument);\n\tif (len <= 0) { return 0; } // includes converting -0 to +0\n\tif (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }\n\treturn len;\n};\n", "'use strict';\n\nvar $isNaN = require('../helpers/isNaN');\n\n// https://262.ecma-international.org/6.0/#sec-samevaluezero\n\nmodule.exports = function SameValueZero(x, y) {\n\treturn (x === y) || ($isNaN(x) && $isNaN(y));\n};\n", "'use strict';\n\nvar ToIntegerOrInfinity = require('es-abstract/2024/ToIntegerOrInfinity');\nvar ToLength = require('es-abstract/2024/ToLength');\nvar ToObject = require('es-object-atoms/ToObject');\nvar SameValueZero = require('es-abstract/2024/SameValueZero');\nvar $isNaN = require('es-abstract/helpers/isNaN');\nvar $isFinite = require('es-abstract/helpers/isFinite');\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar isString = require('is-string');\n\nvar $charAt = callBound('String.prototype.charAt');\nvar $indexOf = GetIntrinsic('%Array.prototype.indexOf%'); // TODO: use callBind.apply without breaking IE 8\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function includes(searchElement) {\n\tvar fromIndex = arguments.length > 1 ? ToIntegerOrInfinity(arguments[1]) : 0;\n\tif ($indexOf && !$isNaN(searchElement) && $isFinite(fromIndex) && typeof searchElement !== 'undefined') {\n\t\treturn $indexOf.apply(this, arguments) > -1;\n\t}\n\n\tvar O = ToObject(this);\n\tvar length = ToLength(O.length);\n\tif (length === 0) {\n\t\treturn false;\n\t}\n\tvar k = fromIndex >= 0 ? fromIndex : $max(0, length + fromIndex);\n\twhile (k < length) {\n\t\tif (SameValueZero(searchElement, isString(O) ? $charAt(O, k) : O[k])) {\n\t\t\treturn true;\n\t\t}\n\t\tk += 1;\n\t}\n\treturn false;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (\n\t\tArray.prototype.includes\n\t\t&& Array(1).includes(undefined) // https://bugzilla.mozilla.org/show_bug.cgi?id=1767541\n\t) {\n\t\treturn Array.prototype.includes;\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimArrayPrototypeIncludes() {\n\tvar polyfill = getPolyfill();\n\tdefine(\n\t\tArray.prototype,\n\t\t{ includes: polyfill },\n\t\t{ includes: function () { return Array.prototype.includes !== polyfill; } }\n\t);\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar polyfill = callBind.apply(getPolyfill());\nvar shim = require('./shim');\n\nvar $slice = callBound('Array.prototype.slice');\n\n/* eslint-disable no-unused-vars */\nvar boundShim = function includes(array, searchElement) {\n/* eslint-enable no-unused-vars */\n\tRequireObjectCoercible(array);\n\treturn polyfill(array, $slice(arguments, 1));\n};\ndefine(boundShim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundShim;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('es-abstract/2024/Get');\nvar Type = require('es-abstract/2024/Type');\n\nmodule.exports = function GetIteratorDirect(obj) {\n\tif (Type(obj) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `obj` must be an Object');\n\t}\n\n\tvar nextMethod = Get(obj, 'next'); // step 2\n\n\tvar iteratorRecord = { '[[Iterator]]': obj, '[[NextMethod]]': nextMethod, '[[Done]]': false }; // step 3\n\n\treturn iteratorRecord; // step 4\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar AdvanceStringIndex = require('es-abstract/2024/AdvanceStringIndex');\nvar Call = require('es-abstract/2024/Call');\nvar GetIteratorDirect = require('./GetIteratorDirect');\nvar GetMethod = require('es-abstract/2024/GetMethod');\nvar IsArray = require('es-abstract/2024/IsArray');\nvar Type = require('es-abstract/2024/Type');\n\nvar getIteratorMethod = require('es-abstract/helpers/getIteratorMethod');\n\nmodule.exports = function GetIteratorFlattenable(obj, stringHandling) {\n\tif (Type(obj) !== 'Object') {\n\t\tif (stringHandling === 'reject-strings' || typeof obj !== 'string') {\n\t\t\tthrow new $TypeError('obj must be an Object'); // step 1.a\n\t\t}\n\t}\n\n\tvar method = void undefined; // step 2\n\n\t// method = GetMethod(obj, Symbol.iterator); // step 5.a\n\tmethod = getIteratorMethod(\n\t\t{\n\t\t\tAdvanceStringIndex: AdvanceStringIndex,\n\t\t\tGetMethod: GetMethod,\n\t\t\tIsArray: IsArray\n\t\t},\n\t\tobj\n\t);\n\n\tvar iterator;\n\tif (typeof method === 'undefined') { // step 3\n\t\titerator = obj; // step 3.a\n\t} else { // step 4\n\t\titerator = Call(method, obj); // step 4.a\n\t}\n\n\tif (Type(iterator) !== 'Object') {\n\t\tthrow new $TypeError('iterator must be an Object'); // step 5\n\t}\n\treturn GetIteratorDirect(iterator); // step 6\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-ordinaryhasinstance\n\nmodule.exports = function OrdinaryHasInstance(C, O) {\n\tif (!IsCallable(C)) {\n\t\treturn false;\n\t}\n\tif (Type(O) !== 'Object') {\n\t\treturn false;\n\t}\n\tvar P = Get(C, 'prototype');\n\tif (Type(P) !== 'Object') {\n\t\tthrow new $TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n\t}\n\treturn O instanceof C;\n};\n", "/* eslint no-negated-condition: 0, no-new-func: 0 */\n\n'use strict';\n\nif (typeof self !== 'undefined') {\n\tmodule.exports = self;\n} else if (typeof window !== 'undefined') {\n\tmodule.exports = window;\n} else {\n\tmodule.exports = Function('return this')();\n}\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\n\t\treturn implementation;\n\t}\n\treturn global;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar gOPD = require('gopd');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimGlobal() {\n\tvar polyfill = getPolyfill();\n\tif (define.supportsDescriptors) {\n\t\tvar descriptor = gOPD(polyfill, 'globalThis');\n\t\tif (\n\t\t\t!descriptor\n\t\t\t|| (\n\t\t\t\tdescriptor.configurable\n\t\t\t\t&& (descriptor.enumerable || !descriptor.writable || globalThis !== polyfill)\n\t\t\t)\n\t\t) {\n\t\t\tObject.defineProperty(polyfill, 'globalThis', {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: polyfill,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t}\n\t} else if (typeof globalThis !== 'object' || globalThis !== polyfill) {\n\t\tpolyfill.globalThis = polyfill;\n\t}\n\treturn polyfill;\n};\n", "'use strict';\n\nvar defineProperties = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = getPolyfill();\n\nvar getGlobal = function () { return polyfill; };\n\ndefineProperties(getGlobal, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = getGlobal;\n", "'use strict';\n\nvar numToStr = Number.prototype.toString;\nvar tryNumberObject = function tryNumberObject(value) {\n\ttry {\n\t\tnumToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar numClass = '[object Number]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isNumberObject(value) {\n\tif (typeof value === 'number') {\n\t\treturn true;\n\t}\n\tif (typeof value !== 'object') {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;\n};\n", "'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar $boolToStr = callBound('Boolean.prototype.toString');\nvar $toString = callBound('Object.prototype.toString');\n\nvar tryBooleanObject = function booleanBrandCheck(value) {\n\ttry {\n\t\t$boolToStr(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar boolClass = '[object Boolean]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nmodule.exports = function isBoolean(value) {\n\tif (typeof value === 'boolean') {\n\t\treturn true;\n\t}\n\tif (value === null || typeof value !== 'object') {\n\t\treturn false;\n\t}\n\treturn hasToStringTag && Symbol.toStringTag in value ? tryBooleanObject(value) : $toString(value) === boolClass;\n};\n", "'use strict';\n\nvar $BigInt = typeof BigInt !== 'undefined' && BigInt;\n\nmodule.exports = function hasNativeBigInts() {\n\treturn typeof $BigInt === 'function'\n\t\t&& typeof BigInt === 'function'\n\t\t&& typeof $BigInt(42) === 'bigint' // eslint-disable-line no-magic-numbers\n\t\t&& typeof BigInt(42) === 'bigint'; // eslint-disable-line no-magic-numbers\n};\n", "'use strict';\n\nvar hasBigInts = require('has-bigints')();\n\nif (hasBigInts) {\n\tvar bigIntValueOf = BigInt.prototype.valueOf;\n\tvar tryBigInt = function tryBigIntObject(value) {\n\t\ttry {\n\t\t\tbigIntValueOf.call(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t}\n\t\treturn false;\n\t};\n\n\tmodule.exports = function isBigInt(value) {\n\t\tif (\n\t\t\tvalue === null\n\t\t\t|| typeof value === 'undefined'\n\t\t\t|| typeof value === 'boolean'\n\t\t\t|| typeof value === 'string'\n\t\t\t|| typeof value === 'number'\n\t\t\t|| typeof value === 'symbol'\n\t\t\t|| typeof value === 'function'\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof value === 'bigint') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn tryBigInt(value);\n\t};\n} else {\n\tmodule.exports = function isBigInt(value) {\n\t\treturn false && value;\n\t};\n}\n", "'use strict';\n\nvar isString = require('is-string');\nvar isNumber = require('is-number-object');\nvar isBoolean = require('is-boolean-object');\nvar isSymbol = require('is-symbol');\nvar isBigInt = require('is-bigint');\n\n// eslint-disable-next-line consistent-return\nmodule.exports = function whichBoxedPrimitive(value) {\n\t// eslint-disable-next-line eqeqeq\n\tif (value == null || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\treturn null;\n\t}\n\tif (isString(value)) {\n\t\treturn 'String';\n\t}\n\tif (isNumber(value)) {\n\t\treturn 'Number';\n\t}\n\tif (isBoolean(value)) {\n\t\treturn 'Boolean';\n\t}\n\tif (isSymbol(value)) {\n\t\treturn 'Symbol';\n\t}\n\tif (isBigInt(value)) {\n\t\treturn 'BigInt';\n\t}\n};\n", "'use strict';\n\n/** @const */\nvar $Map = typeof Map === 'function' && Map.prototype ? Map : null;\nvar $Set = typeof Set === 'function' && Set.prototype ? Set : null;\n\nvar exported;\n\nif (!$Map) {\n\t/** @type {import('.')} */\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isMap(x) {\n\t\t// `Map` is not present in this environment.\n\t\treturn false;\n\t};\n}\n\nvar $mapHas = $Map ? Map.prototype.has : null;\nvar $setHas = $Set ? Set.prototype.has : null;\nif (!exported && !$mapHas) {\n\t/** @type {import('.')} */\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isMap(x) {\n\t\t// `Map` does not have a `has` method\n\t\treturn false;\n\t};\n}\n\n/** @type {import('.')} */\nmodule.exports = exported || function isMap(x) {\n\tif (!x || typeof x !== 'object') {\n\t\treturn false;\n\t}\n\ttry {\n\t\t$mapHas.call(x);\n\t\tif ($setHas) {\n\t\t\ttry {\n\t\t\t\t$setHas.call(x);\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// @ts-expect-error TS can't figure out that $Map is always truthy here\n\t\treturn x instanceof $Map; // core-js workaround, pre-v2.5.0\n\t} catch (e) {}\n\treturn false;\n};\n", "'use strict';\n\nvar $Map = typeof Map === 'function' && Map.prototype ? Map : null;\nvar $Set = typeof Set === 'function' && Set.prototype ? Set : null;\n\nvar exported;\n\nif (!$Set) {\n\t/** @type {import('.')} */\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isSet(x) {\n\t\t// `Set` is not present in this environment.\n\t\treturn false;\n\t};\n}\n\nvar $mapHas = $Map ? Map.prototype.has : null;\nvar $setHas = $Set ? Set.prototype.has : null;\nif (!exported && !$setHas) {\n\t/** @type {import('.')} */\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isSet(x) {\n\t\t// `Set` does not have a `has` method\n\t\treturn false;\n\t};\n}\n\n/** @type {import('.')} */\nmodule.exports = exported || function isSet(x) {\n\tif (!x || typeof x !== 'object') {\n\t\treturn false;\n\t}\n\ttry {\n\t\t$setHas.call(x);\n\t\tif ($mapHas) {\n\t\t\ttry {\n\t\t\t\t$mapHas.call(x);\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// @ts-expect-error TS can't figure out that $Set is always truthy here\n\t\treturn x instanceof $Set; // core-js workaround, pre-v2.5.0\n\t} catch (e) {}\n\treturn false;\n};\n", "'use strict';\n\nvar $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;\nvar $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;\n\nvar exported;\n\nif (!$WeakMap) {\n\t/** @type {import('.')} */\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isWeakMap(x) {\n\t\t// `WeakMap` is not present in this environment.\n\t\treturn false;\n\t};\n}\n\nvar $mapHas = $WeakMap ? $WeakMap.prototype.has : null;\nvar $setHas = $WeakSet ? $WeakSet.prototype.has : null;\nif (!exported && !$mapHas) {\n\t/** @type {import('.')} */\n\t// eslint-disable-next-line no-unused-vars\n\texported = function isWeakMap(x) {\n\t\t// `WeakMap` does not have a `has` method\n\t\treturn false;\n\t};\n}\n\n/** @type {import('.')} */\nmodule.exports = exported || function isWeakMap(x) {\n\tif (!x || typeof x !== 'object') {\n\t\treturn false;\n\t}\n\ttry {\n\t\t$mapHas.call(x, $mapHas);\n\t\tif ($setHas) {\n\t\t\ttry {\n\t\t\t\t$setHas.call(x, $setHas);\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// @ts-expect-error TS can't figure out that $WeakMap is always truthy here\n\t\treturn x instanceof $WeakMap; // core-js workaround, pre-v3\n\t} catch (e) {}\n\treturn false;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\n\nvar $WeakSet = GetIntrinsic('%WeakSet%', true);\n\nvar $setHas = callBound('WeakSet.prototype.has', true);\n\nif ($setHas) {\n\tvar $mapHas = callBound('WeakMap.prototype.has', true);\n\n\t/** @type {import('.')} */\n\tmodule.exports = function isWeakSet(x) {\n\t\tif (!x || typeof x !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\t$setHas(x, $setHas);\n\t\t\tif ($mapHas) {\n\t\t\t\ttry {\n\t\t\t\t\t$mapHas(x, $mapHas);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't figure out that $WeakSet is always truthy here\n\t\t\treturn x instanceof $WeakSet; // core-js workaround, pre-v3\n\t\t} catch (e) {}\n\t\treturn false;\n\t};\n} else {\n\t/** @type {import('.')} */\n\t// eslint-disable-next-line no-unused-vars\n\tmodule.exports = function isWeakSet(x) {\n\t\t// `WeakSet` does not exist, or does not have a `has` method\n\t\treturn false;\n\t};\n}\n", "'use strict';\n\nvar isMap = require('is-map');\nvar isSet = require('is-set');\nvar isWeakMap = require('is-weakmap');\nvar isWeakSet = require('is-weakset');\n\n/** @type {import('.')} */\nmodule.exports = function whichCollection(/** @type {unknown} */ value) {\n\tif (value && typeof value === 'object') {\n\t\tif (isMap(value)) {\n\t\t\treturn 'Map';\n\t\t}\n\t\tif (isSet(value)) {\n\t\t\treturn 'Set';\n\t\t}\n\t\tif (isWeakMap(value)) {\n\t\t\treturn 'WeakMap';\n\t\t}\n\t\tif (isWeakSet(value)) {\n\t\t\treturn 'WeakSet';\n\t\t}\n\t}\n\treturn false;\n};\n", "'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n", "'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n", "'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\n/** @type {(O: object) => string} */\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {(receiver: import('.').TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call} Getter */\n/** @type {{ [k in `\\$${import('.').TypedArrayName}`]?: Getter } & { __proto__: null }} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(fn);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = $slice(typedArray, 1);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: typeof cache, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = $slice(name, 1);\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n", "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n", "'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $deref = callBound('WeakRef.prototype.deref', true);\n\nmodule.exports = typeof WeakRef === 'undefined'\n\t? function isWeakRef(value) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n\t: function isWeakRef(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\t$deref(value);\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n", "'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $register = callBound('FinalizationRegistry.prototype.register', true);\n\nmodule.exports = $register\n\t? function isFinalizationRegistry(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\t$register(value, {});\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t: function isFinalizationRegistry(value) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar hasOwn = require('hasown');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-hasownproperty\n\nmodule.exports = function HasOwnProperty(O, P) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `O` must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: `P` must be a Property Key');\n\t}\n\treturn hasOwn(O, P);\n};\n", "'use strict';\n\nvar functionsHaveNames = function functionsHaveNames() {\n\treturn typeof function f() {}.name === 'string';\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\nif (gOPD) {\n\ttry {\n\t\tgOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\tgOPD = null;\n\t}\n}\n\nfunctionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {\n\tif (!functionsHaveNames() || !gOPD) {\n\t\treturn false;\n\t}\n\tvar desc = gOPD(function () {}, 'name');\n\treturn !!desc && !!desc.configurable;\n};\n\nvar $bind = Function.prototype.bind;\n\nfunctionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {\n\treturn functionsHaveNames() && typeof $bind === 'function' && function f() {}.bind().name !== '';\n};\n\nmodule.exports = functionsHaveNames;\n", "'use strict';\n\nvar IsCallable = require('es-abstract/2023/IsCallable');\nvar HasOwnProperty = require('es-abstract/2023/HasOwnProperty');\nvar functionsHaveNames = require('functions-have-names')();\nvar callBound = require('call-bind/callBound');\nvar $functionToString = callBound('Function.prototype.toString');\nvar $stringMatch = callBound('String.prototype.match');\nvar toStr = callBound('Object.prototype.toString');\n\nvar classRegex = /^class /;\n\nvar isClass = function isClassConstructor(fn) {\n\tif (IsCallable(fn)) {\n\t\treturn false;\n\t}\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\ttry {\n\t\tvar match = $stringMatch($functionToString(fn), classRegex);\n\t\treturn !!match;\n\t} catch (e) {}\n\treturn false;\n};\n\nvar regex = /\\s*function\\s+([^(\\s]*)\\s*/;\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar objectClass = '[object Object]';\nvar ddaClass = '[object HTMLAllCollection]';\n\nvar functionProto = Function.prototype;\n\nvar isDDA = function isDocumentDotAll() {\n\treturn false;\n};\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr(all) === toStr(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr(value);\n\t\t\t\t\t// IE 6-8 uses `objectClass`\n\t\t\t\t\treturn (str === ddaClass || str === objectClass) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = function getName() {\n\tif (isDDA(this) || (!isClass(this) && !IsCallable(this))) {\n\t\tthrow new TypeError('Function.prototype.name sham getter called on non-function');\n\t}\n\tif (functionsHaveNames && HasOwnProperty(this, 'name')) {\n\t\treturn this.name;\n\t}\n\tif (this === functionProto) {\n\t\treturn '';\n\t}\n\tvar str = $functionToString(this);\n\tvar match = $stringMatch(str, regex);\n\tvar name = match && match[1];\n\treturn name;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn implementation;\n};\n", "'use strict';\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar functionsHaveNames = require('functions-have-names')();\nvar getPolyfill = require('./polyfill');\nvar defineProperty = Object.defineProperty;\nvar TypeErr = TypeError;\n\nmodule.exports = function shimName() {\n\tvar polyfill = getPolyfill();\n\tif (functionsHaveNames) {\n\t\treturn polyfill;\n\t}\n\tif (!supportsDescriptors) {\n\t\tthrow new TypeErr('Shimming Function.prototype.name support requires ES5 property descriptor support.');\n\t}\n\tvar functionProto = Function.prototype;\n\tdefineProperty(functionProto, 'name', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tget: function () {\n\t\t\tvar name = polyfill.call(this);\n\t\t\tif (this !== functionProto) {\n\t\t\t\tdefineProperty(this, 'name', {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: name,\n\t\t\t\t\twritable: false\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn name;\n\t\t}\n\t});\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar bound = callBind(implementation);\n\ndefine(bound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = bound;\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*async(?:\\s+function(?:\\s+|\\()|\\s*\\()/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getAsyncFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return async function () {}')();\n\t} catch (e) {\n\t}\n};\nvar AsyncFunction;\n\nmodule.exports = function isAsyncFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object AsyncFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof AsyncFunction === 'undefined') {\n\t\tvar asyncFunc = getAsyncFunc();\n\t\tAsyncFunction = asyncFunc ? getProto(asyncFunc) : false;\n\t}\n\treturn getProto(fn) === AsyncFunction;\n};\n", "'use strict';\n\nvar whichBoxedPrimitive = require('which-boxed-primitive');\nvar whichCollection = require('which-collection');\nvar whichTypedArray = require('which-typed-array');\nvar isArray = require('isarray');\nvar isDate = require('is-date-object');\nvar isRegex = require('is-regex');\nvar isWeakRef = require('is-weakref');\nvar isFinalizationRegistry = require('is-finalizationregistry');\nvar name = require('function.prototype.name');\nvar isGeneratorFunction = require('is-generator-function');\nvar isAsyncFunction = require('is-async-function');\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar toStringTag = hasToStringTag && Symbol.toStringTag;\n\nvar $Object = Object;\n\nvar promiseThen = typeof Promise === 'function' && Promise.prototype.then;\nvar isPromise = function isPromise(value) {\n\tif (!value || typeof value !== 'object' || !promiseThen) {\n\t\treturn false;\n\t}\n\ttry {\n\t\tpromiseThen.call(value, null, function () {});\n\t\treturn true;\n\t} catch (e) {}\n\treturn false;\n};\n\nvar isKnownBuiltin = function isKnownBuiltin(builtinName) {\n\treturn builtinName\n\t\t// primitives\n\t\t&& builtinName !== 'BigInt'\n\t\t&& builtinName !== 'Boolean'\n\t\t&& builtinName !== 'Null'\n\t\t&& builtinName !== 'Number'\n\t\t&& builtinName !== 'String'\n\t\t&& builtinName !== 'Symbol'\n\t\t&& builtinName !== 'Undefined'\n\t\t// namespaces\n\t\t&& builtinName !== 'Math'\n\t\t&& builtinName !== 'JSON'\n\t\t&& builtinName !== 'Reflect'\n\t\t&& builtinName !== 'Atomics'\n\t\t// collections\n\t\t&& builtinName !== 'Map'\n\t\t&& builtinName !== 'Set'\n\t\t&& builtinName !== 'WeakMap'\n\t\t&& builtinName !== 'WeakSet'\n\t\t// typed arrays\n\t\t&& builtinName !== 'BigInt64Array'\n\t\t&& builtinName !== 'BigUint64Array'\n\t\t&& builtinName !== 'Float32Array'\n\t\t&& builtinName !== 'Float64Array'\n\t\t&& builtinName !== 'Int16Array'\n\t\t&& builtinName !== 'Int32Array'\n\t\t&& builtinName !== 'Int8Array'\n\t\t&& builtinName !== 'Uint16Array'\n\t\t&& builtinName !== 'Uint32Array'\n\t\t&& builtinName !== 'Uint8Array'\n\t\t&& builtinName !== 'Uint8ClampedArray'\n\t\t// checked explicitly\n\t\t&& builtinName !== 'Array'\n\t\t&& builtinName !== 'Date'\n\t\t&& builtinName !== 'FinalizationRegistry'\n\t\t&& builtinName !== 'Promise'\n\t\t&& builtinName !== 'RegExp'\n\t\t&& builtinName !== 'WeakRef'\n\t\t// functions\n\t\t&& builtinName !== 'Function'\n\t\t&& builtinName !== 'GeneratorFunction'\n\t\t&& builtinName !== 'AsyncFunction';\n};\n\nmodule.exports = function whichBuiltinType(value) {\n\tif (value == null) {\n\t\treturn value;\n\t}\n\t// covers: primitives, {,Weak}Map/Set, typed arrays\n\tvar which = whichBoxedPrimitive($Object(value)) || whichCollection(value) || whichTypedArray(value);\n\tif (which) {\n\t\treturn which;\n\t}\n\tif (isArray(value)) {\n\t\treturn 'Array';\n\t}\n\tif (isDate(value)) {\n\t\treturn 'Date';\n\t}\n\tif (isRegex(value)) {\n\t\treturn 'RegExp';\n\t}\n\tif (isWeakRef(value)) {\n\t\treturn 'WeakRef';\n\t}\n\tif (isFinalizationRegistry(value)) {\n\t\treturn 'FinalizationRegistry';\n\t}\n\tif (typeof value === 'function') {\n\t\tif (isGeneratorFunction(value)) {\n\t\t\treturn 'GeneratorFunction';\n\t\t}\n\t\tif (isAsyncFunction(value)) {\n\t\t\treturn 'AsyncFunction';\n\t\t}\n\t\treturn 'Function';\n\t}\n\tif (isPromise(value)) {\n\t\treturn 'Promise';\n\t}\n\tif (toStringTag && toStringTag in value) {\n\t\tvar tag = value[toStringTag];\n\t\tif (isKnownBuiltin(tag)) {\n\t\t\treturn tag;\n\t\t}\n\t}\n\tif (typeof value.constructor === 'function') {\n\t\tvar constructorName = name(value.constructor);\n\t\tif (isKnownBuiltin(constructorName)) {\n\t\t\treturn constructorName;\n\t\t}\n\t}\n\treturn 'Object';\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar Type = require('es-abstract/2024/Type');\nvar whichBuiltinType = require('which-builtin-type');\nvar $TypeError = require('es-errors/type');\n\nvar $gPO = GetIntrinsic('%Object.getPrototypeOf%', true);\nvar $ObjectPrototype = GetIntrinsic('%Object.prototype%');\n\nvar hasProto = [].__proto__ === Array.prototype; // eslint-disable-line no-proto\n\nmodule.exports = function getPrototypeOf(O) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Reflect.getPrototypeOf called on non-object');\n\t}\n\n\tif ($gPO) {\n\t\treturn $gPO(O);\n\t}\n\n\tif (hasProto) {\n\t\t// eslint-disable-next-line no-proto\n\t\tvar proto = O.__proto__;\n\t\tif (proto || proto === null) {\n\t\t\treturn proto;\n\t\t}\n\t}\n\tvar type = whichBuiltinType(O);\n\tif (type) {\n\t\tvar intrinsic = GetIntrinsic('%' + type + '.prototype%', true);\n\t\tif (intrinsic) {\n\t\t\treturn intrinsic;\n\t\t}\n\t}\n\tif (IsCallable(O.constructor)) {\n\t\treturn O.constructor.prototype;\n\t}\n\tif (O instanceof Object) {\n\t\treturn $ObjectPrototype;\n\t}\n\n\t/*\n\t * Correctly return null for Objects created with `Object.create(null)` (shammed or native) or `{ __proto__: null}`.  Also returns null for\n\t * cross-realm objects on browsers that lack `__proto__` support (like IE <11), but that's the best we can do.\n\t */\n\treturn null;\n};\n", "'use strict';\n\nvar Type = require('es-abstract/2024/Type');\n\nvar $TypeError = require('es-errors/type');\n\nvar implementation = require('./implementation');\n\nvar hasProto = [].__proto__ === Array.prototype; // eslint-disable-line no-proto\n\nvar getProto = function getPrototypeOf(value) {\n\tif (Type(value) !== 'Object') {\n\t\tthrow new $TypeError('Reflect.getPrototypeOf called on non-object');\n\t}\n\treturn value.__proto__; // eslint-disable-line no-proto\n};\n\nmodule.exports = function getPolyfill() {\n\tif (typeof Reflect === 'object' && Reflect && Reflect.getPrototypeOf) {\n\t\treturn Reflect.getPrototypeOf;\n\t}\n\tif (hasProto) {\n\t\treturn getProto;\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimGetPrototypeOf() {\n\tdefine(\n\t\tglobal,\n\t\t{ Reflect: {} },\n\t\t{ Reflect: function () { return typeof Reflect !== 'object' || !Reflect; } }\n\t);\n\n\tvar polyfill = getPolyfill();\n\tdefine(\n\t\tReflect,\n\t\t{ getPrototypeOf: polyfill },\n\t\t{ getPrototypeOf: function () { return Reflect.getPrototypeOf !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar bound = callBind(getPolyfill(), typeof Reflect === 'object' ? Reflect : Object);\n\ndefine(bound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = bound;\n", "'use strict';\n\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();\n\nvar $TypeError = require('es-errors/type');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionName(fn, name) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\tif (!loose || functionsHaveConfigurableNames) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'name', name, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'name', name);\n\t\t}\n\t}\n\treturn fn;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar gPO = require('reflect.getprototypeof');\nvar hasSymbols = require('has-symbols');\nvar define = require('define-properties');\nvar setFunctionName = require('set-function-name');\n\nvar arrayIterProto = GetIntrinsic('%ArrayIteratorPrototype%', true);\n\nvar iterProto = arrayIterProto && gPO(arrayIterProto);\n\nvar result = (iterProto !== Object.prototype && iterProto) || {};\n\nif (hasSymbols()) {\n\tvar defined = {};\n\tvar predicates = {};\n\tvar trueThunk = function () {\n\t\treturn true;\n\t};\n\n\tif (!(Symbol.iterator in result)) {\n\t\t// needed when result === iterProto, or, node 0.11.15 - 3\n\t\tdefined[Symbol.iterator] = setFunctionName(function SymbolIterator() {\n\t\t\treturn this;\n\t\t}, '[Symbol.iterator]', true);\n\n\t\tpredicates[Symbol.iterator] = trueThunk;\n\t}\n\n\tdefine(result, defined, predicates);\n}\n\nmodule.exports = result;\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar hasPropertyDescriptors = require('has-property-descriptors')();\n\nvar $TypeError = require('es-errors/type');\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\n\nvar iterProto = require('iterator.prototype');\nvar callBound = require('call-bind/callBound');\n\nvar $isPrototypeOf = callBound('Object.prototype.isPrototypeOf');\n\nvar $Iterator = typeof Iterator === 'function' ? Iterator : function Iterator() {\n\tif (\n\t\t!(this instanceof Iterator)\n\t\t|| this.constructor === Iterator\n\t\t|| !$isPrototypeOf(Iterator, this.constructor)\n\t) {\n\t\tthrow new $TypeError('`Iterator` can not be called or constructed directly');\n\t}\n};\n\nif ($Iterator.prototype !== iterProto) {\n\t$Iterator.prototype = iterProto;\n}\n$defineProperty($Iterator, 'prototype', { writable: false });\n\nmodule.exports = $Iterator;\n", "'use strict';\n\nvar globalThis = require('globalthis')();\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof globalThis.Iterator === 'function' ? globalThis.Iterator : implementation;\n};\n", "'use strict';\n\nmodule.exports = require('iterator.prototype');\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('es-abstract/2024/Call');\nvar CreateIterResultObject = require('es-abstract/2024/CreateIterResultObject');\nvar GetMethod = require('es-abstract/2024/GetMethod');\nvar Type = require('es-abstract/2024/Type');\n\nvar SLOT = require('internal-slot');\nvar iterProto = require('../Iterator.prototype/implementation');\n\n// https://tc39.es/proposal-iterator-helpers/#sec-wrapforvaliditeratorprototype-object\n\nmodule.exports = /* GetIntrinsic('%WrapForValidIteratorPrototype%', true) || */ {\n\t__proto__: iterProto,\n\tnext: function next() {\n\t\tvar O = this; // step 1\n\n\t\t// RequireInternalSlot(O, [[Iterated]]); // step 2\n\t\tSLOT.assert(O, '[[Iterated]]');\n\n\t\tvar iteratorRecord = SLOT.get(O, '[[Iterated]]'); // step 3\n\n\t\treturn Call(iteratorRecord['[[NextMethod]]'], iteratorRecord['[[Iterator]]']); // step 4\n\t},\n\t'return': function () {\n\t\tvar O = this; // step 1\n\n\t\t// RequireInternalSlot(O, [[Iterated]]); // step 2\n\t\tSLOT.assert(O, '[[Iterated]]');\n\n\t\tvar iterator = SLOT.get(O, '[[Iterated]]')['[[Iterator]]']; // step 3\n\n\t\tif (Type(iterator) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator must be an Object'); // step 4\n\t\t}\n\n\t\tvar returnMethod = GetMethod(iterator, 'return'); // step 5\n\n\t\tif (typeof returnMethod === 'undefined') { // step 6\n\t\t\treturn CreateIterResultObject(undefined, true); // step 6.a\n\t\t}\n\t\treturn Call(returnMethod, iterator); // step 7\n\t}\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar GetIteratorFlattenable = require('../aos/GetIteratorFlattenable');\nvar OrdinaryHasInstance = require('es-abstract/2024/OrdinaryHasInstance');\nvar OrdinaryObjectCreate = require('es-abstract/2024/OrdinaryObjectCreate');\n\nvar $Iterator = require('../Iterator/polyfill')();\nvar $WrapForValidIteratorPrototype = require('../WrapForValidIteratorPrototype');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function from(O) {\n\tif (this instanceof from) {\n\t\tthrow new $TypeError('`Iterator.from` is not a constructor');\n\t}\n\n\tvar iteratorRecord = GetIteratorFlattenable(O, 'iterate-strings'); // step 1\n\n\tvar hasInstance = OrdinaryHasInstance($Iterator, iteratorRecord['[[Iterator]]']); // step 2\n\n\tif (hasInstance) { // step 3\n\t\treturn iteratorRecord['[[Iterator]]']; // step 3.a\n\t}\n\n\tvar wrapper = OrdinaryObjectCreate($WrapForValidIteratorPrototype); // , ['[[Iterated]]']); // step 4\n\n\tSLOT.set(wrapper, '[[Iterated]]', iteratorRecord); // step 5\n\n\treturn wrapper; // step 6\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar globalThis = require('globalthis')();\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimIterator() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\tglobalThis,\n\t\t{ Iterator: polyfill },\n\t\t{ Iterator: function () { return Iterator !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill());\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nvar $Iterator = require('../Iterator');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof $Iterator.from === 'function' ? $Iterator.from : implementation;\n};\n", "'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nvar getIteratorPolyfill = require('../Iterator/polyfill');\n\nmodule.exports = function shimIteratorFrom() {\n\tvar $Iterator = getIteratorPolyfill();\n\tvar polyfill = getPolyfill();\n\tdefine(\n\t\t$Iterator,\n\t\t{ from: polyfill },\n\t\t{ from: function () { return $Iterator.from !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar bound = callBind(getPolyfill(), null);\n\ndefine(bound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = bound;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar CreateIterResultObject = require('es-abstract/2024/CreateIterResultObject');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar Type = require('es-abstract/2024/Type');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function GeneratorStart(generator, closure) {\n\tSLOT.assert(generator, '[[GeneratorState]]');\n\tSLOT.assert(generator, '[[GeneratorContext]]');\n\tSLOT.assert(generator, '[[GeneratorBrand]]');\n\tSLOT.assert(generator, '[[Sentinel]]'); // our userland slot\n\tSLOT.assert(generator, '[[CloseIfAbrupt]]'); // our second userland slot\n\n\tif (!IsCallable(closure) || closure.length !== 0) {\n\t\tthrow new $TypeError('`closure` must be a function that takes no arguments');\n\t}\n\n\tvar sentinel = SLOT.get(closure, '[[Sentinel]]');\n\tif (Type(sentinel) !== 'Object') {\n\t\tthrow new $TypeError('`closure.[[Sentinel]]` must be an object');\n\t}\n\tSLOT.set(generator, '[[GeneratorContext]]', function () { // steps 2-5\n\t\ttry {\n\t\t\tvar result = closure();\n\t\t\tif (result === sentinel) {\n\t\t\t\tSLOT.set(generator, '[[GeneratorState]]', 'completed');\n\t\t\t\tSLOT.set(generator, '[[GeneratorContext]]', null);\n\t\t\t\treturn CreateIterResultObject(void undefined, true);\n\t\t\t}\n\t\t\tSLOT.set(generator, '[[GeneratorState]]', 'suspendedYield');\n\t\t\treturn CreateIterResultObject(result, false);\n\t\t} catch (e) {\n\t\t\tSLOT.set(generator, '[[GeneratorState]]', 'completed');\n\t\t\tSLOT.set(generator, '[[GeneratorContext]]', null);\n\t\t\tthrow e;\n\t\t}\n\t});\n\n\tSLOT.set(generator, '[[GeneratorState]]', 'suspendedStart'); // step 6\n};\n", "'use strict';\n\nmodule.exports = function every(array, predicate) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (!predicate(array[i], i, array)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $concat = GetIntrinsic('%Array.prototype.concat%');\n\nvar callBind = require('call-bind');\n\nvar callBound = require('call-bind/callBound');\nvar $slice = callBound('Array.prototype.slice');\n\nvar hasSymbols = require('has-symbols/shams')();\nvar isConcatSpreadable = hasSymbols && Symbol.isConcatSpreadable;\n\n/** @type {never[]} */ var empty = [];\nvar $concatApply = isConcatSpreadable ? callBind.apply($concat, empty) : null;\n\n// eslint-disable-next-line no-extra-parens\nvar isArray = isConcatSpreadable ? /** @type {(value: unknown) => value is unknown[]} */ (require('isarray')) : null;\n\n/** @type {import('.')} */\nmodule.exports = isConcatSpreadable\n\t// eslint-disable-next-line no-unused-vars\n\t? function safeArrayConcat(item) {\n\t\tfor (var i = 0; i < arguments.length; i += 1) {\n\t\t\t/** @type {typeof item} */ var arg = arguments[i];\n\t\t\t// @ts-expect-error ts(2538) see https://github.com/microsoft/TypeScript/issues/9998#issuecomment-1890787975; works if `const`\n\t\t\tif (arg && typeof arg === 'object' && typeof arg[isConcatSpreadable] === 'boolean') {\n\t\t\t\t// @ts-expect-error ts(7015) TS doesn't yet support Symbol indexing\n\t\t\t\tif (!empty[isConcatSpreadable]) {\n\t\t\t\t\t// @ts-expect-error ts(7015) TS doesn't yet support Symbol indexing\n\t\t\t\t\tempty[isConcatSpreadable] = true;\n\t\t\t\t}\n\t\t\t\t// @ts-expect-error ts(2721) ts(18047) not sure why TS can't figure out this can't be null\n\t\t\t\tvar arr = isArray(arg) ? $slice(arg) : [arg];\n\t\t\t\t// @ts-expect-error ts(7015) TS can't handle expandos on an array\n\t\t\t\tarr[isConcatSpreadable] = true; // shadow the property. TODO: use [[Define]]\n\t\t\t\targuments[i] = arr;\n\t\t\t}\n\t\t}\n\t\t// @ts-expect-error ts(2345) https://github.com/microsoft/TypeScript/issues/57164 TS doesn't understand that apply can take an arguments object\n\t\treturn $concatApply(arguments);\n\t}\n\t: callBind($concat, empty);\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar GeneratorStart = require('./GeneratorStart');\nvar IsArray = require('es-abstract/2024/IsArray');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar OrdinaryObjectCreate = require('es-abstract/2024/OrdinaryObjectCreate');\n\nvar every = require('es-abstract/helpers/every');\n\nvar SLOT = require('internal-slot');\n\nvar safeConcat = require('safe-array-concat');\n\nvar isString = function isString(slot) {\n\treturn typeof slot === 'string';\n};\n\nmodule.exports = function CreateIteratorFromClosure(closure, generatorBrand, proto) {\n\tif (!IsCallable(closure)) {\n\t\tthrow new $TypeError('`closure` must be a function');\n\t}\n\tif (typeof generatorBrand !== 'string') {\n\t\tthrow new $TypeError('`generatorBrand` must be a string');\n\t}\n\tvar extraSlots = arguments.length > 3 ? arguments[3] : [];\n\tif (arguments.length > 3) {\n\t\tif (!IsArray(extraSlots) || !every(extraSlots, isString)) {\n\t\t\tthrow new $TypeError('`extraSlots` must be a List of String internal slot names');\n\t\t}\n\t}\n\tvar internalSlotsList = safeConcat(extraSlots, ['[[GeneratorContext]]', '[[GeneratorBrand]]', '[[GeneratorState]]']); // step 3\n\tvar generator = OrdinaryObjectCreate(proto, internalSlotsList); // steps 4, 6\n\tSLOT.set(generator, '[[GeneratorBrand]]', generatorBrand); // step 5\n\n\tSLOT.assert(closure, '[[Sentinel]]'); // our userland slot\n\tSLOT.set(generator, '[[Sentinel]]', SLOT.get(closure, '[[Sentinel]]')); // our userland slot\n\tSLOT.assert(closure, '[[CloseIfAbrupt]]'); // our second userland slot\n\tSLOT.set(generator, '[[CloseIfAbrupt]]', SLOT.get(closure, '[[CloseIfAbrupt]]')); // our second userland slot\n\n\tGeneratorStart(generator, closure); // step 13\n\n\treturn generator; // step 15\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar IteratorComplete = require('./IteratorComplete');\nvar IteratorNext = require('./IteratorNext');\n\nvar isIteratorRecord = require('../helpers/records/iterator-record');\n\n// https://262.ecma-international.org/15.0/#sec-iteratorstepvalue\n\nmodule.exports = function IteratorStepValue(iteratorRecord) {\n\tif (!isIteratorRecord(iteratorRecord)) {\n\t\tthrow new $TypeError('Assertion failed: `iteratorRecord` must be an Iterator Record');\n\t}\n\t/* eslint no-param-reassign: 0 */\n\n\tvar result;\n\ttry {\n\t\tresult = IteratorNext(iteratorRecord); // step 1\n\t} catch (e) { // step 2\n\t\titeratorRecord['[[Done]]'] = true; // step 2.a\n\t\tthrow e; // step 2.b\n\t}\n\n\tvar done;\n\ttry {\n\t\tdone = IteratorComplete(result); // step 4\n\t} catch (e) { // step 5\n\t\titeratorRecord['[[Done]]'] = true; // step 5.a\n\t\tthrow e; // step 5.b\n\t}\n\n\tif (done) { // step 7\n\t\titeratorRecord['[[Done]]'] = true; // step 7.a\n\t\treturn 'DONE'; // step 7.b\n\t}\n\n\tvar value;\n\ttry {\n\t\tvalue = Get(result, 'value'); // step 8\n\t} catch (e) { // step 9\n\t\titeratorRecord['[[Done]]'] = true; // step 9.a\n\t\tthrow e; // step 10\n\t}\n\n\treturn value; // step 10\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar hasOwn = require('hasown');\n\nvar toStringTag = hasToStringTag ? Symbol.toStringTag : null;\n\n/** @type {import('.')} */\nmodule.exports = function setToStringTag(object, value) {\n\tvar overrideIfSet = arguments.length > 2 && arguments[2] && arguments[2].force;\n\tif (toStringTag && (overrideIfSet || !hasOwn(object, toStringTag))) {\n\t\tif ($defineProperty) {\n\t\t\t$defineProperty(object, toStringTag, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: value,\n\t\t\t\twritable: false\n\t\t\t});\n\t\t} else {\n\t\t\tobject[toStringTag] = value; // eslint-disable-line no-param-reassign\n\t\t}\n\t}\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function GeneratorValidate(generator, generatorBrand) {\n\tSLOT.assert(generator, '[[GeneratorState]]'); // step 1\n\tSLOT.assert(generator, '[[GeneratorBrand]]'); // step 2\n\n\tvar brand = SLOT.get(generator, '[[GeneratorBrand]]');\n\tif (brand !== generatorBrand) {\n\t\tthrow new $TypeError('Assertion failed: generator brand is unexpected: ' + brand);\n\t}\n\tSLOT.assert(generator, '[[GeneratorContext]]'); // step 4\n\tvar state = SLOT.get(generator, '[[GeneratorState]]'); // step 5\n\tif (state === 'executing') {\n\t\tthrow new $TypeError('generator is executing');\n\t}\n\n\treturn state; // step 7\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar CreateIterResultObject = require('es-abstract/2024/CreateIterResultObject');\nvar GeneratorValidate = require('./GeneratorValidate');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function GeneratorResume(generator, value, generatorBrand) {\n\tvar state = GeneratorValidate(generator, generatorBrand); // step 1\n\tif (state === 'completed') {\n\t\treturn CreateIterResultObject(void undefined, true); // step 2\n\t}\n\n\tif (state !== 'suspendedStart' && state !== 'suspendedYield') {\n\t\tthrow new $TypeError('Assertion failed: generator state is unexpected: ' + state); // step 3\n\t}\n\n\tvar genContext = SLOT.get(generator, '[[GeneratorContext]]');\n\n\tSLOT.set(generator, '[[GeneratorState]]', 'executing'); // step 7\n\n\tvar result = genContext(value); // steps 5-6, 8-10\n\n\treturn result;\n};\n", "'use strict';\n\nvar CompletionRecord = require('./CompletionRecord');\n\n// https://262.ecma-international.org/6.0/#sec-normalcompletion\n\nmodule.exports = function NormalCompletion(value) {\n\treturn new CompletionRecord('normal', value);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar CompletionRecord = require('es-abstract/2024/CompletionRecord');\nvar CreateIterResultObject = require('es-abstract/2024/CreateIterResultObject');\nvar GeneratorValidate = require('./GeneratorValidate');\nvar NormalCompletion = require('es-abstract/2024/NormalCompletion');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function GeneratorResumeAbrupt(generator, abruptCompletion, generatorBrand) {\n\tif (!(abruptCompletion instanceof CompletionRecord)) {\n\t\tthrow new $TypeError('Assertion failed: abruptCompletion must be a Completion Record');\n\t}\n\n\tvar state = GeneratorValidate(generator, generatorBrand); // step 1\n\n\tif (state === 'suspendedStart') { // step 2\n\t\tSLOT.set(generator, '[[GeneratorState]]', 'completed'); // step 3.a\n\t\tSLOT.set(generator, '[[GeneratorContext]]', null); // step 3.b\n\t\tstate = 'completed'; // step 3.c\n\t}\n\n\tvar value = abruptCompletion.value();\n\n\tif (state === 'completed') { // step 3\n\t\treturn CreateIterResultObject(value, true); // steps 3.a-b\n\t}\n\n\tif (state !== 'suspendedYield') {\n\t\tthrow new $TypeError('Assertion failed: generator state is unexpected: ' + state); // step 4\n\t}\n\tif (abruptCompletion.type() === 'return') {\n\t\t// due to representing `GeneratorContext` as a function, we can't safely re-invoke it, so we can't support sending it a return completion\n\t\treturn CreateIterResultObject(SLOT.get(generator, '[[CloseIfAbrupt]]')(NormalCompletion(abruptCompletion.value())), true);\n\t}\n\n\tvar genContext = SLOT.get(generator, '[[GeneratorContext]]'); // step 5\n\n\tSLOT.set(generator, '[[GeneratorState]]', 'executing'); // step 8\n\n\tvar result = genContext(value); // steps 6-7, 8-11\n\n\treturn result; // step 12\n};\n", "'use strict';\n\nvar setToStringTag = require('es-set-tostringtag');\nvar hasProto = require('has-proto')();\nvar iterProto = require('../Iterator.prototype/implementation');\nvar SLOT = require('internal-slot');\n\nvar CompletionRecord = require('es-abstract/2024/CompletionRecord');\nvar CreateIterResultObject = require('es-abstract/2024/CreateIterResultObject');\nvar GeneratorResume = require('../aos/GeneratorResume');\nvar GeneratorResumeAbrupt = require('../aos/GeneratorResumeAbrupt');\nvar IteratorClose = require('es-abstract/2024/IteratorClose');\nvar NormalCompletion = require('es-abstract/2024/NormalCompletion');\n\nvar implementation;\nif (hasProto) {\n\timplementation = {\n\t\t__proto__: iterProto,\n\t\tnext: function next() {\n\t\t\treturn GeneratorResume(this, void undefined, 'Iterator Helper');\n\t\t},\n\t\t'return': function () {\n\t\t\tvar O = this; // step 1\n\n\t\t\tSLOT.assert(O, '[[UnderlyingIterator]]'); // step 2\n\n\t\t\tSLOT.assert(O, '[[GeneratorState]]'); // step 3\n\n\t\t\tif (SLOT.get(O, '[[GeneratorState]]') === 'suspendedStart') { // step 4\n\t\t\t\tSLOT.set(O, '[[GeneratorState]]', 'completed'); // step 4.a\n\t\t\t\tIteratorClose(SLOT.get(O, '[[UnderlyingIterator]]'), NormalCompletion('unused')); // step 4.c\n\t\t\t\treturn CreateIterResultObject(void undefined, true); // step 4.d\n\t\t\t}\n\n\t\t\tvar C = new CompletionRecord('return', void undefined); // step 5\n\n\t\t\treturn GeneratorResumeAbrupt(O, C, 'Iterator Helper'); // step 6\n\t\t}\n\t};\n\tsetToStringTag(implementation, 'Iterator Helper');\n} else {\n\tvar IteratorHelper = function IteratorHelper() {};\n\tIteratorHelper.prototype = iterProto;\n\timplementation = new IteratorHelper();\n\tdelete implementation.constructor;\n\timplementation.next = function next() {\n\t\treturn GeneratorResume(this, void undefined, 'Iterator Helper');\n\t};\n\timplementation['return'] = function () {\n\t\tvar C = new CompletionRecord('return', void undefined); // step 1\n\t\treturn GeneratorResumeAbrupt(this, C, 'Iterator Helper');\n\t};\n}\n\nmodule.exports = implementation;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('es-abstract/2024/Call');\nvar CompletionRecord = require('es-abstract/2024/CompletionRecord');\nvar CreateIteratorFromClosure = require('../aos/CreateIteratorFromClosure');\nvar GetIteratorDirect = require('../aos/GetIteratorDirect');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar IteratorClose = require('es-abstract/2024/IteratorClose');\nvar IteratorStepValue = require('es-abstract/2024/IteratorStepValue');\nvar ThrowCompletion = require('es-abstract/2024/ThrowCompletion');\nvar Type = require('es-abstract/2024/Type');\n\nvar iterHelperProto = require('../IteratorHelperPrototype');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function map(mapper) {\n\tif (this instanceof map) {\n\t\tthrow new $TypeError('`map` is not a constructor');\n\t}\n\n\tvar O = this; // step 1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('`this` value must be an Object'); // step 2\n\t}\n\n\tif (!IsCallable(mapper)) {\n\t\tthrow new $TypeError('`mapper` must be a function'); // step 3\n\t}\n\n\tvar iterated = GetIteratorDirect(O); // step 4\n\n\tvar closeIfAbrupt = function (abruptCompletion) {\n\t\tif (!(abruptCompletion instanceof CompletionRecord)) {\n\t\t\tthrow new $TypeError('`abruptCompletion` must be a Completion Record');\n\t\t}\n\t\tIteratorClose(\n\t\t\titerated,\n\t\t\tabruptCompletion\n\t\t);\n\t};\n\n\tvar sentinel = {};\n\tvar counter = 0; // step 6.a\n\tvar closure = function () {\n\t\t// while (true) { // step 6.b\n\t\tvar value = IteratorStepValue(iterated); // step 6.b.i\n\t\tif (iterated['[[Done]]']) {\n\t\t\treturn sentinel; // step 6.b.ii\n\t\t}\n\n\t\tvar mapped;\n\t\ttry {\n\t\t\tmapped = Call(mapper, void undefined, [value, counter]); // step 6.b.iii\n\t\t\t// yield mapped // step 6.b.vi\n\t\t\treturn mapped;\n\t\t} catch (e) {\n\t\t\t// close iterator // step 6.b.v, 6.b.vii\n\t\t\tcloseIfAbrupt(ThrowCompletion(e));\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tcounter += 1; // step 6.b.viii\n\t\t}\n\t\t// }\n\t};\n\tSLOT.set(closure, '[[Sentinel]]', sentinel); // for the userland implementation\n\tSLOT.set(closure, '[[CloseIfAbrupt]]', closeIfAbrupt); // for the userland implementation\n\n\tvar result = CreateIteratorFromClosure(closure, 'Iterator Helper', iterHelperProto, ['[[UnderlyingIterator]]']); // step 7\n\n\tSLOT.set(result, '[[UnderlyingIterator]]', iterated); // step 8\n\n\treturn result; // step 9\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (typeof Iterator === 'function' && typeof Iterator.prototype.map === 'function') {\n\t\ttry {\n\t\t\t// https://issues.chromium.org/issues/336839115\n\t\t\tIterator.prototype.map.call({ next: null }, function () {}).next();\n\t\t} catch (e) {\n\t\t\treturn Iterator.prototype.map;\n\t\t}\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nvar $IteratorPrototype = require('../Iterator.prototype/implementation');\n\nmodule.exports = function shimIteratorPrototypeMap() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\t$IteratorPrototype,\n\t\t{ map: polyfill },\n\t\t{ map: function () { return $IteratorPrototype.map !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill());\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\nfunction getSourceCode(context) {\n  return context.getSourceCode ? context.getSourceCode() : context.sourceCode;\n}\n\nfunction getAncestors(context, node) {\n  const sourceCode = getSourceCode(context);\n  return sourceCode.getAncestors ? sourceCode.getAncestors(node) : context.getAncestors();\n}\n\nfunction getScope(context, node) {\n  const sourceCode = getSourceCode(context);\n  if (sourceCode.getScope) {\n    return sourceCode.getScope(node);\n  }\n\n  return context.getScope();\n}\n\nfunction markVariableAsUsed(name, node, context) {\n  const sourceCode = getSourceCode(context);\n  return sourceCode.markVariableAsUsed\n    ? sourceCode.markVariableAsUsed(name, node)\n    : context.markVariableAsUsed(name);\n}\n\nfunction getFirstTokens(context, node, count) {\n  const sourceCode = getSourceCode(context);\n  return sourceCode.getFirstTokens ? sourceCode.getFirstTokens(node, count) : context.getFirstTokens(node, count);\n}\n\nfunction getText(context) {\n  const sourceCode = getSourceCode(context);\n  const args = Array.prototype.slice.call(arguments, 1);\n  return sourceCode.getText ? sourceCode.getText.apply(sourceCode, args) : context.getSource.apply(context, args);\n}\n\nmodule.exports = {\n  getAncestors,\n  getFirstTokens,\n  getScope,\n  getSourceCode,\n  getText,\n  markVariableAsUsed,\n};\n", "/**\n * @fileoverview Utility functions for React components detection\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst getScope = require('./eslint').getScope;\n\n/**\n * Search a particular variable in a list\n * @param {Array} variables The variables list.\n * @param {string} name The name of the variable to search.\n * @returns {boolean} True if the variable was found, false if not.\n */\nfunction findVariable(variables, name) {\n  return variables.some((variable) => variable.name === name);\n}\n\n/**\n * Find and return a particular variable in a list\n * @param {Array} variables The variables list.\n * @param {string} name The name of the variable to search.\n * @returns {Object} Variable if the variable was found, null if not.\n */\nfunction getVariable(variables, name) {\n  return variables.find((variable) => variable.name === name);\n}\n\n/**\n * Searches for a variable in the given scope.\n *\n * @param {Object} context The current rule context.\n * @param {ASTNode} node The node to start looking from.\n * @param {string} name The name of the variable to search.\n * @returns {Object | undefined} Variable if the variable was found, undefined if not.\n */\nfunction getVariableFromContext(context, node, name) {\n  let scope = getScope(context, node);\n\n  while (scope) {\n    let variable = getVariable(scope.variables, name);\n\n    if (!variable && scope.childScopes.length) {\n      variable = getVariable(scope.childScopes[0].variables, name);\n\n      if (!variable && scope.childScopes[0].childScopes.length) {\n        variable = getVariable(scope.childScopes[0].childScopes[0].variables, name);\n      }\n    }\n\n    if (variable) {\n      return variable;\n    }\n    scope = scope.upper;\n  }\n  return undefined;\n}\n\n/**\n * Find a variable by name in the current scope.\n * @param {Object} context The current rule context.\n * @param {ASTNode} node The node to check. Must be an Identifier node.\n * @param  {string} name Name of the variable to look for.\n * @returns {ASTNode|null} Return null if the variable could not be found, ASTNode otherwise.\n */\nfunction findVariableByName(context, node, name) {\n  const variable = getVariableFromContext(context, node, name);\n\n  if (!variable || !variable.defs[0] || !variable.defs[0].node) {\n    return null;\n  }\n\n  if (variable.defs[0].node.type === 'TypeAlias') {\n    return variable.defs[0].node.right;\n  }\n\n  if (variable.defs[0].type === 'ImportBinding') {\n    return variable.defs[0].node;\n  }\n\n  return variable.defs[0].node.init;\n}\n\n/**\n * Returns the latest definition of the variable.\n * @param {Object} variable\n * @returns {Object | undefined} The latest variable definition or undefined.\n */\nfunction getLatestVariableDefinition(variable) {\n  return variable.defs[variable.defs.length - 1];\n}\n\nmodule.exports = {\n  findVariable,\n  findVariableByName,\n  getVariable,\n  getVariableFromContext,\n  getLatestVariableDefinition,\n};\n", "/**\n * @fileoverview Utility functions for React pragma configuration\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst getSourceCode = require('./eslint').getSourceCode;\n\nconst JSX_ANNOTATION_REGEX = /@jsx\\s+([^\\s]+)/;\n// Does not check for reserved keywords or unicode characters\nconst JS_IDENTIFIER_REGEX = /^[_$a-zA-Z][_$a-zA-Z0-9]*$/;\n\n/**\n * @param {Context} context\n * @returns {string}\n */\nfunction getCreateClassFromContext(context) {\n  let pragma = 'createReactClass';\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings.react && context.settings.react.createClass) {\n    pragma = context.settings.react.createClass;\n  }\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    throw new Error(`createClass pragma ${pragma} is not a valid function name`);\n  }\n  return pragma;\n}\n\n/**\n * @param {Context} context\n * @returns {string}\n */\nfunction getFragmentFromContext(context) {\n  let pragma = 'Fragment';\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings.react && context.settings.react.fragment) {\n    pragma = context.settings.react.fragment;\n  }\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    throw new Error(`Fragment pragma ${pragma} is not a valid identifier`);\n  }\n  return pragma;\n}\n\n/**\n * @param {Context} context\n * @returns {string}\n */\nfunction getFromContext(context) {\n  let pragma = 'React';\n\n  const sourceCode = getSourceCode(context);\n  const pragmaNode = sourceCode.getAllComments().find((node) => JSX_ANNOTATION_REGEX.test(node.value));\n\n  if (pragmaNode) {\n    const matches = JSX_ANNOTATION_REGEX.exec(pragmaNode.value);\n    pragma = matches[1].split('.')[0];\n    // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  } else if (context.settings.react && context.settings.react.pragma) {\n    pragma = context.settings.react.pragma;\n  }\n\n  if (!JS_IDENTIFIER_REGEX.test(pragma)) {\n    console.warn(`React pragma ${pragma} is not a valid identifier`);\n    return 'React';\n  }\n  return pragma;\n}\n\nmodule.exports = {\n  getCreateClassFromContext,\n  getFragmentFromContext,\n  getFromContext,\n};\n", "/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        PrivateIdentifier: 'PrivateIdentifier',\n        Program: 'Program',\n        Property: 'Property',\n        PropertyDefinition: 'PropertyDefinition',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        PrivateIdentifier: [],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        PropertyDefinition: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/**\n * @fileoverview Utility functions for AST\n */\n\n'use strict';\n\nconst estraverse = require('estraverse');\nconst eslintUtil = require('./eslint');\n\nconst getFirstTokens = eslintUtil.getFirstTokens;\nconst getScope = eslintUtil.getScope;\nconst getSourceCode = eslintUtil.getSourceCode;\n// const pragmaUtil = require('./pragma');\n\n/**\n * Wrapper for estraverse.traverse\n *\n * @param {ASTNode} ASTnode The AST node being checked\n * @param {Object} visitor Visitor Object for estraverse\n */\nfunction traverse(ASTnode, visitor) {\n  const opts = Object.assign({}, {\n    fallback(node) {\n      return Object.keys(node).filter((key) => key === 'children' || key === 'argument');\n    },\n  }, visitor);\n\n  opts.keys = Object.assign({}, visitor.keys, {\n    JSXElement: ['children'],\n    JSXFragment: ['children'],\n  });\n\n  estraverse.traverse(ASTnode, opts);\n}\n\nfunction loopNodes(nodes) {\n  for (let i = nodes.length - 1; i >= 0; i--) {\n    if (nodes[i].type === 'ReturnStatement') {\n      return nodes[i];\n    }\n    if (nodes[i].type === 'SwitchStatement') {\n      const j = nodes[i].cases.length - 1;\n      if (j >= 0) {\n        return loopNodes(nodes[i].cases[j].consequent);\n      }\n    }\n  }\n  return false;\n}\n\n/**\n * Find a return statement in the current node\n *\n * @param {ASTNode} node The AST node being checked\n * @returns {ASTNode | false}\n */\nfunction findReturnStatement(node) {\n  if (\n    (!node.value || !node.value.body || !node.value.body.body)\n    && (!node.body || !node.body.body)\n  ) {\n    return false;\n  }\n\n  const bodyNodes = node.value ? node.value.body.body : node.body.body;\n\n  return loopNodes(bodyNodes);\n}\n\n// eslint-disable-next-line valid-jsdoc -- valid-jsdoc cannot parse function types.\n/**\n * Helper function for traversing \"returns\" (return statements or the\n * returned expression in the case of an arrow function) of a function\n *\n * @param {ASTNode} ASTNode The AST node being checked\n * @param {Context} context The context of `ASTNode`.\n * @param {(returnValue: ASTNode, breakTraverse: () => void) => void} onReturn\n *   Function to execute for each returnStatement found\n * @returns {undefined}\n */\nfunction traverseReturns(ASTNode, context, onReturn) {\n  const nodeType = ASTNode.type;\n\n  if (nodeType === 'ReturnStatement') {\n    onReturn(ASTNode.argument, () => {});\n    return;\n  }\n\n  if (nodeType === 'ArrowFunctionExpression' && ASTNode.expression) {\n    onReturn(ASTNode.body, () => {});\n    return;\n  }\n\n  /* TODO: properly warn on React.forwardRefs having typo properties\n  if (astUtil.isCallExpression(ASTNode)) {\n    const callee = ASTNode.callee;\n    const pragma = pragmaUtil.getFromContext(context);\n    if (\n      callee.type === 'MemberExpression'\n      && callee.object.type === 'Identifier'\n      && callee.object.name === pragma\n      && callee.property.type === 'Identifier'\n      && callee.property.name === 'forwardRef'\n      && ASTNode.arguments.length > 0\n    ) {\n      return enterFunc(ASTNode.arguments[0]);\n    }\n    return;\n  }\n  */\n\n  if (\n    nodeType !== 'FunctionExpression'\n    && nodeType !== 'FunctionDeclaration'\n    && nodeType !== 'ArrowFunctionExpression'\n    && nodeType !== 'MethodDefinition'\n  ) {\n    return;\n  }\n\n  traverse(ASTNode.body, {\n    enter(node) {\n      const breakTraverse = () => {\n        this.break();\n      };\n      switch (node.type) {\n        case 'ReturnStatement':\n          this.skip();\n          onReturn(node.argument, breakTraverse);\n          return;\n        case 'BlockStatement':\n        case 'IfStatement':\n        case 'ForStatement':\n        case 'WhileStatement':\n        case 'SwitchStatement':\n        case 'SwitchCase':\n          return;\n        default:\n          this.skip();\n      }\n    },\n  });\n}\n\n/**\n * Get node with property's name\n * @param {Object} node - Property.\n * @returns {Object} Property name node.\n */\nfunction getPropertyNameNode(node) {\n  if (\n    node.key\n    || node.type === 'MethodDefinition'\n    || node.type === 'Property'\n  ) {\n    return node.key;\n  }\n  if (node.type === 'MemberExpression') {\n    return node.property;\n  }\n  return null;\n}\n\n/**\n * Get properties name\n * @param {Object} node - Property.\n * @returns {string} Property name.\n */\nfunction getPropertyName(node) {\n  const nameNode = getPropertyNameNode(node);\n  return nameNode ? nameNode.name : '';\n}\n\n/**\n * Get properties for a given AST node\n * @param {ASTNode} node The AST node being checked.\n * @returns {Array} Properties array.\n */\nfunction getComponentProperties(node) {\n  switch (node.type) {\n    case 'ClassDeclaration':\n    case 'ClassExpression':\n      return node.body.body;\n    case 'ObjectExpression':\n      return node.properties;\n    default:\n      return [];\n  }\n}\n\n/**\n * Gets the first node in a line from the initial node, excluding whitespace.\n * @param {Object} context The node to check\n * @param {ASTNode} node The node to check\n * @return {ASTNode} the first node in the line\n */\nfunction getFirstNodeInLine(context, node) {\n  const sourceCode = getSourceCode(context);\n  let token = node;\n  let lines;\n  do {\n    token = sourceCode.getTokenBefore(token);\n    lines = token.type === 'JSXText'\n      ? token.value.split('\\n')\n      : null;\n  } while (\n    token.type === 'JSXText'\n        && /^\\s*$/.test(lines[lines.length - 1])\n  );\n  return token;\n}\n\n/**\n * Checks if the node is the first in its line, excluding whitespace.\n * @param {Object} context The node to check\n * @param {ASTNode} node The node to check\n * @return {boolean} true if it's the first node in its line\n */\nfunction isNodeFirstInLine(context, node) {\n  const token = getFirstNodeInLine(context, node);\n  const startLine = node.loc.start.line;\n  const endLine = token ? token.loc.end.line : -1;\n  return startLine !== endLine;\n}\n\n/**\n * Checks if the node is a function or arrow function expression.\n * @param {ASTNode} node The node to check\n * @return {boolean} true if it's a function-like expression\n */\nfunction isFunctionLikeExpression(node) {\n  return node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression';\n}\n\n/**\n * Checks if the node is a function.\n * @param {ASTNode} node The node to check\n * @return {boolean} true if it's a function\n */\nfunction isFunction(node) {\n  return node.type === 'FunctionExpression' || node.type === 'FunctionDeclaration';\n}\n\n/**\n * Checks if node is a function declaration or expression or arrow function.\n * @param {ASTNode} node The node to check\n * @return {boolean} true if it's a function-like\n */\nfunction isFunctionLike(node) {\n  return node.type === 'FunctionDeclaration' || isFunctionLikeExpression(node);\n}\n\n/**\n * Checks if the node is a class.\n * @param {ASTNode} node The node to check\n * @return {boolean} true if it's a class\n */\nfunction isClass(node) {\n  return node.type === 'ClassDeclaration' || node.type === 'ClassExpression';\n}\n\n/**\n * Check if we are in a class constructor\n * @param {Context} context\n * @param {ASTNode} node The AST node being checked.\n * @return {boolean}\n */\nfunction inConstructor(context, node) {\n  let scope = getScope(context, node);\n  while (scope) {\n    // @ts-ignore\n    if (scope.block && scope.block.parent && scope.block.parent.kind === 'constructor') {\n      return true;\n    }\n    scope = scope.upper;\n  }\n  return false;\n}\n\n/**\n * Removes quotes from around an identifier.\n * @param {string} string the identifier to strip\n * @returns {string}\n */\nfunction stripQuotes(string) {\n  return string.replace(/^'|'$/g, '');\n}\n\n/**\n * Retrieve the name of a key node\n * @param {Context} context The AST node with the key.\n * @param {any} node The AST node with the key.\n * @return {string | undefined} the name of the key\n */\nfunction getKeyValue(context, node) {\n  if (node.type === 'ObjectTypeProperty') {\n    const tokens = getFirstTokens(context, node, 2);\n    return (tokens[0].value === '+' || tokens[0].value === '-'\n      ? tokens[1].value\n      : stripQuotes(tokens[0].value)\n    );\n  }\n  if (node.type === 'GenericTypeAnnotation') {\n    return node.id.name;\n  }\n  if (node.type === 'ObjectTypeAnnotation') {\n    return;\n  }\n  const key = node.key || node.argument;\n  if (!key) {\n    return;\n  }\n  return key.type === 'Identifier' ? key.name : key.value;\n}\n\n/**\n * Checks if a node is surrounded by parenthesis.\n *\n * @param {object} context - Context from the rule\n * @param {ASTNode} node - Node to be checked\n * @returns {boolean}\n */\nfunction isParenthesized(context, node) {\n  const sourceCode = getSourceCode(context);\n  const previousToken = sourceCode.getTokenBefore(node);\n  const nextToken = sourceCode.getTokenAfter(node);\n\n  return !!previousToken && !!nextToken\n    && previousToken.value === '(' && previousToken.range[1] <= node.range[0]\n    && nextToken.value === ')' && nextToken.range[0] >= node.range[1];\n}\n\n/**\n * Checks if a node is being assigned a value: props.bar = 'bar'\n * @param {ASTNode} node The AST node being checked.\n * @returns {boolean}\n */\nfunction isAssignmentLHS(node) {\n  return (\n    node.parent\n    && node.parent.type === 'AssignmentExpression'\n    && node.parent.left === node\n  );\n}\n\nfunction isTSAsExpression(node) {\n  return node && node.type === 'TSAsExpression';\n}\n\n/**\n * Matcher used to check whether given node is a `CallExpression`\n * @param {ASTNode} node The AST node\n * @returns {boolean} True if node is a `CallExpression`, false if not\n */\nfunction isCallExpression(node) {\n  return node && node.type === 'CallExpression';\n}\n\n/**\n * Extracts the expression node that is wrapped inside a TS type assertion\n *\n * @param {ASTNode} node - potential TS node\n * @returns {ASTNode} - unwrapped expression node\n */\nfunction unwrapTSAsExpression(node) {\n  return isTSAsExpression(node) ? node.expression : node;\n}\n\nfunction isTSTypeReference(node) {\n  if (!node) return false;\n\n  return node.type === 'TSTypeReference';\n}\n\nfunction isTSTypeAnnotation(node) {\n  if (!node) { return false; }\n\n  return node.type === 'TSTypeAnnotation';\n}\n\nfunction isTSTypeLiteral(node) {\n  if (!node) { return false; }\n\n  return node.type === 'TSTypeLiteral';\n}\n\nfunction isTSIntersectionType(node) {\n  if (!node) { return false; }\n\n  return node.type === 'TSIntersectionType';\n}\n\nfunction isTSInterfaceHeritage(node) {\n  if (!node) { return false; }\n\n  return node.type === 'TSInterfaceHeritage';\n}\n\nfunction isTSInterfaceDeclaration(node) {\n  if (!node) { return false; }\n\n  return (node.type === 'ExportNamedDeclaration' && node.declaration\n    ? node.declaration.type\n    : node.type\n  ) === 'TSInterfaceDeclaration';\n}\n\nfunction isTSTypeDeclaration(node) {\n  if (!node) { return false; }\n\n  const nodeToCheck = node.type === 'ExportNamedDeclaration' && node.declaration\n    ? node.declaration\n    : node;\n\n  return nodeToCheck.type === 'VariableDeclaration' && nodeToCheck.kind === 'type';\n}\n\nfunction isTSTypeAliasDeclaration(node) {\n  if (!node) { return false; }\n\n  if (node.type === 'ExportNamedDeclaration' && node.declaration) {\n    return node.declaration.type === 'TSTypeAliasDeclaration' && node.exportKind === 'type';\n  }\n  return node.type === 'TSTypeAliasDeclaration';\n}\n\nfunction isTSParenthesizedType(node) {\n  if (!node) { return false; }\n\n  return node.type === 'TSTypeAliasDeclaration';\n}\n\nfunction isTSFunctionType(node) {\n  if (!node) { return false; }\n\n  return node.type === 'TSFunctionType';\n}\n\nfunction isTSTypeQuery(node) {\n  if (!node) { return false; }\n\n  return node.type === 'TSTypeQuery';\n}\n\nfunction isTSTypeParameterInstantiation(node) {\n  if (!node) { return false; }\n\n  return node.type === 'TSTypeParameterInstantiation';\n}\n\nmodule.exports = {\n  findReturnStatement,\n  getComponentProperties,\n  getFirstNodeInLine,\n  getKeyValue,\n  getPropertyName,\n  getPropertyNameNode,\n  inConstructor,\n  isAssignmentLHS,\n  isCallExpression,\n  isClass,\n  isFunction,\n  isFunctionLike,\n  isFunctionLikeExpression,\n  isNodeFirstInLine,\n  isParenthesized,\n  isTSAsExpression,\n  isTSFunctionType,\n  isTSInterfaceDeclaration,\n  isTSInterfaceHeritage,\n  isTSIntersectionType,\n  isTSParenthesizedType,\n  isTSTypeAliasDeclaration,\n  isTSTypeAnnotation,\n  isTSTypeDeclaration,\n  isTSTypeLiteral,\n  isTSTypeParameterInstantiation,\n  isTSTypeQuery,\n  isTSTypeReference,\n  traverse,\n  traverseReturns,\n  unwrapTSAsExpression,\n};\n", "/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    function isExpression(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'ArrayExpression':\n            case 'AssignmentExpression':\n            case 'BinaryExpression':\n            case 'CallExpression':\n            case 'ConditionalExpression':\n            case 'FunctionExpression':\n            case 'Identifier':\n            case 'Literal':\n            case 'LogicalExpression':\n            case 'MemberExpression':\n            case 'NewExpression':\n            case 'ObjectExpression':\n            case 'SequenceExpression':\n            case 'ThisExpression':\n            case 'UnaryExpression':\n            case 'UpdateExpression':\n                return true;\n        }\n        return false;\n    }\n\n    function isIterationStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'DoWhileStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'WhileStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isStatement(node) {\n        if (node == null) { return false; }\n        switch (node.type) {\n            case 'BlockStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement':\n            case 'DebuggerStatement':\n            case 'DoWhileStatement':\n            case 'EmptyStatement':\n            case 'ExpressionStatement':\n            case 'ForInStatement':\n            case 'ForStatement':\n            case 'IfStatement':\n            case 'LabeledStatement':\n            case 'ReturnStatement':\n            case 'SwitchStatement':\n            case 'ThrowStatement':\n            case 'TryStatement':\n            case 'VariableDeclaration':\n            case 'WhileStatement':\n            case 'WithStatement':\n                return true;\n        }\n        return false;\n    }\n\n    function isSourceElement(node) {\n      return isStatement(node) || node != null && node.type === 'FunctionDeclaration';\n    }\n\n    function trailingStatement(node) {\n        switch (node.type) {\n        case 'IfStatement':\n            if (node.alternate != null) {\n                return node.alternate;\n            }\n            return node.consequent;\n\n        case 'LabeledStatement':\n        case 'ForStatement':\n        case 'ForInStatement':\n        case 'WhileStatement':\n        case 'WithStatement':\n            return node.body;\n        }\n        return null;\n    }\n\n    function isProblematicIfStatement(node) {\n        var current;\n\n        if (node.type !== 'IfStatement') {\n            return false;\n        }\n        if (node.alternate == null) {\n            return false;\n        }\n        current = node.consequent;\n        do {\n            if (current.type === 'IfStatement') {\n                if (current.alternate == null)  {\n                    return true;\n                }\n            }\n            current = trailingStatement(current);\n        } while (current);\n\n        return false;\n    }\n\n    module.exports = {\n        isExpression: isExpression,\n        isStatement: isStatement,\n        isIterationStatement: isIterationStatement,\n        isSourceElement: isSourceElement,\n        isProblematicIfStatement: isProblematicIfStatement,\n\n        trailingStatement: trailingStatement\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2013-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var ES6Regex, ES5Regex, NON_ASCII_WHITESPACES, IDENTIFIER_START, IDENTIFIER_PART, ch;\n\n    // See `tools/generate-identifier-regex.js`.\n    ES5Regex = {\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        // ECMAScript 5.1/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\n    };\n\n    ES6Regex = {\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierStart:\n        NonAsciiIdentifierStart: /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,\n        // ECMAScript 6/Unicode v9.0.0 NonAsciiIdentifierPart:\n        NonAsciiIdentifierPart: /[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n    };\n\n    function isDecimalDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39;  // 0..9\n    }\n\n    function isHexDigit(ch) {\n        return 0x30 <= ch && ch <= 0x39 ||  // 0..9\n            0x61 <= ch && ch <= 0x66 ||     // a..f\n            0x41 <= ch && ch <= 0x46;       // A..F\n    }\n\n    function isOctalDigit(ch) {\n        return ch >= 0x30 && ch <= 0x37;  // 0..7\n    }\n\n    // 7.2 White Space\n\n    NON_ASCII_WHITESPACES = [\n        0x1680,\n        0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A,\n        0x202F, 0x205F,\n        0x3000,\n        0xFEFF\n    ];\n\n    function isWhiteSpace(ch) {\n        return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 ||\n            ch >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(ch) >= 0;\n    }\n\n    // 7.3 Line Terminators\n\n    function isLineTerminator(ch) {\n        return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n    }\n\n    // 7.6 Identifier Names and Identifiers\n\n    function fromCodePoint(cp) {\n        if (cp <= 0xFFFF) { return String.fromCharCode(cp); }\n        var cu1 = String.fromCharCode(Math.floor((cp - 0x10000) / 0x400) + 0xD800);\n        var cu2 = String.fromCharCode(((cp - 0x10000) % 0x400) + 0xDC00);\n        return cu1 + cu2;\n    }\n\n    IDENTIFIER_START = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_START[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    IDENTIFIER_PART = new Array(0x80);\n    for(ch = 0; ch < 0x80; ++ch) {\n        IDENTIFIER_PART[ch] =\n            ch >= 0x61 && ch <= 0x7A ||  // a..z\n            ch >= 0x41 && ch <= 0x5A ||  // A..Z\n            ch >= 0x30 && ch <= 0x39 ||  // 0..9\n            ch === 0x24 || ch === 0x5F;  // $ (dollar) and _ (underscore)\n    }\n\n    function isIdentifierStartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES5(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierStartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_START[ch] : ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch));\n    }\n\n    function isIdentifierPartES6(ch) {\n        return ch < 0x80 ? IDENTIFIER_PART[ch] : ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch));\n    }\n\n    module.exports = {\n        isDecimalDigit: isDecimalDigit,\n        isHexDigit: isHexDigit,\n        isOctalDigit: isOctalDigit,\n        isWhiteSpace: isWhiteSpace,\n        isLineTerminator: isLineTerminator,\n        isIdentifierStartES5: isIdentifierStartES5,\n        isIdentifierPartES5: isIdentifierPartES5,\n        isIdentifierStartES6: isIdentifierStartES6,\n        isIdentifierPartES6: isIdentifierPartES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n(function () {\n    'use strict';\n\n    var code = require('./code');\n\n    function isStrictModeReservedWordES6(id) {\n        switch (id) {\n        case 'implements':\n        case 'interface':\n        case 'package':\n        case 'private':\n        case 'protected':\n        case 'public':\n        case 'static':\n        case 'let':\n            return true;\n        default:\n            return false;\n        }\n    }\n\n    function isKeywordES5(id, strict) {\n        // yield should not be treated as keyword under non-strict mode.\n        if (!strict && id === 'yield') {\n            return false;\n        }\n        return isKeywordES6(id, strict);\n    }\n\n    function isKeywordES6(id, strict) {\n        if (strict && isStrictModeReservedWordES6(id)) {\n            return true;\n        }\n\n        switch (id.length) {\n        case 2:\n            return (id === 'if') || (id === 'in') || (id === 'do');\n        case 3:\n            return (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');\n        case 4:\n            return (id === 'this') || (id === 'else') || (id === 'case') ||\n                (id === 'void') || (id === 'with') || (id === 'enum');\n        case 5:\n            return (id === 'while') || (id === 'break') || (id === 'catch') ||\n                (id === 'throw') || (id === 'const') || (id === 'yield') ||\n                (id === 'class') || (id === 'super');\n        case 6:\n            return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n                (id === 'switch') || (id === 'export') || (id === 'import');\n        case 7:\n            return (id === 'default') || (id === 'finally') || (id === 'extends');\n        case 8:\n            return (id === 'function') || (id === 'continue') || (id === 'debugger');\n        case 10:\n            return (id === 'instanceof');\n        default:\n            return false;\n        }\n    }\n\n    function isReservedWordES5(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES5(id, strict);\n    }\n\n    function isReservedWordES6(id, strict) {\n        return id === 'null' || id === 'true' || id === 'false' || isKeywordES6(id, strict);\n    }\n\n    function isRestrictedWord(id) {\n        return id === 'eval' || id === 'arguments';\n    }\n\n    function isIdentifierNameES5(id) {\n        var i, iz, ch;\n\n        if (id.length === 0) { return false; }\n\n        ch = id.charCodeAt(0);\n        if (!code.isIdentifierStartES5(ch)) {\n            return false;\n        }\n\n        for (i = 1, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (!code.isIdentifierPartES5(ch)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function decodeUtf16(lead, trail) {\n        return (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n    }\n\n    function isIdentifierNameES6(id) {\n        var i, iz, ch, lowCh, check;\n\n        if (id.length === 0) { return false; }\n\n        check = code.isIdentifierStartES6;\n        for (i = 0, iz = id.length; i < iz; ++i) {\n            ch = id.charCodeAt(i);\n            if (0xD800 <= ch && ch <= 0xDBFF) {\n                ++i;\n                if (i >= iz) { return false; }\n                lowCh = id.charCodeAt(i);\n                if (!(0xDC00 <= lowCh && lowCh <= 0xDFFF)) {\n                    return false;\n                }\n                ch = decodeUtf16(ch, lowCh);\n            }\n            if (!check(ch)) {\n                return false;\n            }\n            check = code.isIdentifierPartES6;\n        }\n        return true;\n    }\n\n    function isIdentifierES5(id, strict) {\n        return isIdentifierNameES5(id) && !isReservedWordES5(id, strict);\n    }\n\n    function isIdentifierES6(id, strict) {\n        return isIdentifierNameES6(id) && !isReservedWordES6(id, strict);\n    }\n\n    module.exports = {\n        isKeywordES5: isKeywordES5,\n        isKeywordES6: isKeywordES6,\n        isReservedWordES5: isReservedWordES5,\n        isReservedWordES6: isReservedWordES6,\n        isRestrictedWord: isRestrictedWord,\n        isIdentifierNameES5: isIdentifierNameES5,\n        isIdentifierNameES6: isIdentifierNameES6,\n        isIdentifierES5: isIdentifierES5,\n        isIdentifierES6: isIdentifierES6\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2013 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\n(function () {\n    'use strict';\n\n    exports.ast = require('./ast');\n    exports.code = require('./code');\n    exports.keyword = require('./keyword');\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "{\n  \"name\": \"doctrine\",\n  \"description\": \"JSDoc parser\",\n  \"homepage\": \"https://github.com/eslint/doctrine\",\n  \"main\": \"lib/doctrine.js\",\n  \"version\": \"2.1.0\",\n  \"engines\": {\n    \"node\": \">=0.10.0\"\n  },\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"maintainers\": [\n    {\n      \"name\": \"Nicholas C. Zakas\",\n      \"email\": \"nicholas+npm@nczconsulting.com\",\n      \"web\": \"https://www.nczonline.net\"\n    },\n    {\n      \"name\": \"Yusuke Suzuki\",\n      \"email\": \"utatane.tea@gmail.com\",\n      \"web\": \"https://github.com/Constellation\"\n    }\n  ],\n  \"repository\": \"eslint/doctrine\",\n  \"devDependencies\": {\n    \"coveralls\": \"^2.11.2\",\n    \"dateformat\": \"^1.0.11\",\n    \"eslint\": \"^1.10.3\",\n    \"eslint-release\": \"^0.10.0\",\n    \"linefix\": \"^0.1.1\",\n    \"mocha\": \"^3.4.2\",\n    \"npm-license\": \"^0.3.1\",\n    \"nyc\": \"^10.3.2\",\n    \"semver\": \"^5.0.3\",\n    \"shelljs\": \"^0.5.3\",\n    \"shelljs-nodecli\": \"^0.1.1\",\n    \"should\": \"^5.0.1\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"scripts\": {\n    \"pretest\": \"npm run lint\",\n    \"test\": \"nyc mocha\",\n    \"coveralls\": \"nyc report --reporter=text-lcov | coveralls\",\n    \"lint\": \"eslint lib/\",\n    \"release\": \"eslint-release\",\n    \"ci-release\": \"eslint-ci-release\",\n    \"alpharelease\": \"eslint-prerelease alpha\",\n    \"betarelease\": \"eslint-prerelease beta\"\n  },\n  \"dependencies\": {\n    \"esutils\": \"^2.0.2\"\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"assert\" has been externalized for browser compatibility. Cannot access \"assert.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*\n * @fileoverview Utilities for Doctrine\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n */\n\n\n(function () {\n    'use strict';\n\n    var VERSION;\n\n    VERSION = require('../package.json').version;\n    exports.VERSION = VERSION;\n\n    function DoctrineError(message) {\n        this.name = 'DoctrineError';\n        this.message = message;\n    }\n    DoctrineError.prototype = (function () {\n        var Middle = function () { };\n        Middle.prototype = Error.prototype;\n        return new Middle();\n    }());\n    DoctrineError.prototype.constructor = DoctrineError;\n    exports.DoctrineError = DoctrineError;\n\n    function throwError(message) {\n        throw new DoctrineError(message);\n    }\n    exports.throwError = throwError;\n\n    exports.assert = require('assert');\n}());\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n * @fileoverview Type expression parser.\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n * @author Dan Tao <daniel.tao@gmail.com>\n * @author Andrew Eisenberg <andrew@eisenberg.as>\n */\n\n// \"typed\", the Type Expression Parser for doctrine.\n\n(function () {\n    'use strict';\n\n    var Syntax,\n        Token,\n        source,\n        length,\n        index,\n        previous,\n        token,\n        value,\n        esutils,\n        utility,\n        rangeOffset,\n        addRange;\n\n    esutils = require('esutils');\n    utility = require('./utility');\n\n    Syntax = {\n        NullableLiteral: 'NullableLiteral',\n        AllLiteral: 'AllLiteral',\n        NullLiteral: 'NullLiteral',\n        UndefinedLiteral: 'UndefinedLiteral',\n        VoidLiteral: 'VoidLiteral',\n        UnionType: 'UnionType',\n        ArrayType: 'ArrayType',\n        RecordType: 'RecordType',\n        FieldType: 'FieldType',\n        FunctionType: 'FunctionType',\n        ParameterType: 'ParameterType',\n        RestType: 'RestType',\n        NonNullableType: 'NonNullableType',\n        OptionalType: 'OptionalType',\n        NullableType: 'NullableType',\n        NameExpression: 'NameExpression',\n        TypeApplication: 'TypeApplication',\n        StringLiteralType: 'StringLiteralType',\n        NumericLiteralType: 'NumericLiteralType',\n        BooleanLiteralType: 'BooleanLiteralType'\n    };\n\n    Token = {\n        ILLEGAL: 0,    // ILLEGAL\n        DOT_LT: 1,     // .<\n        REST: 2,       // ...\n        LT: 3,         // <\n        GT: 4,         // >\n        LPAREN: 5,     // (\n        RPAREN: 6,     // )\n        LBRACE: 7,     // {\n        RBRACE: 8,     // }\n        LBRACK: 9,    // [\n        RBRACK: 10,    // ]\n        COMMA: 11,     // ,\n        COLON: 12,     // :\n        STAR: 13,      // *\n        PIPE: 14,      // |\n        QUESTION: 15,  // ?\n        BANG: 16,      // !\n        EQUAL: 17,     // =\n        NAME: 18,      // name token\n        STRING: 19,    // string\n        NUMBER: 20,    // number\n        EOF: 21\n    };\n\n    function isTypeName(ch) {\n        return '><(){}[],:*|?!='.indexOf(String.fromCharCode(ch)) === -1 && !esutils.code.isWhiteSpace(ch) && !esutils.code.isLineTerminator(ch);\n    }\n\n    function Context(previous, index, token, value) {\n        this._previous = previous;\n        this._index = index;\n        this._token = token;\n        this._value = value;\n    }\n\n    Context.prototype.restore = function () {\n        previous = this._previous;\n        index = this._index;\n        token = this._token;\n        value = this._value;\n    };\n\n    Context.save = function () {\n        return new Context(previous, index, token, value);\n    };\n\n    function maybeAddRange(node, range) {\n        if (addRange) {\n            node.range = [range[0] + rangeOffset, range[1] + rangeOffset];\n        }\n        return node;\n    }\n\n    function advance() {\n        var ch = source.charAt(index);\n        index += 1;\n        return ch;\n    }\n\n    function scanHexEscape(prefix) {\n        var i, len, ch, code = 0;\n\n        len = (prefix === 'u') ? 4 : 2;\n        for (i = 0; i < len; ++i) {\n            if (index < length && esutils.code.isHexDigit(source.charCodeAt(index))) {\n                ch = advance();\n                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n            } else {\n                return '';\n            }\n        }\n        return String.fromCharCode(code);\n    }\n\n    function scanString() {\n        var str = '', quote, ch, code, unescaped, restore; //TODO review removal octal = false\n        quote = source.charAt(index);\n        ++index;\n\n        while (index < length) {\n            ch = advance();\n\n            if (ch === quote) {\n                quote = '';\n                break;\n            } else if (ch === '\\\\') {\n                ch = advance();\n                if (!esutils.code.isLineTerminator(ch.charCodeAt(0))) {\n                    switch (ch) {\n                    case 'n':\n                        str += '\\n';\n                        break;\n                    case 'r':\n                        str += '\\r';\n                        break;\n                    case 't':\n                        str += '\\t';\n                        break;\n                    case 'u':\n                    case 'x':\n                        restore = index;\n                        unescaped = scanHexEscape(ch);\n                        if (unescaped) {\n                            str += unescaped;\n                        } else {\n                            index = restore;\n                            str += ch;\n                        }\n                        break;\n                    case 'b':\n                        str += '\\b';\n                        break;\n                    case 'f':\n                        str += '\\f';\n                        break;\n                    case 'v':\n                        str += '\\v';\n                        break;\n\n                    default:\n                        if (esutils.code.isOctalDigit(ch.charCodeAt(0))) {\n                            code = '01234567'.indexOf(ch);\n\n                            // \\0 is not octal escape sequence\n                            // Deprecating unused code. TODO review removal\n                            //if (code !== 0) {\n                            //    octal = true;\n                            //}\n\n                            if (index < length && esutils.code.isOctalDigit(source.charCodeAt(index))) {\n                                //TODO Review Removal octal = true;\n                                code = code * 8 + '01234567'.indexOf(advance());\n\n                                // 3 digits are only allowed when string starts\n                                // with 0, 1, 2, 3\n                                if ('0123'.indexOf(ch) >= 0 &&\n                                        index < length &&\n                                        esutils.code.isOctalDigit(source.charCodeAt(index))) {\n                                    code = code * 8 + '01234567'.indexOf(advance());\n                                }\n                            }\n                            str += String.fromCharCode(code);\n                        } else {\n                            str += ch;\n                        }\n                        break;\n                    }\n                } else {\n                    if (ch ===  '\\r' && source.charCodeAt(index) === 0x0A  /* '\\n' */) {\n                        ++index;\n                    }\n                }\n            } else if (esutils.code.isLineTerminator(ch.charCodeAt(0))) {\n                break;\n            } else {\n                str += ch;\n            }\n        }\n\n        if (quote !== '') {\n            utility.throwError('unexpected quote');\n        }\n\n        value = str;\n        return Token.STRING;\n    }\n\n    function scanNumber() {\n        var number, ch;\n\n        number = '';\n        ch = source.charCodeAt(index);\n\n        if (ch !== 0x2E  /* '.' */) {\n            number = advance();\n            ch = source.charCodeAt(index);\n\n            if (number === '0') {\n                if (ch === 0x78  /* 'x' */ || ch === 0x58  /* 'X' */) {\n                    number += advance();\n                    while (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (!esutils.code.isHexDigit(ch)) {\n                            break;\n                        }\n                        number += advance();\n                    }\n\n                    if (number.length <= 2) {\n                        // only 0x\n                        utility.throwError('unexpected token');\n                    }\n\n                    if (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (esutils.code.isIdentifierStartES5(ch)) {\n                            utility.throwError('unexpected token');\n                        }\n                    }\n                    value = parseInt(number, 16);\n                    return Token.NUMBER;\n                }\n\n                if (esutils.code.isOctalDigit(ch)) {\n                    number += advance();\n                    while (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (!esutils.code.isOctalDigit(ch)) {\n                            break;\n                        }\n                        number += advance();\n                    }\n\n                    if (index < length) {\n                        ch = source.charCodeAt(index);\n                        if (esutils.code.isIdentifierStartES5(ch) || esutils.code.isDecimalDigit(ch)) {\n                            utility.throwError('unexpected token');\n                        }\n                    }\n                    value = parseInt(number, 8);\n                    return Token.NUMBER;\n                }\n\n                if (esutils.code.isDecimalDigit(ch)) {\n                    utility.throwError('unexpected token');\n                }\n            }\n\n            while (index < length) {\n                ch = source.charCodeAt(index);\n                if (!esutils.code.isDecimalDigit(ch)) {\n                    break;\n                }\n                number += advance();\n            }\n        }\n\n        if (ch === 0x2E  /* '.' */) {\n            number += advance();\n            while (index < length) {\n                ch = source.charCodeAt(index);\n                if (!esutils.code.isDecimalDigit(ch)) {\n                    break;\n                }\n                number += advance();\n            }\n        }\n\n        if (ch === 0x65  /* 'e' */ || ch === 0x45  /* 'E' */) {\n            number += advance();\n\n            ch = source.charCodeAt(index);\n            if (ch === 0x2B  /* '+' */ || ch === 0x2D  /* '-' */) {\n                number += advance();\n            }\n\n            ch = source.charCodeAt(index);\n            if (esutils.code.isDecimalDigit(ch)) {\n                number += advance();\n                while (index < length) {\n                    ch = source.charCodeAt(index);\n                    if (!esutils.code.isDecimalDigit(ch)) {\n                        break;\n                    }\n                    number += advance();\n                }\n            } else {\n                utility.throwError('unexpected token');\n            }\n        }\n\n        if (index < length) {\n            ch = source.charCodeAt(index);\n            if (esutils.code.isIdentifierStartES5(ch)) {\n                utility.throwError('unexpected token');\n            }\n        }\n\n        value = parseFloat(number);\n        return Token.NUMBER;\n    }\n\n\n    function scanTypeName() {\n        var ch, ch2;\n\n        value = advance();\n        while (index < length && isTypeName(source.charCodeAt(index))) {\n            ch = source.charCodeAt(index);\n            if (ch === 0x2E  /* '.' */) {\n                if ((index + 1) >= length) {\n                    return Token.ILLEGAL;\n                }\n                ch2 = source.charCodeAt(index + 1);\n                if (ch2 === 0x3C  /* '<' */) {\n                    break;\n                }\n            }\n            value += advance();\n        }\n        return Token.NAME;\n    }\n\n    function next() {\n        var ch;\n\n        previous = index;\n\n        while (index < length && esutils.code.isWhiteSpace(source.charCodeAt(index))) {\n            advance();\n        }\n        if (index >= length) {\n            token = Token.EOF;\n            return token;\n        }\n\n        ch = source.charCodeAt(index);\n        switch (ch) {\n        case 0x27:  /* ''' */\n        case 0x22:  /* '\"' */\n            token = scanString();\n            return token;\n\n        case 0x3A:  /* ':' */\n            advance();\n            token = Token.COLON;\n            return token;\n\n        case 0x2C:  /* ',' */\n            advance();\n            token = Token.COMMA;\n            return token;\n\n        case 0x28:  /* '(' */\n            advance();\n            token = Token.LPAREN;\n            return token;\n\n        case 0x29:  /* ')' */\n            advance();\n            token = Token.RPAREN;\n            return token;\n\n        case 0x5B:  /* '[' */\n            advance();\n            token = Token.LBRACK;\n            return token;\n\n        case 0x5D:  /* ']' */\n            advance();\n            token = Token.RBRACK;\n            return token;\n\n        case 0x7B:  /* '{' */\n            advance();\n            token = Token.LBRACE;\n            return token;\n\n        case 0x7D:  /* '}' */\n            advance();\n            token = Token.RBRACE;\n            return token;\n\n        case 0x2E:  /* '.' */\n            if (index + 1 < length) {\n                ch = source.charCodeAt(index + 1);\n                if (ch === 0x3C  /* '<' */) {\n                    advance();  // '.'\n                    advance();  // '<'\n                    token = Token.DOT_LT;\n                    return token;\n                }\n\n                if (ch === 0x2E  /* '.' */ && index + 2 < length && source.charCodeAt(index + 2) === 0x2E  /* '.' */) {\n                    advance();  // '.'\n                    advance();  // '.'\n                    advance();  // '.'\n                    token = Token.REST;\n                    return token;\n                }\n\n                if (esutils.code.isDecimalDigit(ch)) {\n                    token = scanNumber();\n                    return token;\n                }\n            }\n            token = Token.ILLEGAL;\n            return token;\n\n        case 0x3C:  /* '<' */\n            advance();\n            token = Token.LT;\n            return token;\n\n        case 0x3E:  /* '>' */\n            advance();\n            token = Token.GT;\n            return token;\n\n        case 0x2A:  /* '*' */\n            advance();\n            token = Token.STAR;\n            return token;\n\n        case 0x7C:  /* '|' */\n            advance();\n            token = Token.PIPE;\n            return token;\n\n        case 0x3F:  /* '?' */\n            advance();\n            token = Token.QUESTION;\n            return token;\n\n        case 0x21:  /* '!' */\n            advance();\n            token = Token.BANG;\n            return token;\n\n        case 0x3D:  /* '=' */\n            advance();\n            token = Token.EQUAL;\n            return token;\n\n        case 0x2D: /* '-' */\n            token = scanNumber();\n            return token;\n\n        default:\n            if (esutils.code.isDecimalDigit(ch)) {\n                token = scanNumber();\n                return token;\n            }\n\n            // type string permits following case,\n            //\n            // namespace.module.MyClass\n            //\n            // this reduced 1 token TK_NAME\n            utility.assert(isTypeName(ch));\n            token = scanTypeName();\n            return token;\n        }\n    }\n\n    function consume(target, text) {\n        utility.assert(token === target, text || 'consumed token not matched');\n        next();\n    }\n\n    function expect(target, message) {\n        if (token !== target) {\n            utility.throwError(message || 'unexpected token');\n        }\n        next();\n    }\n\n    // UnionType := '(' TypeUnionList ')'\n    //\n    // TypeUnionList :=\n    //     <<empty>>\n    //   | NonemptyTypeUnionList\n    //\n    // NonemptyTypeUnionList :=\n    //     TypeExpression\n    //   | TypeExpression '|' NonemptyTypeUnionList\n    function parseUnionType() {\n        var elements, startIndex = index - 1;\n        consume(Token.LPAREN, 'UnionType should start with (');\n        elements = [];\n        if (token !== Token.RPAREN) {\n            while (true) {\n                elements.push(parseTypeExpression());\n                if (token === Token.RPAREN) {\n                    break;\n                }\n                expect(Token.PIPE);\n            }\n        }\n        consume(Token.RPAREN, 'UnionType should end with )');\n        return maybeAddRange({\n            type: Syntax.UnionType,\n            elements: elements\n        }, [startIndex, previous]);\n    }\n\n    // ArrayType := '[' ElementTypeList ']'\n    //\n    // ElementTypeList :=\n    //     <<empty>>\n    //  | TypeExpression\n    //  | '...' TypeExpression\n    //  | TypeExpression ',' ElementTypeList\n    function parseArrayType() {\n        var elements, startIndex = index - 1, restStartIndex;\n        consume(Token.LBRACK, 'ArrayType should start with [');\n        elements = [];\n        while (token !== Token.RBRACK) {\n            if (token === Token.REST) {\n                restStartIndex = index - 3;\n                consume(Token.REST);\n                elements.push(maybeAddRange({\n                    type: Syntax.RestType,\n                    expression: parseTypeExpression()\n                }, [restStartIndex, previous]));\n                break;\n            } else {\n                elements.push(parseTypeExpression());\n            }\n            if (token !== Token.RBRACK) {\n                expect(Token.COMMA);\n            }\n        }\n        expect(Token.RBRACK);\n        return maybeAddRange({\n            type: Syntax.ArrayType,\n            elements: elements\n        }, [startIndex, previous]);\n    }\n\n    function parseFieldName() {\n        var v = value;\n        if (token === Token.NAME || token === Token.STRING) {\n            next();\n            return v;\n        }\n\n        if (token === Token.NUMBER) {\n            consume(Token.NUMBER);\n            return String(v);\n        }\n\n        utility.throwError('unexpected token');\n    }\n\n    // FieldType :=\n    //     FieldName\n    //   | FieldName ':' TypeExpression\n    //\n    // FieldName :=\n    //     NameExpression\n    //   | StringLiteral\n    //   | NumberLiteral\n    //   | ReservedIdentifier\n    function parseFieldType() {\n        var key, rangeStart = previous;\n\n        key = parseFieldName();\n        if (token === Token.COLON) {\n            consume(Token.COLON);\n            return maybeAddRange({\n                type: Syntax.FieldType,\n                key: key,\n                value: parseTypeExpression()\n            }, [rangeStart, previous]);\n        }\n        return maybeAddRange({\n            type: Syntax.FieldType,\n            key: key,\n            value: null\n        }, [rangeStart, previous]);\n    }\n\n    // RecordType := '{' FieldTypeList '}'\n    //\n    // FieldTypeList :=\n    //     <<empty>>\n    //   | FieldType\n    //   | FieldType ',' FieldTypeList\n    function parseRecordType() {\n        var fields, rangeStart = index - 1, rangeEnd;\n\n        consume(Token.LBRACE, 'RecordType should start with {');\n        fields = [];\n        if (token === Token.COMMA) {\n            consume(Token.COMMA);\n        } else {\n            while (token !== Token.RBRACE) {\n                fields.push(parseFieldType());\n                if (token !== Token.RBRACE) {\n                    expect(Token.COMMA);\n                }\n            }\n        }\n        rangeEnd = index;\n        expect(Token.RBRACE);\n        return maybeAddRange({\n            type: Syntax.RecordType,\n            fields: fields\n        }, [rangeStart, rangeEnd]);\n    }\n\n    // NameExpression :=\n    //    Identifier\n    //  | TagIdentifier ':' Identifier\n    //\n    // Tag identifier is one of \"module\", \"external\" or \"event\"\n    // Identifier is the same as Token.NAME, including any dots, something like\n    // namespace.module.MyClass\n    function parseNameExpression() {\n        var name = value, rangeStart = index - name.length;\n        expect(Token.NAME);\n\n        if (token === Token.COLON && (\n                name === 'module' ||\n                name === 'external' ||\n                name === 'event')) {\n            consume(Token.COLON);\n            name += ':' + value;\n            expect(Token.NAME);\n        }\n\n        return maybeAddRange({\n            type: Syntax.NameExpression,\n            name: name\n        }, [rangeStart, previous]);\n    }\n\n    // TypeExpressionList :=\n    //     TopLevelTypeExpression\n    //   | TopLevelTypeExpression ',' TypeExpressionList\n    function parseTypeExpressionList() {\n        var elements = [];\n\n        elements.push(parseTop());\n        while (token === Token.COMMA) {\n            consume(Token.COMMA);\n            elements.push(parseTop());\n        }\n        return elements;\n    }\n\n    // TypeName :=\n    //     NameExpression\n    //   | NameExpression TypeApplication\n    //\n    // TypeApplication :=\n    //     '.<' TypeExpressionList '>'\n    //   | '<' TypeExpressionList '>'   // this is extension of doctrine\n    function parseTypeName() {\n        var expr, applications, startIndex = index - value.length;\n\n        expr = parseNameExpression();\n        if (token === Token.DOT_LT || token === Token.LT) {\n            next();\n            applications = parseTypeExpressionList();\n            expect(Token.GT);\n            return maybeAddRange({\n                type: Syntax.TypeApplication,\n                expression: expr,\n                applications: applications\n            }, [startIndex, previous]);\n        }\n        return expr;\n    }\n\n    // ResultType :=\n    //     <<empty>>\n    //   | ':' void\n    //   | ':' TypeExpression\n    //\n    // BNF is above\n    // but, we remove <<empty>> pattern, so token is always TypeToken::COLON\n    function parseResultType() {\n        consume(Token.COLON, 'ResultType should start with :');\n        if (token === Token.NAME && value === 'void') {\n            consume(Token.NAME);\n            return {\n                type: Syntax.VoidLiteral\n            };\n        }\n        return parseTypeExpression();\n    }\n\n    // ParametersType :=\n    //     RestParameterType\n    //   | NonRestParametersType\n    //   | NonRestParametersType ',' RestParameterType\n    //\n    // RestParameterType :=\n    //     '...'\n    //     '...' Identifier\n    //\n    // NonRestParametersType :=\n    //     ParameterType ',' NonRestParametersType\n    //   | ParameterType\n    //   | OptionalParametersType\n    //\n    // OptionalParametersType :=\n    //     OptionalParameterType\n    //   | OptionalParameterType, OptionalParametersType\n    //\n    // OptionalParameterType := ParameterType=\n    //\n    // ParameterType := TypeExpression | Identifier ':' TypeExpression\n    //\n    // Identifier is \"new\" or \"this\"\n    function parseParametersType() {\n        var params = [], optionalSequence = false, expr, rest = false, startIndex, restStartIndex = index - 3, nameStartIndex;\n\n        while (token !== Token.RPAREN) {\n            if (token === Token.REST) {\n                // RestParameterType\n                consume(Token.REST);\n                rest = true;\n            }\n\n            startIndex = previous;\n\n            expr = parseTypeExpression();\n            if (expr.type === Syntax.NameExpression && token === Token.COLON) {\n                nameStartIndex = previous - expr.name.length;\n                // Identifier ':' TypeExpression\n                consume(Token.COLON);\n                expr = maybeAddRange({\n                    type: Syntax.ParameterType,\n                    name: expr.name,\n                    expression: parseTypeExpression()\n                }, [nameStartIndex, previous]);\n            }\n            if (token === Token.EQUAL) {\n                consume(Token.EQUAL);\n                expr = maybeAddRange({\n                    type: Syntax.OptionalType,\n                    expression: expr\n                }, [startIndex, previous]);\n                optionalSequence = true;\n            } else {\n                if (optionalSequence) {\n                    utility.throwError('unexpected token');\n                }\n            }\n            if (rest) {\n                expr = maybeAddRange({\n                    type: Syntax.RestType,\n                    expression: expr\n                }, [restStartIndex, previous]);\n            }\n            params.push(expr);\n            if (token !== Token.RPAREN) {\n                expect(Token.COMMA);\n            }\n        }\n        return params;\n    }\n\n    // FunctionType := 'function' FunctionSignatureType\n    //\n    // FunctionSignatureType :=\n    //   | TypeParameters '(' ')' ResultType\n    //   | TypeParameters '(' ParametersType ')' ResultType\n    //   | TypeParameters '(' 'this' ':' TypeName ')' ResultType\n    //   | TypeParameters '(' 'this' ':' TypeName ',' ParametersType ')' ResultType\n    function parseFunctionType() {\n        var isNew, thisBinding, params, result, fnType, startIndex = index - value.length;\n        utility.assert(token === Token.NAME && value === 'function', 'FunctionType should start with \\'function\\'');\n        consume(Token.NAME);\n\n        // Google Closure Compiler is not implementing TypeParameters.\n        // So we do not. if we don't get '(', we see it as error.\n        expect(Token.LPAREN);\n\n        isNew = false;\n        params = [];\n        thisBinding = null;\n        if (token !== Token.RPAREN) {\n            // ParametersType or 'this'\n            if (token === Token.NAME &&\n                    (value === 'this' || value === 'new')) {\n                // 'this' or 'new'\n                // 'new' is Closure Compiler extension\n                isNew = value === 'new';\n                consume(Token.NAME);\n                expect(Token.COLON);\n                thisBinding = parseTypeName();\n                if (token === Token.COMMA) {\n                    consume(Token.COMMA);\n                    params = parseParametersType();\n                }\n            } else {\n                params = parseParametersType();\n            }\n        }\n\n        expect(Token.RPAREN);\n\n        result = null;\n        if (token === Token.COLON) {\n            result = parseResultType();\n        }\n\n        fnType = maybeAddRange({\n            type: Syntax.FunctionType,\n            params: params,\n            result: result\n        }, [startIndex, previous]);\n        if (thisBinding) {\n            // avoid adding null 'new' and 'this' properties\n            fnType['this'] = thisBinding;\n            if (isNew) {\n                fnType['new'] = true;\n            }\n        }\n        return fnType;\n    }\n\n    // BasicTypeExpression :=\n    //     '*'\n    //   | 'null'\n    //   | 'undefined'\n    //   | TypeName\n    //   | FunctionType\n    //   | UnionType\n    //   | RecordType\n    //   | ArrayType\n    function parseBasicTypeExpression() {\n        var context, startIndex;\n        switch (token) {\n        case Token.STAR:\n            consume(Token.STAR);\n            return maybeAddRange({\n                type: Syntax.AllLiteral\n            }, [previous - 1, previous]);\n\n        case Token.LPAREN:\n            return parseUnionType();\n\n        case Token.LBRACK:\n            return parseArrayType();\n\n        case Token.LBRACE:\n            return parseRecordType();\n\n        case Token.NAME:\n            startIndex = index - value.length;\n\n            if (value === 'null') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.NullLiteral\n                }, [startIndex, previous]);\n            }\n\n            if (value === 'undefined') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.UndefinedLiteral\n                }, [startIndex, previous]);\n            }\n\n            if (value === 'true' || value === 'false') {\n                consume(Token.NAME);\n                return maybeAddRange({\n                    type: Syntax.BooleanLiteralType,\n                    value: value === 'true'\n                }, [startIndex, previous]);\n            }\n\n            context = Context.save();\n            if (value === 'function') {\n                try {\n                    return parseFunctionType();\n                } catch (e) {\n                    context.restore();\n                }\n            }\n\n            return parseTypeName();\n\n        case Token.STRING:\n            next();\n            return maybeAddRange({\n                type: Syntax.StringLiteralType,\n                value: value\n            }, [previous - value.length - 2, previous]);\n\n        case Token.NUMBER:\n            next();\n            return maybeAddRange({\n                type: Syntax.NumericLiteralType,\n                value: value\n            }, [previous - String(value).length, previous]);\n\n        default:\n            utility.throwError('unexpected token');\n        }\n    }\n\n    // TypeExpression :=\n    //     BasicTypeExpression\n    //   | '?' BasicTypeExpression\n    //   | '!' BasicTypeExpression\n    //   | BasicTypeExpression '?'\n    //   | BasicTypeExpression '!'\n    //   | '?'\n    //   | BasicTypeExpression '[]'\n    function parseTypeExpression() {\n        var expr, rangeStart;\n\n        if (token === Token.QUESTION) {\n            rangeStart = index - 1;\n            consume(Token.QUESTION);\n            if (token === Token.COMMA || token === Token.EQUAL || token === Token.RBRACE ||\n                    token === Token.RPAREN || token === Token.PIPE || token === Token.EOF ||\n                    token === Token.RBRACK || token === Token.GT) {\n                return maybeAddRange({\n                    type: Syntax.NullableLiteral\n                }, [rangeStart, previous]);\n            }\n            return maybeAddRange({\n                type: Syntax.NullableType,\n                expression: parseBasicTypeExpression(),\n                prefix: true\n            }, [rangeStart, previous]);\n        } else if (token === Token.BANG) {\n            rangeStart = index - 1;\n            consume(Token.BANG);\n            return maybeAddRange({\n                type: Syntax.NonNullableType,\n                expression: parseBasicTypeExpression(),\n                prefix: true\n            }, [rangeStart, previous]);\n        } else {\n            rangeStart = previous;\n        }\n\n        expr = parseBasicTypeExpression();\n        if (token === Token.BANG) {\n            consume(Token.BANG);\n            return maybeAddRange({\n                type: Syntax.NonNullableType,\n                expression: expr,\n                prefix: false\n            }, [rangeStart, previous]);\n        }\n\n        if (token === Token.QUESTION) {\n            consume(Token.QUESTION);\n            return maybeAddRange({\n                type: Syntax.NullableType,\n                expression: expr,\n                prefix: false\n            }, [rangeStart, previous]);\n        }\n\n        if (token === Token.LBRACK) {\n            consume(Token.LBRACK);\n            expect(Token.RBRACK, 'expected an array-style type declaration (' + value + '[])');\n            return maybeAddRange({\n                type: Syntax.TypeApplication,\n                expression: maybeAddRange({\n                    type: Syntax.NameExpression,\n                    name: 'Array'\n                }, [rangeStart, previous]),\n                applications: [expr]\n            }, [rangeStart, previous]);\n        }\n\n        return expr;\n    }\n\n    // TopLevelTypeExpression :=\n    //      TypeExpression\n    //    | TypeUnionList\n    //\n    // This rule is Google Closure Compiler extension, not ES4\n    // like,\n    //   { number | string }\n    // If strict to ES4, we should write it as\n    //   { (number|string) }\n    function parseTop() {\n        var expr, elements;\n\n        expr = parseTypeExpression();\n        if (token !== Token.PIPE) {\n            return expr;\n        }\n\n        elements = [expr];\n        consume(Token.PIPE);\n        while (true) {\n            elements.push(parseTypeExpression());\n            if (token !== Token.PIPE) {\n                break;\n            }\n            consume(Token.PIPE);\n        }\n\n        return maybeAddRange({\n            type: Syntax.UnionType,\n            elements: elements\n        }, [0, index]);\n    }\n\n    function parseTopParamType() {\n        var expr;\n\n        if (token === Token.REST) {\n            consume(Token.REST);\n            return maybeAddRange({\n                type: Syntax.RestType,\n                expression: parseTop()\n            }, [0, index]);\n        }\n\n        expr = parseTop();\n        if (token === Token.EQUAL) {\n            consume(Token.EQUAL);\n            return maybeAddRange({\n                type: Syntax.OptionalType,\n                expression: expr\n            }, [0, index]);\n        }\n\n        return expr;\n    }\n\n    function parseType(src, opt) {\n        var expr;\n\n        source = src;\n        length = source.length;\n        index = 0;\n        previous = 0;\n        addRange = opt && opt.range;\n        rangeOffset = opt && opt.startIndex || 0;\n\n        next();\n        expr = parseTop();\n\n        if (opt && opt.midstream) {\n            return {\n                expression: expr,\n                index: previous\n            };\n        }\n\n        if (token !== Token.EOF) {\n            utility.throwError('not reach to EOF');\n        }\n\n        return expr;\n    }\n\n    function parseParamType(src, opt) {\n        var expr;\n\n        source = src;\n        length = source.length;\n        index = 0;\n        previous = 0;\n        addRange = opt && opt.range;\n        rangeOffset = opt && opt.startIndex || 0;\n\n        next();\n        expr = parseTopParamType();\n\n        if (opt && opt.midstream) {\n            return {\n                expression: expr,\n                index: previous\n            };\n        }\n\n        if (token !== Token.EOF) {\n            utility.throwError('not reach to EOF');\n        }\n\n        return expr;\n    }\n\n    function stringifyImpl(node, compact, topLevel) {\n        var result, i, iz;\n\n        switch (node.type) {\n        case Syntax.NullableLiteral:\n            result = '?';\n            break;\n\n        case Syntax.AllLiteral:\n            result = '*';\n            break;\n\n        case Syntax.NullLiteral:\n            result = 'null';\n            break;\n\n        case Syntax.UndefinedLiteral:\n            result = 'undefined';\n            break;\n\n        case Syntax.VoidLiteral:\n            result = 'void';\n            break;\n\n        case Syntax.UnionType:\n            if (!topLevel) {\n                result = '(';\n            } else {\n                result = '';\n            }\n\n            for (i = 0, iz = node.elements.length; i < iz; ++i) {\n                result += stringifyImpl(node.elements[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? '|' : ' | ';\n                }\n            }\n\n            if (!topLevel) {\n                result += ')';\n            }\n            break;\n\n        case Syntax.ArrayType:\n            result = '[';\n            for (i = 0, iz = node.elements.length; i < iz; ++i) {\n                result += stringifyImpl(node.elements[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += ']';\n            break;\n\n        case Syntax.RecordType:\n            result = '{';\n            for (i = 0, iz = node.fields.length; i < iz; ++i) {\n                result += stringifyImpl(node.fields[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += '}';\n            break;\n\n        case Syntax.FieldType:\n            if (node.value) {\n                result = node.key + (compact ? ':' : ': ') + stringifyImpl(node.value, compact);\n            } else {\n                result = node.key;\n            }\n            break;\n\n        case Syntax.FunctionType:\n            result = compact ? 'function(' : 'function (';\n\n            if (node['this']) {\n                if (node['new']) {\n                    result += (compact ? 'new:' : 'new: ');\n                } else {\n                    result += (compact ? 'this:' : 'this: ');\n                }\n\n                result += stringifyImpl(node['this'], compact);\n\n                if (node.params.length !== 0) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n\n            for (i = 0, iz = node.params.length; i < iz; ++i) {\n                result += stringifyImpl(node.params[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n\n            result += ')';\n\n            if (node.result) {\n                result += (compact ? ':' : ': ') + stringifyImpl(node.result, compact);\n            }\n            break;\n\n        case Syntax.ParameterType:\n            result = node.name + (compact ? ':' : ': ') + stringifyImpl(node.expression, compact);\n            break;\n\n        case Syntax.RestType:\n            result = '...';\n            if (node.expression) {\n                result += stringifyImpl(node.expression, compact);\n            }\n            break;\n\n        case Syntax.NonNullableType:\n            if (node.prefix) {\n                result = '!' + stringifyImpl(node.expression, compact);\n            } else {\n                result = stringifyImpl(node.expression, compact) + '!';\n            }\n            break;\n\n        case Syntax.OptionalType:\n            result = stringifyImpl(node.expression, compact) + '=';\n            break;\n\n        case Syntax.NullableType:\n            if (node.prefix) {\n                result = '?' + stringifyImpl(node.expression, compact);\n            } else {\n                result = stringifyImpl(node.expression, compact) + '?';\n            }\n            break;\n\n        case Syntax.NameExpression:\n            result = node.name;\n            break;\n\n        case Syntax.TypeApplication:\n            result = stringifyImpl(node.expression, compact) + '.<';\n            for (i = 0, iz = node.applications.length; i < iz; ++i) {\n                result += stringifyImpl(node.applications[i], compact);\n                if ((i + 1) !== iz) {\n                    result += compact ? ',' : ', ';\n                }\n            }\n            result += '>';\n            break;\n\n        case Syntax.StringLiteralType:\n            result = '\"' + node.value + '\"';\n            break;\n\n        case Syntax.NumericLiteralType:\n            result = String(node.value);\n            break;\n\n        case Syntax.BooleanLiteralType:\n            result = String(node.value);\n            break;\n\n        default:\n            utility.throwError('Unknown type ' + node.type);\n        }\n\n        return result;\n    }\n\n    function stringify(node, options) {\n        if (options == null) {\n            options = {};\n        }\n        return stringifyImpl(node, options.compact, options.topLevel);\n    }\n\n    exports.parseType = parseType;\n    exports.parseParamType = parseParamType;\n    exports.stringify = stringify;\n    exports.Syntax = Syntax;\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n * @fileoverview Main Doctrine object\n * @author Yusuke Suzuki <utatane.tea@gmail.com>\n * @author Dan Tao <daniel.tao@gmail.com>\n * @author Andrew Eisenberg <andrew@eisenberg.as>\n */\n\n(function () {\n    'use strict';\n\n    var typed,\n        utility,\n        jsdoc,\n        esutils,\n        hasOwnProperty;\n\n    esutils = require('esutils');\n    typed = require('./typed');\n    utility = require('./utility');\n\n    function sliceSource(source, index, last) {\n        return source.slice(index, last);\n    }\n\n    hasOwnProperty = (function () {\n        var func = Object.prototype.hasOwnProperty;\n        return function hasOwnProperty(obj, name) {\n            return func.call(obj, name);\n        };\n    }());\n\n    function shallowCopy(obj) {\n        var ret = {}, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n\n    function isASCIIAlphanumeric(ch) {\n        return (ch >= 0x61  /* 'a' */ && ch <= 0x7A  /* 'z' */) ||\n            (ch >= 0x41  /* 'A' */ && ch <= 0x5A  /* 'Z' */) ||\n            (ch >= 0x30  /* '0' */ && ch <= 0x39  /* '9' */);\n    }\n\n    function isParamTitle(title) {\n        return title === 'param' || title === 'argument' || title === 'arg';\n    }\n\n    function isReturnTitle(title) {\n        return title === 'return' || title === 'returns';\n    }\n\n    function isProperty(title) {\n        return title === 'property' || title === 'prop';\n    }\n\n    function isNameParameterRequired(title) {\n        return isParamTitle(title) || isProperty(title) ||\n            title === 'alias' || title === 'this' || title === 'mixes' || title === 'requires';\n    }\n\n    function isAllowedName(title) {\n        return isNameParameterRequired(title) || title === 'const' || title === 'constant';\n    }\n\n    function isAllowedNested(title) {\n        return isProperty(title) || isParamTitle(title);\n    }\n\n    function isAllowedOptional(title) {\n        return isProperty(title) || isParamTitle(title);\n    }\n\n    function isTypeParameterRequired(title) {\n        return isParamTitle(title) || isReturnTitle(title) ||\n            title === 'define' || title === 'enum' ||\n            title === 'implements' || title === 'this' ||\n            title === 'type' || title === 'typedef' || isProperty(title);\n    }\n\n    // Consider deprecation instead using 'isTypeParameterRequired' and 'Rules' declaration to pick when a type is optional/required\n    // This would require changes to 'parseType'\n    function isAllowedType(title) {\n        return isTypeParameterRequired(title) || title === 'throws' || title === 'const' || title === 'constant' ||\n            title === 'namespace' || title === 'member' || title === 'var' || title === 'module' ||\n            title === 'constructor' || title === 'class' || title === 'extends' || title === 'augments' ||\n            title === 'public' || title === 'private' || title === 'protected';\n    }\n\n    // A regex character class that contains all whitespace except linebreak characters (\\r, \\n, \\u2028, \\u2029)\n    var WHITESPACE = '[ \\\\f\\\\t\\\\v\\\\u00a0\\\\u1680\\\\u180e\\\\u2000-\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]';\n\n    var STAR_MATCHER = '(' + WHITESPACE + '*(?:\\\\*' + WHITESPACE + '?)?)(.+|[\\r\\n\\u2028\\u2029])';\n\n    function unwrapComment(doc) {\n        // JSDoc comment is following form\n        //   /**\n        //    * .......\n        //    */\n\n        return doc.\n            // remove /**\n            replace(/^\\/\\*\\*?/, '').\n            // remove */\n            replace(/\\*\\/$/, '').\n            // remove ' * ' at the beginning of a line\n            replace(new RegExp(STAR_MATCHER, 'g'), '$2').\n            // remove trailing whitespace\n            replace(/\\s*$/, '');\n    }\n\n    /**\n     * Converts an index in an \"unwrapped\" JSDoc comment to the corresponding index in the original \"wrapped\" version\n     * @param {string} originalSource The original wrapped comment\n     * @param {number} unwrappedIndex The index of a character in the unwrapped string\n     * @returns {number} The index of the corresponding character in the original wrapped string\n     */\n    function convertUnwrappedCommentIndex(originalSource, unwrappedIndex) {\n        var replacedSource = originalSource.replace(/^\\/\\*\\*?/, '');\n        var numSkippedChars = 0;\n        var matcher = new RegExp(STAR_MATCHER, 'g');\n        var match;\n\n        while ((match = matcher.exec(replacedSource))) {\n            numSkippedChars += match[1].length;\n\n            if (match.index + match[0].length > unwrappedIndex + numSkippedChars) {\n                return unwrappedIndex + numSkippedChars + originalSource.length - replacedSource.length;\n            }\n        }\n\n        return originalSource.replace(/\\*\\/$/, '').replace(/\\s*$/, '').length;\n    }\n\n    // JSDoc Tag Parser\n\n    (function (exports) {\n        var Rules,\n            index,\n            lineNumber,\n            length,\n            source,\n            originalSource,\n            recoverable,\n            sloppy,\n            strict;\n\n        function advance() {\n            var ch = source.charCodeAt(index);\n            index += 1;\n            if (esutils.code.isLineTerminator(ch) && !(ch === 0x0D  /* '\\r' */ && source.charCodeAt(index) === 0x0A  /* '\\n' */)) {\n                lineNumber += 1;\n            }\n            return String.fromCharCode(ch);\n        }\n\n        function scanTitle() {\n            var title = '';\n            // waste '@'\n            advance();\n\n            while (index < length && isASCIIAlphanumeric(source.charCodeAt(index))) {\n                title += advance();\n            }\n\n            return title;\n        }\n\n        function seekContent() {\n            var ch, waiting, last = index;\n\n            waiting = false;\n            while (last < length) {\n                ch = source.charCodeAt(last);\n                if (esutils.code.isLineTerminator(ch) && !(ch === 0x0D  /* '\\r' */ && source.charCodeAt(last + 1) === 0x0A  /* '\\n' */)) {\n                    waiting = true;\n                } else if (waiting) {\n                    if (ch === 0x40  /* '@' */) {\n                        break;\n                    }\n                    if (!esutils.code.isWhiteSpace(ch)) {\n                        waiting = false;\n                    }\n                }\n                last += 1;\n            }\n            return last;\n        }\n\n        // type expression may have nest brace, such as,\n        // { { ok: string } }\n        //\n        // therefore, scanning type expression with balancing braces.\n        function parseType(title, last, addRange) {\n            var ch, brace, type, startIndex, direct = false;\n\n\n            // search '{'\n            while (index < last) {\n                ch = source.charCodeAt(index);\n                if (esutils.code.isWhiteSpace(ch)) {\n                    advance();\n                } else if (ch === 0x7B  /* '{' */) {\n                    advance();\n                    break;\n                } else {\n                    // this is direct pattern\n                    direct = true;\n                    break;\n                }\n            }\n\n\n            if (direct) {\n                return null;\n            }\n\n            // type expression { is found\n            brace = 1;\n            type = '';\n            while (index < last) {\n                ch = source.charCodeAt(index);\n                if (esutils.code.isLineTerminator(ch)) {\n                    advance();\n                } else {\n                    if (ch === 0x7D  /* '}' */) {\n                        brace -= 1;\n                        if (brace === 0) {\n                            advance();\n                            break;\n                        }\n                    } else if (ch === 0x7B  /* '{' */) {\n                        brace += 1;\n                    }\n                    if (type === '') {\n                        startIndex = index;\n                    }\n                    type += advance();\n                }\n            }\n\n            if (brace !== 0) {\n                // braces is not balanced\n                return utility.throwError('Braces are not balanced');\n            }\n\n            if (isAllowedOptional(title)) {\n                return typed.parseParamType(type, {startIndex: convertIndex(startIndex), range: addRange});\n            }\n\n            return typed.parseType(type, {startIndex: convertIndex(startIndex), range: addRange});\n        }\n\n        function scanIdentifier(last) {\n            var identifier;\n            if (!esutils.code.isIdentifierStartES5(source.charCodeAt(index)) && !source[index].match(/[0-9]/)) {\n                return null;\n            }\n            identifier = advance();\n            while (index < last && esutils.code.isIdentifierPartES5(source.charCodeAt(index))) {\n                identifier += advance();\n            }\n            return identifier;\n        }\n\n        function skipWhiteSpace(last) {\n            while (index < last && (esutils.code.isWhiteSpace(source.charCodeAt(index)) || esutils.code.isLineTerminator(source.charCodeAt(index)))) {\n                advance();\n            }\n        }\n\n        function parseName(last, allowBrackets, allowNestedParams) {\n            var name = '',\n                useBrackets,\n                insideString;\n\n\n            skipWhiteSpace(last);\n\n            if (index >= last) {\n                return null;\n            }\n\n            if (source.charCodeAt(index) === 0x5B  /* '[' */) {\n                if (allowBrackets) {\n                    useBrackets = true;\n                    name = advance();\n                } else {\n                    return null;\n                }\n            }\n\n            name += scanIdentifier(last);\n\n            if (allowNestedParams) {\n                if (source.charCodeAt(index) === 0x3A /* ':' */ && (\n                        name === 'module' ||\n                        name === 'external' ||\n                        name === 'event')) {\n                    name += advance();\n                    name += scanIdentifier(last);\n\n                }\n                if(source.charCodeAt(index) === 0x5B  /* '[' */ && source.charCodeAt(index + 1) === 0x5D  /* ']' */){\n                    name += advance();\n                    name += advance();\n                }\n                while (source.charCodeAt(index) === 0x2E  /* '.' */ ||\n                        source.charCodeAt(index) === 0x2F  /* '/' */ ||\n                        source.charCodeAt(index) === 0x23  /* '#' */ ||\n                        source.charCodeAt(index) === 0x2D  /* '-' */ ||\n                        source.charCodeAt(index) === 0x7E  /* '~' */) {\n                    name += advance();\n                    name += scanIdentifier(last);\n                }\n            }\n\n            if (useBrackets) {\n                skipWhiteSpace(last);\n                // do we have a default value for this?\n                if (source.charCodeAt(index) === 0x3D  /* '=' */) {\n                    // consume the '='' symbol\n                    name += advance();\n                    skipWhiteSpace(last);\n\n                    var ch;\n                    var bracketDepth = 1;\n\n                    // scan in the default value\n                    while (index < last) {\n                        ch = source.charCodeAt(index);\n\n                        if (esutils.code.isWhiteSpace(ch)) {\n                            if (!insideString) {\n                                skipWhiteSpace(last);\n                                ch = source.charCodeAt(index);\n                            }\n                        }\n\n                        if (ch === 0x27 /* ''' */) {\n                            if (!insideString) {\n                                insideString = '\\'';\n                            } else {\n                                if (insideString === '\\'') {\n                                    insideString = '';\n                                }\n                            }\n                        }\n\n                        if (ch === 0x22 /* '\"' */) {\n                            if (!insideString) {\n                                insideString = '\"';\n                            } else {\n                                if (insideString === '\"') {\n                                    insideString = '';\n                                }\n                            }\n                        }\n\n                        if (ch === 0x5B /* '[' */) {\n                            bracketDepth++;\n                        } else if (ch === 0x5D  /* ']' */ &&\n                            --bracketDepth === 0) {\n                            break;\n                        }\n\n                        name += advance();\n                    }\n                }\n\n                skipWhiteSpace(last);\n\n                if (index >= last || source.charCodeAt(index) !== 0x5D  /* ']' */) {\n                    // we never found a closing ']'\n                    return null;\n                }\n\n                // collect the last ']'\n                name += advance();\n            }\n\n            return name;\n        }\n\n        function skipToTag() {\n            while (index < length && source.charCodeAt(index) !== 0x40  /* '@' */) {\n                advance();\n            }\n            if (index >= length) {\n                return false;\n            }\n            utility.assert(source.charCodeAt(index) === 0x40  /* '@' */);\n            return true;\n        }\n\n        function convertIndex(rangeIndex) {\n            if (source === originalSource) {\n                return rangeIndex;\n            }\n            return convertUnwrappedCommentIndex(originalSource, rangeIndex);\n        }\n\n        function TagParser(options, title) {\n            this._options = options;\n            this._title = title.toLowerCase();\n            this._tag = {\n                title: title,\n                description: null\n            };\n            if (this._options.lineNumbers) {\n                this._tag.lineNumber = lineNumber;\n            }\n            this._first = index - title.length - 1;\n            this._last = 0;\n            // space to save special information for title parsers.\n            this._extra = { };\n        }\n\n        // addError(err, ...)\n        TagParser.prototype.addError = function addError(errorText) {\n            var args = Array.prototype.slice.call(arguments, 1),\n                msg = errorText.replace(\n                    /%(\\d)/g,\n                    function (whole, index) {\n                        utility.assert(index < args.length, 'Message reference must be in range');\n                        return args[index];\n                    }\n                );\n\n            if (!this._tag.errors) {\n                this._tag.errors = [];\n            }\n            if (strict) {\n                utility.throwError(msg);\n            }\n            this._tag.errors.push(msg);\n            return recoverable;\n        };\n\n        TagParser.prototype.parseType = function () {\n            // type required titles\n            if (isTypeParameterRequired(this._title)) {\n                try {\n                    this._tag.type = parseType(this._title, this._last, this._options.range);\n                    if (!this._tag.type) {\n                        if (!isParamTitle(this._title) && !isReturnTitle(this._title)) {\n                            if (!this.addError('Missing or invalid tag type')) {\n                                return false;\n                            }\n                        }\n                    }\n                } catch (error) {\n                    this._tag.type = null;\n                    if (!this.addError(error.message)) {\n                        return false;\n                    }\n                }\n            } else if (isAllowedType(this._title)) {\n                // optional types\n                try {\n                    this._tag.type = parseType(this._title, this._last, this._options.range);\n                } catch (e) {\n                    //For optional types, lets drop the thrown error when we hit the end of the file\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype._parseNamePath = function (optional) {\n            var name;\n            name = parseName(this._last, sloppy && isAllowedOptional(this._title), true);\n            if (!name) {\n                if (!optional) {\n                    if (!this.addError('Missing or invalid tag name')) {\n                        return false;\n                    }\n                }\n            }\n            this._tag.name = name;\n            return true;\n        };\n\n        TagParser.prototype.parseNamePath = function () {\n            return this._parseNamePath(false);\n        };\n\n        TagParser.prototype.parseNamePathOptional = function () {\n            return this._parseNamePath(true);\n        };\n\n\n        TagParser.prototype.parseName = function () {\n            var assign, name;\n\n            // param, property requires name\n            if (isAllowedName(this._title)) {\n                this._tag.name = parseName(this._last, sloppy && isAllowedOptional(this._title), isAllowedNested(this._title));\n                if (!this._tag.name) {\n                    if (!isNameParameterRequired(this._title)) {\n                        return true;\n                    }\n\n                    // it's possible the name has already been parsed but interpreted as a type\n                    // it's also possible this is a sloppy declaration, in which case it will be\n                    // fixed at the end\n                    if (isParamTitle(this._title) && this._tag.type && this._tag.type.name) {\n                        this._extra.name = this._tag.type;\n                        this._tag.name = this._tag.type.name;\n                        this._tag.type = null;\n                    } else {\n                        if (!this.addError('Missing or invalid tag name')) {\n                            return false;\n                        }\n                    }\n                } else {\n                    name = this._tag.name;\n                    if (name.charAt(0) === '[' && name.charAt(name.length - 1) === ']') {\n                        // extract the default value if there is one\n                        // example: @param {string} [somebody=John Doe] description\n                        assign = name.substring(1, name.length - 1).split('=');\n                        if (assign.length > 1) {\n                            this._tag['default'] = assign.slice(1).join('=');\n                        }\n                        this._tag.name = assign[0];\n\n                        // convert to an optional type\n                        if (this._tag.type && this._tag.type.type !== 'OptionalType') {\n                            this._tag.type = {\n                                type: 'OptionalType',\n                                expression: this._tag.type\n                            };\n                        }\n                    }\n                }\n            }\n\n\n            return true;\n        };\n\n        TagParser.prototype.parseDescription = function parseDescription() {\n            var description = sliceSource(source, index, this._last).trim();\n            if (description) {\n                if ((/^-\\s+/).test(description)) {\n                    description = description.substring(2);\n                }\n                this._tag.description = description;\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseCaption = function parseDescription() {\n            var description = sliceSource(source, index, this._last).trim();\n            var captionStartTag = '<caption>';\n            var captionEndTag = '</caption>';\n            var captionStart = description.indexOf(captionStartTag);\n            var captionEnd = description.indexOf(captionEndTag);\n            if (captionStart >= 0 && captionEnd >= 0) {\n                this._tag.caption = description.substring(\n                    captionStart + captionStartTag.length, captionEnd).trim();\n                this._tag.description = description.substring(captionEnd + captionEndTag.length).trim();\n            } else {\n                this._tag.description = description;\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseKind = function parseKind() {\n            var kind, kinds;\n            kinds = {\n                'class': true,\n                'constant': true,\n                'event': true,\n                'external': true,\n                'file': true,\n                'function': true,\n                'member': true,\n                'mixin': true,\n                'module': true,\n                'namespace': true,\n                'typedef': true\n            };\n            kind = sliceSource(source, index, this._last).trim();\n            this._tag.kind = kind;\n            if (!hasOwnProperty(kinds, kind)) {\n                if (!this.addError('Invalid kind name \\'%0\\'', kind)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseAccess = function parseAccess() {\n            var access;\n            access = sliceSource(source, index, this._last).trim();\n            this._tag.access = access;\n            if (access !== 'private' && access !== 'protected' && access !== 'public') {\n                if (!this.addError('Invalid access name \\'%0\\'', access)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.parseThis = function parseThis() {\n            // this name may be a name expression (e.g. {foo.bar}),\n            // an union (e.g. {foo.bar|foo.baz}) or a name path (e.g. foo.bar)\n            var value = sliceSource(source, index, this._last).trim();\n            if (value && value.charAt(0) === '{') {\n                var gotType = this.parseType();\n                if (gotType && this._tag.type.type === 'NameExpression' || this._tag.type.type === 'UnionType') {\n                    this._tag.name = this._tag.type.name;\n                    return true;\n                } else {\n                    return this.addError('Invalid name for this');\n                }\n            } else {\n                return this.parseNamePath();\n            }\n        };\n\n        TagParser.prototype.parseVariation = function parseVariation() {\n            var variation, text;\n            text = sliceSource(source, index, this._last).trim();\n            variation = parseFloat(text, 10);\n            this._tag.variation = variation;\n            if (isNaN(variation)) {\n                if (!this.addError('Invalid variation \\'%0\\'', text)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.ensureEnd = function () {\n            var shouldBeEmpty = sliceSource(source, index, this._last).trim();\n            if (shouldBeEmpty) {\n                if (!this.addError('Unknown content \\'%0\\'', shouldBeEmpty)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        TagParser.prototype.epilogue = function epilogue() {\n            var description;\n\n            description = this._tag.description;\n            // un-fix potentially sloppy declaration\n            if (isAllowedOptional(this._title) && !this._tag.type && description && description.charAt(0) === '[') {\n                this._tag.type = this._extra.name;\n                if (!this._tag.name) {\n                    this._tag.name = undefined;\n                }\n\n                if (!sloppy) {\n                    if (!this.addError('Missing or invalid tag name')) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        };\n\n        Rules = {\n            // http://usejsdoc.org/tags-access.html\n            'access': ['parseAccess'],\n            // http://usejsdoc.org/tags-alias.html\n            'alias': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-augments.html\n            'augments': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-constructor.html\n            'constructor': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-constructor.html\n            'class': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-extends.html\n            'extends': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-example.html\n            'example': ['parseCaption'],\n            // http://usejsdoc.org/tags-deprecated.html\n            'deprecated': ['parseDescription'],\n            // http://usejsdoc.org/tags-global.html\n            'global': ['ensureEnd'],\n            // http://usejsdoc.org/tags-inner.html\n            'inner': ['ensureEnd'],\n            // http://usejsdoc.org/tags-instance.html\n            'instance': ['ensureEnd'],\n            // http://usejsdoc.org/tags-kind.html\n            'kind': ['parseKind'],\n            // http://usejsdoc.org/tags-mixes.html\n            'mixes': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-mixin.html\n            'mixin': ['parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-member.html\n            'member': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-method.html\n            'method': ['parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-module.html\n            'module': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-method.html\n            'func': ['parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-method.html\n            'function': ['parseNamePathOptional', 'ensureEnd'],\n            // Synonym: http://usejsdoc.org/tags-member.html\n            'var': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-name.html\n            'name': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-namespace.html\n            'namespace': ['parseType', 'parseNamePathOptional', 'ensureEnd'],\n            // http://usejsdoc.org/tags-private.html\n            'private': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-protected.html\n            'protected': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-public.html\n            'public': ['parseType', 'parseDescription'],\n            // http://usejsdoc.org/tags-readonly.html\n            'readonly': ['ensureEnd'],\n            // http://usejsdoc.org/tags-requires.html\n            'requires': ['parseNamePath', 'ensureEnd'],\n            // http://usejsdoc.org/tags-since.html\n            'since': ['parseDescription'],\n            // http://usejsdoc.org/tags-static.html\n            'static': ['ensureEnd'],\n            // http://usejsdoc.org/tags-summary.html\n            'summary': ['parseDescription'],\n            // http://usejsdoc.org/tags-this.html\n            'this': ['parseThis', 'ensureEnd'],\n            // http://usejsdoc.org/tags-todo.html\n            'todo': ['parseDescription'],\n            // http://usejsdoc.org/tags-typedef.html\n            'typedef': ['parseType', 'parseNamePathOptional'],\n            // http://usejsdoc.org/tags-variation.html\n            'variation': ['parseVariation'],\n            // http://usejsdoc.org/tags-version.html\n            'version': ['parseDescription']\n        };\n\n        TagParser.prototype.parse = function parse() {\n            var i, iz, sequences, method;\n\n\n            // empty title\n            if (!this._title) {\n                if (!this.addError('Missing or invalid title')) {\n                    return null;\n                }\n            }\n\n            // Seek to content last index.\n            this._last = seekContent(this._title);\n\n            if (this._options.range) {\n                this._tag.range = [this._first, source.slice(0, this._last).replace(/\\s*$/, '').length].map(convertIndex);\n            }\n\n            if (hasOwnProperty(Rules, this._title)) {\n                sequences = Rules[this._title];\n            } else {\n                // default sequences\n                sequences = ['parseType', 'parseName', 'parseDescription', 'epilogue'];\n            }\n\n            for (i = 0, iz = sequences.length; i < iz; ++i) {\n                method = sequences[i];\n                if (!this[method]()) {\n                    return null;\n                }\n            }\n\n            return this._tag;\n        };\n\n        function parseTag(options) {\n            var title, parser, tag;\n\n            // skip to tag\n            if (!skipToTag()) {\n                return null;\n            }\n\n            // scan title\n            title = scanTitle();\n\n            // construct tag parser\n            parser = new TagParser(options, title);\n            tag = parser.parse();\n\n            // Seek global index to end of this tag.\n            while (index < parser._last) {\n                advance();\n            }\n\n            return tag;\n        }\n\n        //\n        // Parse JSDoc\n        //\n\n        function scanJSDocDescription(preserveWhitespace) {\n            var description = '', ch, atAllowed;\n\n            atAllowed = true;\n            while (index < length) {\n                ch = source.charCodeAt(index);\n\n                if (atAllowed && ch === 0x40  /* '@' */) {\n                    break;\n                }\n\n                if (esutils.code.isLineTerminator(ch)) {\n                    atAllowed = true;\n                } else if (atAllowed && !esutils.code.isWhiteSpace(ch)) {\n                    atAllowed = false;\n                }\n\n                description += advance();\n            }\n\n            return preserveWhitespace ? description : description.trim();\n        }\n\n        function parse(comment, options) {\n            var tags = [], tag, description, interestingTags, i, iz;\n\n            if (options === undefined) {\n                options = {};\n            }\n\n            if (typeof options.unwrap === 'boolean' && options.unwrap) {\n                source = unwrapComment(comment);\n            } else {\n                source = comment;\n            }\n\n            originalSource = comment;\n\n            // array of relevant tags\n            if (options.tags) {\n                if (Array.isArray(options.tags)) {\n                    interestingTags = { };\n                    for (i = 0, iz = options.tags.length; i < iz; i++) {\n                        if (typeof options.tags[i] === 'string') {\n                            interestingTags[options.tags[i]] = true;\n                        } else {\n                            utility.throwError('Invalid \"tags\" parameter: ' + options.tags);\n                        }\n                    }\n                } else {\n                    utility.throwError('Invalid \"tags\" parameter: ' + options.tags);\n                }\n            }\n\n            length = source.length;\n            index = 0;\n            lineNumber = 0;\n            recoverable = options.recoverable;\n            sloppy = options.sloppy;\n            strict = options.strict;\n\n            description = scanJSDocDescription(options.preserveWhitespace);\n\n            while (true) {\n                tag = parseTag(options);\n                if (!tag) {\n                    break;\n                }\n                if (!interestingTags || interestingTags.hasOwnProperty(tag.title)) {\n                    tags.push(tag);\n                }\n            }\n\n            return {\n                description: description,\n                tags: tags\n            };\n        }\n        exports.parse = parse;\n    }(jsdoc = {}));\n\n    exports.version = utility.VERSION;\n    exports.parse = jsdoc.parse;\n    exports.parseType = typed.parseType;\n    exports.parseParamType = typed.parseParamType;\n    exports.unwrapComment = unwrapComment;\n    exports.Syntax = shallowCopy(typed.Syntax);\n    exports.Error = utility.DoctrineError;\n    exports.type = {\n        Syntax: exports.Syntax,\n        parseType: typed.parseType,\n        parseParamType: typed.parseParamType,\n        stringify: typed.stringify\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "'use strict';\n\nconst doctrine = require('doctrine');\nconst pragmaUtil = require('./pragma');\nconst eslintUtil = require('./eslint');\n\nconst getScope = eslintUtil.getScope;\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @template {(_: object) => any} T\n * @param {T} fn\n * @returns {T}\n */\nfunction memoize(fn) {\n  const cache = new WeakMap();\n  // @ts-ignore\n  return function memoizedFn(arg) {\n    const cachedValue = cache.get(arg);\n    if (cachedValue !== undefined) {\n      return cachedValue;\n    }\n    const v = fn(arg);\n    cache.set(arg, v);\n    return v;\n  };\n}\n\nconst getPragma = memoize(pragmaUtil.getFromContext);\nconst getCreateClass = memoize(pragmaUtil.getCreateClassFromContext);\n\n/**\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\nfunction isES5Component(node, context) {\n  const pragma = getPragma(context);\n  const createClass = getCreateClass(context);\n\n  if (!node.parent || !node.parent.callee) {\n    return false;\n  }\n  const callee = node.parent.callee;\n  // React.createClass({})\n  if (callee.type === 'MemberExpression') {\n    return callee.object.name === pragma && callee.property.name === createClass;\n  }\n  // createClass({})\n  if (callee.type === 'Identifier') {\n    return callee.name === createClass;\n  }\n  return false;\n}\n\n/**\n * Check if the node is explicitly declared as a descendant of a React Component\n * @param {any} node\n * @param {Context} context\n * @returns {boolean}\n */\nfunction isExplicitComponent(node, context) {\n  const sourceCode = getSourceCode(context);\n  let comment;\n  // Sometimes the passed node may not have been parsed yet by eslint, and this function call crashes.\n  // Can be removed when eslint sets \"parent\" property for all nodes on initial AST traversal: https://github.com/eslint/eslint-scope/issues/27\n  // eslint-disable-next-line no-warning-comments\n  // FIXME: Remove try/catch when https://github.com/eslint/eslint-scope/issues/27 is implemented.\n  try {\n    comment = sourceCode.getJSDocComment(node);\n  } catch (e) {\n    comment = null;\n  }\n\n  if (comment === null) {\n    return false;\n  }\n\n  let commentAst;\n  try {\n    commentAst = doctrine.parse(comment.value, {\n      unwrap: true,\n      tags: ['extends', 'augments'],\n    });\n  } catch (e) {\n    // handle a bug in the archived `doctrine`, see #2596\n    return false;\n  }\n\n  const relevantTags = commentAst.tags.filter((tag) => tag.name === 'React.Component' || tag.name === 'React.PureComponent');\n\n  return relevantTags.length > 0;\n}\n\n/**\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\nfunction isES6Component(node, context) {\n  const pragma = getPragma(context);\n  if (isExplicitComponent(node, context)) {\n    return true;\n  }\n\n  if (!node.superClass) {\n    return false;\n  }\n  if (node.superClass.type === 'MemberExpression') {\n    return node.superClass.object.name === pragma\n          && /^(Pure)?Component$/.test(node.superClass.property.name);\n  }\n  if (node.superClass.type === 'Identifier') {\n    return /^(Pure)?Component$/.test(node.superClass.name);\n  }\n  return false;\n}\n\n/**\n * Get the parent ES5 component node from the current scope\n * @param {Context} context\n * @param {ASTNode} node\n * @returns {ASTNode|null}\n */\nfunction getParentES5Component(context, node) {\n  let scope = getScope(context, node);\n  while (scope) {\n    // @ts-ignore\n    node = scope.block && scope.block.parent && scope.block.parent.parent;\n    if (node && isES5Component(node, context)) {\n      return node;\n    }\n    scope = scope.upper;\n  }\n  return null;\n}\n\n/**\n * Get the parent ES6 component node from the current scope\n * @param {Context} context\n * @param {ASTNode} node\n * @returns {ASTNode | null}\n */\nfunction getParentES6Component(context, node) {\n  let scope = getScope(context, node);\n  while (scope && scope.type !== 'class') {\n    scope = scope.upper;\n  }\n  node = scope && scope.block;\n  if (!node || !isES6Component(node, context)) {\n    return null;\n  }\n  return node;\n}\n\n/**\n * Checks if a component extends React.PureComponent\n * @param {ASTNode} node\n * @param {Context} context\n * @returns {boolean}\n */\nfunction isPureComponent(node, context) {\n  const pragma = getPragma(context);\n  if (node.superClass) {\n    return new RegExp(`^(${pragma}\\\\.)?PureComponent$`).test(getText(context, node.superClass));\n  }\n  return false;\n}\n\n/**\n * @param {ASTNode} node\n * @returns {boolean}\n */\nfunction isStateMemberExpression(node) {\n  return node.type === 'MemberExpression'\n    && node.object.type === 'ThisExpression'\n    && node.property.name === 'state';\n}\n\nmodule.exports = {\n  isES5Component,\n  isES6Component,\n  getParentES5Component,\n  getParentES6Component,\n  isExplicitComponent,\n  isPureComponent,\n  isStateMemberExpression,\n};\n", "/**\n * @fileoverview Utility functions for type annotation detection.\n * @author Yannick Croissant\n * @author Vitor Balocco\n */\n\n'use strict';\n\nconst getFirstTokens = require('./eslint').getFirstTokens;\n\n/**\n * Checks if we are declaring a `props` argument with a flow type annotation.\n * @param {ASTNode} node The AST node being checked.\n * @param {Object} context\n * @returns {boolean} True if the node is a type annotated props declaration, false if not.\n */\nfunction isAnnotatedFunctionPropsDeclaration(node, context) {\n  if (!node || !node.params || !node.params.length) {\n    return false;\n  }\n\n  const typeNode = node.params[0].type === 'AssignmentPattern' ? node.params[0].left : node.params[0];\n\n  const tokens = getFirstTokens(context, typeNode, 2);\n  const isAnnotated = typeNode.typeAnnotation;\n  const isDestructuredProps = typeNode.type === 'ObjectPattern';\n  const isProps = tokens[0].value === 'props' || (tokens[1] && tokens[1].value === 'props');\n\n  return (isAnnotated && (isDestructuredProps || isProps));\n}\n\nmodule.exports = {\n  isAnnotatedFunctionPropsDeclaration,\n};\n", "/**\n * @fileoverview Utility functions for props\n */\n\n'use strict';\n\nconst astUtil = require('./ast');\n\n/**\n * Checks if the Identifier node passed in looks like a propTypes declaration.\n * @param {ASTNode} node The node to check. Must be an Identifier node.\n * @returns {boolean} `true` if the node is a propTypes declaration, `false` if not\n */\nfunction isPropTypesDeclaration(node) {\n  if (node && (node.type === 'ClassProperty' || node.type === 'PropertyDefinition')) {\n    // Flow support\n    if (node.typeAnnotation && node.key.name === 'props') {\n      return true;\n    }\n  }\n  return astUtil.getPropertyName(node) === 'propTypes';\n}\n\n/**\n * Checks if the node passed in looks like a contextTypes declaration.\n * @param {ASTNode} node The node to check.\n * @returns {boolean} `true` if the node is a contextTypes declaration, `false` if not\n */\nfunction isContextTypesDeclaration(node) {\n  if (node && (node.type === 'ClassProperty' || node.type === 'PropertyDefinition')) {\n    // Flow support\n    if (node.typeAnnotation && node.key.name === 'context') {\n      return true;\n    }\n  }\n  return astUtil.getPropertyName(node) === 'contextTypes';\n}\n\n/**\n * Checks if the node passed in looks like a contextType declaration.\n * @param {ASTNode} node The node to check.\n * @returns {boolean} `true` if the node is a contextType declaration, `false` if not\n */\nfunction isContextTypeDeclaration(node) {\n  return astUtil.getPropertyName(node) === 'contextType';\n}\n\n/**\n * Checks if the node passed in looks like a childContextTypes declaration.\n * @param {ASTNode} node The node to check.\n * @returns {boolean} `true` if the node is a childContextTypes declaration, `false` if not\n */\nfunction isChildContextTypesDeclaration(node) {\n  return astUtil.getPropertyName(node) === 'childContextTypes';\n}\n\n/**\n * Checks if the Identifier node passed in looks like a defaultProps declaration.\n * @param {ASTNode} node The node to check. Must be an Identifier node.\n * @returns {boolean} `true` if the node is a defaultProps declaration, `false` if not\n */\nfunction isDefaultPropsDeclaration(node) {\n  const propName = astUtil.getPropertyName(node);\n  return (propName === 'defaultProps' || propName === 'getDefaultProps');\n}\n\n/**\n * Checks if we are declaring a display name\n * @param {ASTNode} node The AST node being checked.\n * @returns {boolean} True if we are declaring a display name, false if not.\n */\nfunction isDisplayNameDeclaration(node) {\n  switch (node.type) {\n    case 'ClassProperty':\n    case 'PropertyDefinition':\n      return node.key && node.key.name === 'displayName';\n    case 'Identifier':\n      return node.name === 'displayName';\n    case 'Literal':\n      return node.value === 'displayName';\n    default:\n      return false;\n  }\n}\n\n/**\n * Checks if the PropTypes MemberExpression node passed in declares a required propType.\n * @param {ASTNode} propTypeExpression node to check. Must be a `PropTypes` MemberExpression.\n * @returns {boolean} `true` if this PropType is required, `false` if not.\n */\nfunction isRequiredPropType(propTypeExpression) {\n  return propTypeExpression.type === 'MemberExpression'\n    && propTypeExpression.property.name === 'isRequired';\n}\n\n/**\n * Returns the type arguments of a node or type parameters if type arguments are not available.\n * @param {ASTNode} node The node to get the type arguments from.\n * @returns {ASTNode} The type arguments or type parameters of the node.\n */\nfunction getTypeArguments(node) {\n  if ('typeArguments' in node) {\n    return node.typeArguments;\n  }\n  return node.typeParameters;\n}\n\n/**\n * Returns the super type arguments of a node or super type parameters if type arguments are not available.\n * @param {ASTNode} node The node to get the super type arguments from.\n * @returns {ASTNode} The super type arguments or parameters of the node.\n */\nfunction getSuperTypeArguments(node) {\n  if ('superTypeArguments' in node) {\n    return node.superTypeArguments;\n  }\n  return node.superTypeParameters;\n}\n\nmodule.exports = {\n  isPropTypesDeclaration,\n  isContextTypesDeclaration,\n  isContextTypeDeclaration,\n  isChildContextTypesDeclaration,\n  isDefaultPropsDeclaration,\n  isDisplayNameDeclaration,\n  isRequiredPropType,\n  getTypeArguments,\n  getSuperTypeArguments,\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"os\" has been externalized for browser compatibility. Cannot access \"os.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nvar os = require('os');\n\n// adapted from https://github.com/sindresorhus/os-homedir/blob/11e089f4754db38bb535e5a8416320c4446e8cfd/index.js\n\nmodule.exports = os.homedir || function homedir() {\n    var home = process.env.HOME;\n    var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n    if (process.platform === 'win32') {\n        return process.env.USERPROFILE || process.env.HOMEDRIVE + process.env.HOMEPATH || home || null;\n    }\n\n    if (process.platform === 'darwin') {\n        return home || (user ? '/Users/' + user : null);\n    }\n\n    if (process.platform === 'linux') {\n        return home || (process.getuid() === 0 ? '/root' : (user ? '/home/' + user : null)); // eslint-disable-line no-extra-parens\n    }\n\n    return home || null;\n};\n", "module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n", "'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n", "var path = require('path');\nvar parse = path.parse || require('path-parse'); // eslint-disable-line global-require\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n", "module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n", "{\n\t\"assert\": true,\n\t\"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"assert/strict\": \">= 15\",\n\t\"node:assert/strict\": \">= 16\",\n\t\"async_hooks\": \">= 8\",\n\t\"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"buffer_ieee754\": \">= 0.5 && < 0.9.7\",\n\t\"buffer\": true,\n\t\"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"child_process\": true,\n\t\"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"cluster\": \">= 0.5\",\n\t\"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"console\": true,\n\t\"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"constants\": true,\n\t\"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"crypto\": true,\n\t\"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_debug_agent\": \">= 1 && < 8\",\n\t\"_debugger\": \"< 8\",\n\t\"dgram\": true,\n\t\"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"diagnostics_channel\": [\">= 14.17 && < 15\", \">= 15.1\"],\n\t\"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns\": true,\n\t\"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"dns/promises\": \">= 15\",\n\t\"node:dns/promises\": \">= 16\",\n\t\"domain\": \">= 0.7.12\",\n\t\"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"events\": true,\n\t\"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"freelist\": \"< 6\",\n\t\"fs\": true,\n\t\"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n\t\"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_agent\": \">= 0.11.1\",\n\t\"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_client\": \">= 0.11.1\",\n\t\"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_common\": \">= 0.11.1\",\n\t\"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_incoming\": \">= 0.11.1\",\n\t\"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_outgoing\": \">= 0.11.1\",\n\t\"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_http_server\": \">= 0.11.1\",\n\t\"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http\": true,\n\t\"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"http2\": \">= 8.8\",\n\t\"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"https\": true,\n\t\"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector\": \">= 8\",\n\t\"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"inspector/promises\": [\">= 19\"],\n\t\"node:inspector/promises\": [\">= 19\"],\n\t\"_linklist\": \"< 8\",\n\t\"module\": true,\n\t\"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"net\": true,\n\t\"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n\t\"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n\t\"os\": true,\n\t\"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path\": true,\n\t\"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"path/posix\": \">= 15.3\",\n\t\"node:path/posix\": \">= 16\",\n\t\"path/win32\": \">= 15.3\",\n\t\"node:path/win32\": \">= 16\",\n\t\"perf_hooks\": \">= 8.5\",\n\t\"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"process\": \">= 1\",\n\t\"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"punycode\": \">= 0.5\",\n\t\"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"querystring\": true,\n\t\"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline\": true,\n\t\"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"readline/promises\": \">= 17\",\n\t\"node:readline/promises\": \">= 17\",\n\t\"repl\": true,\n\t\"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"node:sea\": [\">= 20.12 && < 21\", \">= 21.7\"],\n\t\"smalloc\": \">= 0.11.5 && < 3\",\n\t\"_stream_duplex\": \">= 0.9.4\",\n\t\"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_transform\": \">= 0.9.4\",\n\t\"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_wrap\": \">= 1.4.1\",\n\t\"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_passthrough\": \">= 0.9.4\",\n\t\"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_readable\": \">= 0.9.4\",\n\t\"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_stream_writable\": \">= 0.9.4\",\n\t\"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream\": true,\n\t\"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"stream/consumers\": \">= 16.7\",\n\t\"node:stream/consumers\": \">= 16.7\",\n\t\"stream/promises\": \">= 15\",\n\t\"node:stream/promises\": \">= 16\",\n\t\"stream/web\": \">= 16.5\",\n\t\"node:stream/web\": \">= 16.5\",\n\t\"string_decoder\": true,\n\t\"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"sys\": [\">= 0.4 && < 0.7\", \">= 0.8\"],\n\t\"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"test/reporters\": \">= 19.9 && < 20.2\",\n\t\"node:test/reporters\": [\">= 18.17 && < 19\", \">= 19.9\", \">= 20\"],\n\t\"test/mock_loader\": \">= 22.3 && < 22.7\",\n\t\"node:test/mock_loader\": \">= 22.3 && < 22.7\",\n\t\"node:test\": [\">= 16.17 && < 17\", \">= 18\"],\n\t\"timers\": true,\n\t\"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"timers/promises\": \">= 15\",\n\t\"node:timers/promises\": \">= 16\",\n\t\"_tls_common\": \">= 0.11.13\",\n\t\"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"_tls_legacy\": \">= 0.11.3 && < 10\",\n\t\"_tls_wrap\": \">= 0.11.3\",\n\t\"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tls\": true,\n\t\"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"trace_events\": \">= 10\",\n\t\"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"tty\": true,\n\t\"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"url\": true,\n\t\"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util\": true,\n\t\"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"util/types\": \">= 15.3\",\n\t\"node:util/types\": \">= 16\",\n\t\"v8/tools/arguments\": \">= 10 && < 12\",\n\t\"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n\t\"v8\": \">= 1\",\n\t\"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"vm\": true,\n\t\"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"wasi\": [\">= 13.4 && < 13.5\", \">= 18.17 && < 19\", \">= 20\"],\n\t\"node:wasi\": [\">= 18.17 && < 19\", \">= 20\"],\n\t\"worker_threads\": \">= 11.7\",\n\t\"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n\t\"zlib\": \">= 0.5\",\n\t\"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n}\n", "'use strict';\n\nvar hasOwn = require('hasown');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn hasOwn(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n", "var fs = require('fs');\nvar getHomedir = require('./homedir');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (!opts || !opts.preserveSymlinks) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(jsonErr);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else validateBasedir(realStart);\n        }\n    );\n\n    function validateBasedir(basedir) {\n        if (opts.basedir) {\n            var dirError = new TypeError('Provided basedir \"' + basedir + '\" is not a directory' + (opts.preserveSymlinks ? '' : ', or a symlink to a directory'));\n            dirError.code = 'INVALID_BASEDIR';\n            isDirectory(basedir, function (err, result) {\n                if (err) return cb(err);\n                if (!result) { return cb(dirError); }\n                validBasedir(basedir);\n            });\n        } else {\n            validBasedir(basedir);\n        }\n    }\n\n    var res;\n    function validBasedir(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err && !(err instanceof SyntaxError)) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile, dir);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadAsDirectory(path.dirname(x), fpkg, cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile, pkgdir);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, function (err, m, pkg) {\n                                    if (err) return cb(err);\n                                    if (m) return cb(null, m, pkg);\n                                    var incorrectMainError = new Error(\"Cannot find module '\" + path.resolve(x, pkg.main) + \"'. Please verify that the package.json has a valid \\\"main\\\" entry\");\n                                    incorrectMainError.code = 'INCORRECT_PACKAGE_MAIN';\n                                    return cb(incorrectMainError);\n                                });\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n", "var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar getHomedir = require('./homedir');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = process.platform !== 'win32' && fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar homedir = getHomedir();\nvar defaultPaths = function () {\n    return [\n        path.join(homedir, '.node_modules'),\n        path.join(homedir, '.node_libraries')\n    ];\n};\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && (stat.isFile() || stat.isFIFO());\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir, { throwIfNoEntry: false });\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return !!stat && stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (!opts || !opts.preserveSymlinks) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    return JSON.parse(readFileSync(pkgfile));\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || defaultPaths();\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if (opts.basedir && !isDirectory(absoluteStart)) {\n        var dirError = new TypeError('Provided basedir \"' + opts.basedir + '\" is not a directory' + (opts.preserveSymlinks ? '' : ', or a symlink to a directory'));\n        dirError.code = 'INVALID_BASEDIR';\n        throw dirError;\n    }\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(isDirectory(dir) ? maybeRealpathSync(realpathSync, dir, opts) : dir, 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg;\n        try {\n            pkg = readPackageSync(readFileSync, pkgfile);\n        } catch (e) {\n            if (!(e instanceof SyntaxError)) {\n                throw e;\n            }\n        }\n\n        if (pkg && opts.packageFilter) {\n            pkg = opts.packageFilter(pkg, pkgfile, dir);\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(isDirectory(x) ? maybeRealpathSync(realpathSync, x, opts) : x, '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                pkg = opts.packageFilter(pkg, pkgfile, x);\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var mainPath = path.resolve(x, pkg.main);\n                    var m = loadAsFileSync(mainPath);\n                    if (m) return m;\n                    var n = loadAsDirectorySync(mainPath);\n                    if (n) return n;\n                    var checkIndex = loadAsFileSync(path.resolve(x, 'index'));\n                    if (checkIndex) return checkIndex;\n                } catch (e) { }\n                var incorrectMainError = new Error(\"Cannot find module '\" + path.resolve(x, pkg.main) + \"'. Please verify that the package.json has a valid \\\"main\\\" entry\");\n                incorrectMainError.code = 'INCORRECT_PACKAGE_MAIN';\n                throw incorrectMainError;\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n", "var async = require('./lib/async');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n", "exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\nvar MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar safeRe = exports.safeRe = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\nvar LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nvar safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nfunction makeSafeRe (value) {\n  for (var i = 0; i < safeRegexReplacements.length; i++) {\n    var token = safeRegexReplacements[i][0]\n    var max = safeRegexReplacements[i][1]\n    value = value\n      .split(token + '*').join(token + '{0,' + max + '}')\n      .split(token + '+').join(token + '{1,' + max + '}')\n  }\n  return value\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '\\\\d+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-]' + LETTERDASHNUMBER + '*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = LETTERDASHNUMBER + '+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\nsafeRe[t.COERCERTL] = new RegExp(makeSafeRe(src[t.COERCE]), 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nsafeRe[t.TILDETRIM] = new RegExp(makeSafeRe(src[t.TILDETRIM]), 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nsafeRe[t.CARETTRIM] = new RegExp(makeSafeRe(src[t.CARETTRIM]), 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nsafeRe[t.COMPARATORTRIM] = new RegExp(makeSafeRe(src[t.COMPARATORTRIM]), 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n\n    // Replace all greedy whitespace to prevent regex dos issues. These regex are\n    // used internally via the safeRe object since all inputs in this library get\n    // normalized first to trim and collapse all extra whitespace. The original\n    // regexes are exported for userland consumption and lower level usage. A\n    // future breaking change could export the safer regex only with a note that\n    // all input should have extra whitespace removed.\n    safeRe[i] = new RegExp(makeSafeRe(src[i]))\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? safeRe[t.LOOSE] : safeRe[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  comp = comp.trim().split(/\\s+/).join(' ')\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First reduce all whitespace as much as possible so we do not have to rely\n  // on potentially slow regexes like \\s*. This is then stored and used for\n  // future error messages as well.\n  this.raw = range\n    .trim()\n    .split(/\\s+/)\n    .join(' ')\n\n  // First, split based on boolean or ||\n  this.set = this.raw.split('||').map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + this.raw)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? safeRe[t.HYPHENRANGELOOSE] : safeRe[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(safeRe[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, safeRe[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(safeRe[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(safeRe[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? safeRe[t.COMPARATORLOOSE] : safeRe[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? safeRe[t.TILDELOOSE] : safeRe[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? safeRe[t.CARETLOOSE] : safeRe[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? safeRe[t.XRANGELOOSE] : safeRe[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(safeRe[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(safeRe[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = safeRe[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      safeRe[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    safeRe[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n", "'use strict';\n\n/**\n * Logs out a message if there is no format option set.\n * @param {string} message - Message to log.\n */\nfunction error(message) {\n  if (!/=-(f|-format)=/.test(process.argv.join('='))) {\n    // eslint-disable-next-line no-console\n    console.error(message);\n  }\n}\n\nmodule.exports = error;\n", "/**\n * @fileoverview Utility functions for React and Flow version configuration\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nconst resolve = require('resolve');\nconst semver = require('semver');\nconst error = require('./error');\n\nconst ULTIMATE_LATEST_SEMVER = '999.999.999';\n\nlet warnedForMissingVersion = false;\n\nfunction resetWarningFlag() {\n  warnedForMissingVersion = false;\n}\n\nlet cachedDetectedReactVersion;\n\nfunction resetDetectedVersion() {\n  cachedDetectedReactVersion = undefined;\n}\n\nfunction resolveBasedir(contextOrFilename) {\n  if (contextOrFilename) {\n    const filename = typeof contextOrFilename === 'string' ? contextOrFilename : contextOrFilename.getFilename();\n    const dirname = path.dirname(filename);\n    try {\n      if (fs.statSync(filename).isFile()) {\n        // dirname must be dir here\n        return dirname;\n      }\n    } catch (err) {\n      // https://github.com/eslint/eslint/issues/11989\n      if (err.code === 'ENOTDIR') {\n        // virtual filename could be recursive\n        return resolveBasedir(dirname);\n      }\n    }\n  }\n  return process.cwd();\n}\n\nfunction convertConfVerToSemver(confVer) {\n  const fullSemverString = /^[0-9]+\\.[0-9]+$/.test(confVer) ? `${confVer}.0` : confVer;\n  return semver.coerce(fullSemverString.split('.').map((part) => Number(part)).join('.'));\n}\n\nlet defaultVersion = ULTIMATE_LATEST_SEMVER;\n\nfunction resetDefaultVersion() {\n  defaultVersion = ULTIMATE_LATEST_SEMVER;\n}\n\nfunction readDefaultReactVersionFromContext(context) {\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings && context.settings.react && context.settings.react.defaultVersion) {\n    let settingsDefaultVersion = context.settings.react.defaultVersion;\n    if (typeof settingsDefaultVersion !== 'string') {\n      error('Warning: default React version specified in eslint-pluigin-react-settings must be a string; '\n        + `got \"${typeof settingsDefaultVersion}\"`);\n    }\n    settingsDefaultVersion = String(settingsDefaultVersion);\n    const result = convertConfVerToSemver(settingsDefaultVersion);\n    if (result) {\n      defaultVersion = result.version;\n    } else {\n      error(`Warning: React version specified in eslint-plugin-react-settings must be a valid semver version, or \"detect\"; got “${settingsDefaultVersion}”. Falling back to latest version as default.`);\n    }\n  } else {\n    defaultVersion = ULTIMATE_LATEST_SEMVER;\n  }\n}\n\n// TODO, semver-major: remove context fallback\nfunction detectReactVersion(context) {\n  if (cachedDetectedReactVersion) {\n    return cachedDetectedReactVersion;\n  }\n\n  const basedir = resolveBasedir(context);\n\n  try {\n    const reactPath = resolve.sync('react', { basedir });\n    const react = require(reactPath); // eslint-disable-line global-require, import/no-dynamic-require\n    cachedDetectedReactVersion = react.version;\n    return cachedDetectedReactVersion;\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n      if (!warnedForMissingVersion) {\n        let sentence2 = 'Assuming latest React version for linting.';\n        if (defaultVersion !== ULTIMATE_LATEST_SEMVER) {\n          sentence2 = `Assuming default React version for linting: \"${defaultVersion}\".`;\n        }\n        error(`Warning: React version was set to \"detect\" in eslint-plugin-react settings, but the \"react\" package is not installed. ${sentence2}`);\n        warnedForMissingVersion = true;\n      }\n      cachedDetectedReactVersion = defaultVersion;\n      return cachedDetectedReactVersion;\n    }\n    throw e;\n  }\n}\n\nfunction getReactVersionFromContext(context) {\n  readDefaultReactVersionFromContext(context);\n  let confVer = defaultVersion;\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings && context.settings.react && context.settings.react.version) {\n    let settingsVersion = context.settings.react.version;\n    if (settingsVersion === 'detect') {\n      settingsVersion = detectReactVersion(context);\n    }\n    if (typeof settingsVersion !== 'string') {\n      error('Warning: React version specified in eslint-plugin-react-settings must be a string; '\n        + `got “${typeof settingsVersion}”`);\n    }\n    confVer = String(settingsVersion);\n  } else if (!warnedForMissingVersion) {\n    error('Warning: React version not specified in eslint-plugin-react settings. '\n      + 'See https://github.com/jsx-eslint/eslint-plugin-react#configuration .');\n    warnedForMissingVersion = true;\n  }\n\n  const result = convertConfVerToSemver(confVer);\n  if (!result) {\n    error(`Warning: React version specified in eslint-plugin-react-settings must be a valid semver version, or \"detect\"; got “${confVer}”`);\n  }\n  return result ? result.version : defaultVersion;\n}\n\n// TODO, semver-major: remove context fallback\nfunction detectFlowVersion(context) {\n  const basedir = resolveBasedir(context);\n\n  try {\n    const flowPackageJsonPath = resolve.sync('flow-bin/package.json', { basedir });\n    const flowPackageJson = require(flowPackageJsonPath); // eslint-disable-line global-require, import/no-dynamic-require\n    return flowPackageJson.version;\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n      error('Warning: Flow version was set to \"detect\" in eslint-plugin-react settings, '\n        + 'but the \"flow-bin\" package is not installed. Assuming latest Flow version for linting.');\n      return ULTIMATE_LATEST_SEMVER;\n    }\n    throw e;\n  }\n}\n\nfunction getFlowVersionFromContext(context) {\n  let confVer = defaultVersion;\n  // .eslintrc shared settings (https://eslint.org/docs/user-guide/configuring#adding-shared-settings)\n  if (context.settings.react && context.settings.react.flowVersion) {\n    let flowVersion = context.settings.react.flowVersion;\n    if (flowVersion === 'detect') {\n      flowVersion = detectFlowVersion(context);\n    }\n    if (typeof flowVersion !== 'string') {\n      error('Warning: Flow version specified in eslint-plugin-react-settings must be a string; '\n        + `got “${typeof flowVersion}”`);\n    }\n    confVer = String(flowVersion);\n  } else {\n    throw 'Could not retrieve flowVersion from settings'; // eslint-disable-line no-throw-literal\n  }\n\n  const result = convertConfVerToSemver(confVer);\n  if (!result) {\n    error(`Warning: Flow version specified in eslint-plugin-react-settings must be a valid semver version, or \"detect\"; got “${confVer}”`);\n  }\n  return result ? result.version : defaultVersion;\n}\n\nfunction test(semverRange, confVer) {\n  return semver.satisfies(confVer, semverRange);\n}\n\nfunction testReactVersion(context, semverRange) {\n  return test(semverRange, getReactVersionFromContext(context));\n}\n\nfunction testFlowVersion(context, semverRange) {\n  return test(semverRange, getFlowVersionFromContext(context));\n}\n\nmodule.exports = {\n  testReactVersion,\n  testFlowVersion,\n  resetWarningFlag,\n  resetDetectedVersion,\n  resetDefaultVersion,\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('es-abstract/2024/Call');\nvar CompletionRecord = require('es-abstract/2024/CompletionRecord');\nvar CreateIteratorFromClosure = require('../aos/CreateIteratorFromClosure');\nvar GetIteratorDirect = require('../aos/GetIteratorDirect');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar IteratorClose = require('es-abstract/2024/IteratorClose');\nvar IteratorStepValue = require('es-abstract/2024/IteratorStepValue');\nvar ThrowCompletion = require('es-abstract/2024/ThrowCompletion');\nvar ToBoolean = require('es-abstract/2024/ToBoolean');\nvar Type = require('es-abstract/2024/Type');\n\nvar iterHelperProto = require('../IteratorHelperPrototype');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function filter(predicate) {\n\tif (this instanceof filter) {\n\t\tthrow new $TypeError('`filter` is not a constructor');\n\t}\n\n\tvar O = this; // step 1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('`this` value must be an Object'); // step 2\n\t}\n\n\tif (!IsCallable(predicate)) {\n\t\tthrow new $TypeError('`predicate` must be a function'); // step 3\n\t}\n\n\tvar iterated = GetIteratorDirect(O); // step 4\n\n\tvar closeIfAbrupt = function (abruptCompletion) {\n\t\tif (!(abruptCompletion instanceof CompletionRecord)) {\n\t\t\tthrow new $TypeError('`abruptCompletion` must be a Completion Record');\n\t\t}\n\t\tIteratorClose(\n\t\t\titerated,\n\t\t\tabruptCompletion\n\t\t);\n\t};\n\n\tvar sentinel = {};\n\tvar counter = 0; // step 6.a\n\tvar closure = function () {\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) { // step 6.b\n\t\t\tvar value = IteratorStepValue(iterated); // step 6.b.i\n\t\t\tif (iterated['[[Done]]']) {\n\t\t\t\treturn sentinel; // step 6.b.ii\n\t\t\t}\n\n\t\t\tvar selected;\n\t\t\ttry {\n\t\t\t\tselected = Call(predicate, void undefined, [value, counter]); // step 6.b.iv\n\t\t\t\t// yield mapped // step 6.b.vi\n\t\t\t\tif (ToBoolean(selected)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// close iterator // step 6.b.v, 6.b.vii\n\t\t\t\tcloseIfAbrupt(ThrowCompletion(e));\n\t\t\t\tthrow e;\n\t\t\t} finally {\n\t\t\t\tcounter += 1; // step 6.b.viii\n\t\t\t}\n\t\t}\n\t};\n\tSLOT.set(closure, '[[Sentinel]]', sentinel); // for the userland implementation\n\tSLOT.set(closure, '[[CloseIfAbrupt]]', closeIfAbrupt); // for the userland implementation\n\n\tvar result = CreateIteratorFromClosure(closure, 'Iterator Helper', iterHelperProto, ['[[UnderlyingIterator]]']); // step 7\n\n\tSLOT.set(result, '[[UnderlyingIterator]]', iterated); // step 8\n\n\treturn result; // step 9\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (typeof Iterator === 'function' && typeof Iterator.prototype.filter === 'function') {\n\t\ttry {\n\t\t\t// https://issues.chromium.org/issues/336839115\n\t\t\tIterator.prototype.filter.call({ next: null }, function () {}).next();\n\t\t} catch (e) {\n\t\t\treturn Iterator.prototype.filter;\n\t\t}\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nvar $IteratorPrototype = require('../Iterator.prototype/implementation');\n\nmodule.exports = function shimIteratorPrototypeFilter() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\t$IteratorPrototype,\n\t\t{ filter: polyfill },\n\t\t{ filter: function () { return $IteratorPrototype.filter !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill());\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('es-abstract/2024/Call');\nvar GetIteratorDirect = require('../aos/GetIteratorDirect');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar IteratorClose = require('es-abstract/2024/IteratorClose');\nvar IteratorStepValue = require('es-abstract/2024/IteratorStepValue');\nvar NormalCompletion = require('es-abstract/2024/NormalCompletion');\nvar ThrowCompletion = require('es-abstract/2024/ThrowCompletion');\nvar ToBoolean = require('es-abstract/2024/ToBoolean');\nvar Type = require('es-abstract/2024/Type');\n\nmodule.exports = function some(predicate) {\n\tif (this instanceof some) {\n\t\tthrow new $TypeError('`some` is not a constructor');\n\t}\n\n\tvar O = this; // step 1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('`this` value must be an Object'); // step 2\n\t}\n\n\tif (!IsCallable(predicate)) {\n\t\tthrow new $TypeError('`predicate` must be a function'); // step 3\n\t}\n\n\tvar iterated = GetIteratorDirect(O); // step 4\n\n\tvar counter = 0; // step 5\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) { // step 6\n\t\tvar value = IteratorStepValue(iterated); // step 6.a\n\t\tif (iterated['[[Done]]']) {\n\t\t\treturn false; // step 6.b\n\t\t}\n\t\tvar result;\n\t\ttry {\n\t\t\tresult = Call(predicate, void undefined, [value, counter]); // step 6.c\n\t\t} catch (e) {\n\t\t\t// close iterator // step 6.d\n\t\t\tIteratorClose(\n\t\t\t\titerated,\n\t\t\t\tThrowCompletion(e)\n\t\t\t);\n\t\t} finally {\n\t\t\tcounter += 1; // step 6.f\n\t\t}\n\t\tif (ToBoolean(result)) {\n\t\t\treturn IteratorClose(\n\t\t\t\titerated,\n\t\t\t\tNormalCompletion(true)\n\t\t\t); // step 6.e\n\t\t}\n\t}\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Iterator === 'function' && typeof Iterator.prototype.some === 'function'\n\t\t? Iterator.prototype.some\n\t\t: implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nvar $IteratorPrototype = require('../Iterator.prototype/implementation');\n\nmodule.exports = function shimIteratorPrototypeSome() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\t$IteratorPrototype,\n\t\t{ some: polyfill },\n\t\t{ some: function () { return $IteratorPrototype.some !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill());\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "/**\n * @fileoverview Utility functions for propWrapperFunctions setting\n */\n\n'use strict';\n\nconst filter = require('es-iterator-helpers/Iterator.prototype.filter');\nconst some = require('es-iterator-helpers/Iterator.prototype.some');\n\nfunction searchPropWrapperFunctions(name, propWrapperFunctions) {\n  const splitName = name.split('.');\n  return some(propWrapperFunctions.values(), (func) => {\n    if (splitName.length === 2 && func.object === splitName[0] && func.property === splitName[1]) {\n      return true;\n    }\n    return name === func || func.property === name;\n  });\n}\n\nfunction getPropWrapperFunctions(context) {\n  return new Set(context.settings.propWrapperFunctions || []);\n}\n\nfunction isPropWrapperFunction(context, name) {\n  if (typeof name !== 'string') {\n    return false;\n  }\n  const propWrapperFunctions = getPropWrapperFunctions(context);\n  return searchPropWrapperFunctions(name, propWrapperFunctions);\n}\n\nfunction getExactPropWrapperFunctions(context) {\n  const propWrapperFunctions = getPropWrapperFunctions(context);\n  const exactPropWrappers = filter(propWrapperFunctions.values(), (func) => func.exact === true);\n  return new Set(exactPropWrappers);\n}\n\nfunction isExactPropWrapperFunction(context, name) {\n  const exactPropWrappers = getExactPropWrapperFunctions(context);\n  return searchPropWrapperFunctions(name, exactPropWrappers);\n}\n\nfunction formatPropWrapperFunctions(propWrapperFunctions) {\n  return Array.from(propWrapperFunctions, (func) => {\n    if (func.object && func.property) {\n      return `'${func.object}.${func.property}'`;\n    }\n    if (func.property) {\n      return `'${func.property}'`;\n    }\n    return `'${func}'`;\n  }).join(', ');\n}\n\nmodule.exports = {\n  formatPropWrapperFunctions,\n  getExactPropWrapperFunctions,\n  getPropWrapperFunctions,\n  isExactPropWrapperFunction,\n  isPropWrapperFunction,\n};\n", "'use strict';\n\n/**\n * Check if the first letter of a string is capitalized.\n * @param {string} word String to check\n * @returns {boolean} True if first letter is capitalized.\n */\nmodule.exports = function isFirstLetterCapitalized(word) {\n  if (!word) {\n    return false;\n  }\n  const firstLetter = word.replace(/^_+/, '').charAt(0);\n  return firstLetter.toUpperCase() === firstLetter;\n};\n", "/**\n * @fileoverview Common propTypes detection functionality.\n */\n\n'use strict';\n\nconst flatMap = require('array.prototype.flatmap');\n\nconst annotations = require('./annotations');\nconst propsUtil = require('./props');\nconst variableUtil = require('./variable');\nconst testFlowVersion = require('./version').testFlowVersion;\nconst propWrapperUtil = require('./propWrapper');\nconst astUtil = require('./ast');\nconst isFirstLetterCapitalized = require('./isFirstLetterCapitalized');\nconst eslintUtil = require('./eslint');\n\nconst getFirstTokens = eslintUtil.getFirstTokens;\nconst getScope = eslintUtil.getScope;\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n/**\n * Check if node is function type.\n * @param {ASTNode} node\n * @returns {boolean}\n */\nfunction isFunctionType(node) {\n  if (!node) return false;\n  const nodeType = node.type;\n  return nodeType === 'FunctionDeclaration'\n    || nodeType === 'FunctionExpression'\n    || nodeType === 'ArrowFunctionExpression';\n}\n\n/**\n * Checks if we are declaring a props as a generic type in a flow-annotated class.\n *\n * @param {ASTNode} node  the AST node being checked.\n * @returns {boolean} True if the node is a class with generic prop types, false if not.\n */\nfunction isSuperTypeParameterPropsDeclaration(node) {\n  if (node && (node.type === 'ClassDeclaration' || node.type === 'ClassExpression')) {\n    const parameters = propsUtil.getSuperTypeArguments(node);\n    if (parameters && parameters.params.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Iterates through a properties node, like a customized forEach.\n * @param {Object} context Array of properties to iterate.\n * @param {Object[]} properties Array of properties to iterate.\n * @param {Function} fn Function to call on each property, receives property key\n    and property value. (key, value) => void\n  * @param {Function} [handleSpreadFn] Function to call on each ObjectTypeSpreadProperty, receives the\n    argument\n */\nfunction iterateProperties(context, properties, fn, handleSpreadFn) {\n  if (properties && properties.length && typeof fn === 'function') {\n    for (let i = 0, j = properties.length; i < j; i++) {\n      const node = properties[i];\n      const key = astUtil.getKeyValue(context, node);\n\n      if (node.type === 'ObjectTypeSpreadProperty' && typeof handleSpreadFn === 'function') {\n        handleSpreadFn(node.argument);\n      }\n\n      const value = node.value;\n      fn(key, value, node);\n    }\n  }\n}\n\n/**\n * Checks if a node is inside a class body.\n *\n * @param {ASTNode} node the AST node being checked.\n * @returns {boolean} True if the node has a ClassBody ancestor, false if not.\n */\nfunction isInsideClassBody(node) {\n  let parent = node.parent;\n  while (parent) {\n    if (parent.type === 'ClassBody') {\n      return true;\n    }\n    parent = parent.parent;\n  }\n  return false;\n}\n\nfunction startWithCapitalizedLetter(node) {\n  return (\n    node.parent.type === 'VariableDeclarator'\n    && !isFirstLetterCapitalized(node.parent.id.name)\n  );\n}\n\nmodule.exports = function propTypesInstructions(context, components, utils) {\n  // Used to track the type annotations in scope.\n  // Necessary because babel's scopes do not track type annotations.\n  let stack = null;\n\n  const classExpressions = [];\n  const defaults = { customValidators: [] };\n  const configuration = Object.assign({}, defaults, context.options[0] || {});\n  const customValidators = configuration.customValidators;\n  const allowedGenericTypes = new Set(['forwardRef', 'ForwardRefRenderFunction', 'VFC', 'VoidFunctionComponent', 'PropsWithChildren', 'SFC', 'StatelessComponent', 'FunctionComponent', 'FC']);\n  const genericTypeParamIndexWherePropsArePresent = {\n    ForwardRefRenderFunction: 1,\n    forwardRef: 1,\n    VoidFunctionComponent: 0,\n    VFC: 0,\n    PropsWithChildren: 0,\n    SFC: 0,\n    StatelessComponent: 0,\n    FunctionComponent: 0,\n    FC: 0,\n  };\n  const genericReactTypesImport = new Set();\n  // import { FC as X } from 'react' -> localToImportedMap = { x: FC }\n  const localToImportedMap = {};\n\n  /**\n   * Returns the full scope.\n   * @returns {Object} The whole scope.\n   */\n  function typeScope() {\n    return stack[stack.length - 1];\n  }\n\n  /**\n   * Gets a node from the scope.\n   * @param {string} key The name of the identifier to access.\n   * @returns {ASTNode} The ASTNode associated with the given identifier.\n   */\n  function getInTypeScope(key) {\n    return stack[stack.length - 1][key];\n  }\n\n  /**\n   * Sets the new value in the scope.\n   * @param {string} key The name of the identifier to access\n   * @param {ASTNode} value The new value for the identifier.\n   * @returns {ASTNode} The ASTNode associated with the given identifier.\n   */\n  function setInTypeScope(key, value) {\n    stack[stack.length - 1][key] = value;\n    return value;\n  }\n\n  /**\n   * Checks if prop should be validated by plugin-react-proptypes\n   * @param {string} validator Name of validator to check.\n   * @returns {boolean} True if validator should be checked by custom validator.\n   */\n  function hasCustomValidator(validator) {\n    return customValidators.indexOf(validator) !== -1;\n  }\n\n  /* eslint-disable no-use-before-define */\n  /** @type {TypeDeclarationBuilders} */\n  const typeDeclarationBuilders = {\n    GenericTypeAnnotation(annotation, parentName, seen) {\n      if (getInTypeScope(annotation.id.name)) {\n        return buildTypeAnnotationDeclarationTypes(getInTypeScope(annotation.id.name), parentName, seen);\n      }\n      return {};\n    },\n\n    ObjectTypeAnnotation(annotation, parentName, seen) {\n      let containsUnresolvedObjectTypeSpread = false;\n      let containsSpread = false;\n      const containsIndexers = !!annotation.indexers && annotation.indexers.length > 0;\n      const shapeTypeDefinition = {\n        type: 'shape',\n        children: {},\n      };\n      iterateProperties(\n        context,\n        annotation.properties,\n        (childKey, childValue, propNode) => {\n          const fullName = [parentName, childKey].join('.');\n          if (childKey || childValue) {\n            const types = buildTypeAnnotationDeclarationTypes(childValue, fullName, seen);\n            types.fullName = fullName;\n            types.name = childKey;\n            types.node = propNode;\n            types.isRequired = !childValue.optional;\n            shapeTypeDefinition.children[childKey] = types;\n          }\n        },\n        (spreadNode) => {\n          const key = astUtil.getKeyValue(context, spreadNode);\n          const types = buildTypeAnnotationDeclarationTypes(spreadNode, key, seen);\n          if (!types.children) {\n            containsUnresolvedObjectTypeSpread = true;\n          } else {\n            Object.assign(shapeTypeDefinition, types.children);\n          }\n          containsSpread = true;\n        }\n      );\n\n      // Mark if this shape has spread or an indexer. We will know to consider all props from this shape as having propTypes,\n      // but still have the ability to detect unused children of this shape.\n      shapeTypeDefinition.containsUnresolvedSpread = containsUnresolvedObjectTypeSpread;\n      shapeTypeDefinition.containsIndexers = containsIndexers;\n      // Deprecated: containsSpread is not used anymore in the codebase, ensure to keep API backward compatibility\n      shapeTypeDefinition.containsSpread = containsSpread;\n\n      return shapeTypeDefinition;\n    },\n\n    UnionTypeAnnotation(annotation, parentName, seen) {\n      /** @type {UnionTypeDefinition} */\n      const unionTypeDefinition = {\n        type: 'union',\n        children: annotation.types.map((type) => buildTypeAnnotationDeclarationTypes(type, parentName, seen)),\n      };\n      if (unionTypeDefinition.children.length === 0) {\n        // no complex type found, simply accept everything\n        return {};\n      }\n      return unionTypeDefinition;\n    },\n\n    ArrayTypeAnnotation(annotation, parentName, seen) {\n      const fullName = [parentName, '*'].join('.');\n      const child = buildTypeAnnotationDeclarationTypes(annotation.elementType, fullName, seen);\n      child.fullName = fullName;\n      child.name = '__ANY_KEY__';\n      child.node = annotation;\n      return {\n        type: 'object',\n        children: {\n          __ANY_KEY__: child,\n        },\n      };\n    },\n  };\n  /* eslint-enable no-use-before-define */\n\n  /**\n   * Resolve the type annotation for a given node.\n   * Flow annotations are sometimes wrapped in outer `TypeAnnotation`\n   * and `NullableTypeAnnotation` nodes which obscure the annotation we're\n   * interested in.\n   * This method also resolves type aliases where possible.\n   *\n   * @param {ASTNode} node The annotation or a node containing the type annotation.\n   * @returns {ASTNode} The resolved type annotation for the node.\n   */\n  function resolveTypeAnnotation(node) {\n    let annotation = (node.left && node.left.typeAnnotation) || node.typeAnnotation || node;\n    while (annotation && (annotation.type === 'TypeAnnotation' || annotation.type === 'NullableTypeAnnotation')) {\n      annotation = annotation.typeAnnotation;\n    }\n    if (annotation.type === 'GenericTypeAnnotation' && getInTypeScope(annotation.id.name)) {\n      return getInTypeScope(annotation.id.name);\n    }\n    return annotation;\n  }\n\n  /**\n   * Creates the representation of the React props type annotation for the component.\n   * The representation is used to verify nested used properties.\n   * @param {ASTNode} annotation Type annotation for the props class property.\n   * @param {string} parentName\n   * @param {Set<ASTNode>} [seen]\n   * @return {Object} The representation of the declaration, empty object means\n   *    the property is declared without the need for further analysis.\n   */\n  function buildTypeAnnotationDeclarationTypes(annotation, parentName, seen) {\n    if (typeof seen === 'undefined') {\n      // Keeps track of annotations we've already seen to\n      // prevent problems with recursive types.\n      seen = new Set();\n    }\n    if (seen.has(annotation)) {\n      // This must be a recursive type annotation, so just accept anything.\n      return {};\n    }\n    seen.add(annotation);\n\n    if (annotation.type in typeDeclarationBuilders) {\n      return typeDeclarationBuilders[annotation.type](annotation, parentName, seen);\n    }\n    return {};\n  }\n\n  /**\n   * Marks all props found inside ObjectTypeAnnotation as declared.\n   *\n   * Modifies the declaredProperties object\n   * @param {ASTNode} propTypes\n   * @param {Object} declaredPropTypes\n   * @returns {boolean} True if propTypes should be ignored (e.g. when a type can't be resolved, when it is imported)\n   */\n  function declarePropTypesForObjectTypeAnnotation(propTypes, declaredPropTypes) {\n    let ignorePropsValidation = false;\n\n    iterateProperties(context, propTypes.properties, (key, value, propNode) => {\n      if (!value) {\n        ignorePropsValidation = ignorePropsValidation || propNode.type !== 'ObjectTypeSpreadProperty';\n        return;\n      }\n\n      const types = buildTypeAnnotationDeclarationTypes(value, key);\n      types.fullName = key;\n      types.name = key;\n      types.node = propNode;\n      types.isRequired = !propNode.optional;\n      declaredPropTypes[key] = types;\n    }, (spreadNode) => {\n      const key = astUtil.getKeyValue(context, spreadNode);\n      const spreadAnnotation = getInTypeScope(key);\n      if (!spreadAnnotation) {\n        ignorePropsValidation = true;\n      } else {\n        const spreadIgnoreValidation = declarePropTypesForObjectTypeAnnotation(spreadAnnotation, declaredPropTypes);\n        ignorePropsValidation = ignorePropsValidation || spreadIgnoreValidation;\n      }\n    });\n\n    return ignorePropsValidation;\n  }\n\n  /**\n   * Marks all props found inside IntersectionTypeAnnotation as declared.\n   * Since InterSectionTypeAnnotations can be nested, this handles recursively.\n   *\n   * Modifies the declaredPropTypes object\n   * @param {ASTNode} propTypes\n   * @param {Object} declaredPropTypes\n   * @returns {boolean} True if propTypes should be ignored (e.g. when a type can't be resolved, when it is imported)\n   */\n  function declarePropTypesForIntersectionTypeAnnotation(propTypes, declaredPropTypes) {\n    return propTypes.types.some((annotation) => {\n      if (annotation.type === 'ObjectTypeAnnotation') {\n        return declarePropTypesForObjectTypeAnnotation(annotation, declaredPropTypes);\n      }\n\n      if (annotation.type === 'UnionTypeAnnotation') {\n        return true;\n      }\n\n      // Type can't be resolved\n      if (!annotation.id) {\n        return true;\n      }\n\n      const typeNode = getInTypeScope(annotation.id.name);\n\n      if (!typeNode) {\n        return true;\n      }\n      if (typeNode.type === 'IntersectionTypeAnnotation') {\n        return declarePropTypesForIntersectionTypeAnnotation(typeNode, declaredPropTypes);\n      }\n\n      return declarePropTypesForObjectTypeAnnotation(typeNode, declaredPropTypes);\n    });\n  }\n\n  /**\n   * Resolve node of type Identifier when building declaration types.\n   * @param {ASTNode} node\n   * @param {ASTNode} rootNode\n   * @param {Function} callback called with the resolved value only if resolved.\n   */\n  function resolveValueForIdentifierNode(node, rootNode, callback) {\n    if (\n      rootNode\n      && node\n      && node.type === 'Identifier'\n    ) {\n      const scope = getScope(context, rootNode);\n      const identVariable = scope.variableScope.variables.find(\n        (variable) => variable.name === node.name\n      );\n      if (identVariable) {\n        const definition = identVariable.defs[identVariable.defs.length - 1];\n        callback(definition.node.init);\n      }\n    }\n  }\n\n  /**\n   * Creates the representation of the React propTypes for the component.\n   * The representation is used to verify nested used properties.\n   * @param {ASTNode} value Node of the PropTypes for the desired property\n   * @param {string} parentName\n   * @param {ASTNode} rootNode\n   * @return {Object} The representation of the declaration, empty object means\n   *    the property is declared without the need for further analysis.\n   */\n  function buildReactDeclarationTypes(value, parentName, rootNode) {\n    if (\n      value\n      && value.callee\n      && value.callee.object\n      && hasCustomValidator(value.callee.object.name)\n    ) {\n      return {};\n    }\n\n    let identNodeResolved = false;\n    // Resolve identifier node for cases where isRequired is set in\n    // the variable declaration or not at all.\n    // const variableType = PropTypes.shape({ foo: ... }).isRequired\n    // propTypes = {\n    //   example: variableType\n    // }\n    // --------\n    // const variableType = PropTypes.shape({ foo: ... })\n    // propTypes = {\n    //   example: variableType\n    // }\n    resolveValueForIdentifierNode(value, rootNode, (newValue) => {\n      identNodeResolved = true;\n      value = newValue;\n    });\n\n    if (\n      value\n      && value.type === 'MemberExpression'\n      && value.property\n      && value.property.name === 'isRequired'\n    ) {\n      value = value.object;\n    }\n\n    // Resolve identifier node for cases where isRequired is set in\n    // the prop types.\n    // const variableType = PropTypes.shape({ foo: ... })\n    // propTypes = {\n    //   example: variableType.isRequired\n    // }\n    if (!identNodeResolved) {\n      resolveValueForIdentifierNode(value, rootNode, (newValue) => {\n        value = newValue;\n      });\n    }\n\n    // Verify PropTypes that are functions\n    if (\n      astUtil.isCallExpression(value)\n      && value.callee\n      && value.callee.property\n      && value.callee.property.name\n      && value.arguments\n      && value.arguments.length > 0\n    ) {\n      const callName = value.callee.property.name;\n      const argument = value.arguments[0];\n      switch (callName) {\n        case 'shape':\n        case 'exact': {\n          if (argument.type !== 'ObjectExpression') {\n            // Invalid proptype or cannot analyse statically\n            return {};\n          }\n          const shapeTypeDefinition = {\n            type: callName,\n            children: {},\n          };\n          iterateProperties(context, argument.properties, (childKey, childValue, propNode) => {\n            if (childValue) { // skip spread propTypes\n              const fullName = [parentName, childKey].join('.');\n              const types = buildReactDeclarationTypes(childValue, fullName, rootNode);\n              types.fullName = fullName;\n              types.name = childKey;\n              types.node = propNode;\n              shapeTypeDefinition.children[childKey] = types;\n            }\n          });\n          return shapeTypeDefinition;\n        }\n        case 'arrayOf':\n        case 'objectOf': {\n          const fullName = [parentName, '*'].join('.');\n          const child = buildReactDeclarationTypes(argument, fullName, rootNode);\n          child.fullName = fullName;\n          child.name = '__ANY_KEY__';\n          child.node = argument;\n          return {\n            type: 'object',\n            children: {\n              __ANY_KEY__: child,\n            },\n          };\n        }\n        case 'oneOfType': {\n          if (\n            !argument.elements\n            || argument.elements.length === 0\n          ) {\n            // Invalid proptype or cannot analyse statically\n            return {};\n          }\n\n          /** @type {UnionTypeDefinition} */\n          const unionTypeDefinition = {\n            type: 'union',\n            children: argument.elements.map((element) => buildReactDeclarationTypes(element, parentName, rootNode)),\n          };\n          if (unionTypeDefinition.children.length === 0) {\n            // no complex type found, simply accept everything\n            return {};\n          }\n          return unionTypeDefinition;\n        }\n        default:\n          return {};\n      }\n    }\n    // Unknown property or accepts everything (any, object, ...)\n    return {};\n  }\n\n  function isValidReactGenericTypeAnnotation(annotation) {\n    if (annotation.typeName) {\n      if (annotation.typeName.name) { // if FC<Props>\n        const typeName = annotation.typeName.name;\n        if (!genericReactTypesImport.has(typeName)) {\n          return false;\n        }\n      } else if (annotation.typeName.right.name) { // if React.FC<Props>\n        const right = annotation.typeName.right.name;\n        const left = annotation.typeName.left.name;\n\n        if (!genericReactTypesImport.has(left) || !allowedGenericTypes.has(right)) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns the left most typeName of a node, e.g: FC<Props>, React.FC<Props>\n   * The representation is used to verify nested used properties.\n   * @param {ASTNode} node\n   * @return {string | undefined}\n   */\n  function getLeftMostTypeName(node) {\n    if (node.name) return node.name;\n    if (node.left) return getLeftMostTypeName(node.left);\n  }\n\n  function getRightMostTypeName(node) {\n    if (node.name) return node.name;\n    if (node.right) return getRightMostTypeName(node.right);\n  }\n\n  /**\n   * Returns true if the node is either a interface or type alias declaration\n   * @param {ASTNode} node\n   * @return {boolean}\n   */\n  function filterInterfaceOrTypeAlias(node) {\n    return (\n      astUtil.isTSInterfaceDeclaration(node) || astUtil.isTSTypeAliasDeclaration(node)\n    );\n  }\n\n  /**\n   * Returns true if the interface or type alias declaration node name matches the type-name str\n   * @param {ASTNode} node\n   * @param {string} typeName\n   * @return {boolean}\n   */\n  function filterInterfaceOrAliasByName(node, typeName) {\n    return (\n      node.id\n      && node.id.name === typeName\n    ) || (\n      node.declaration\n      && node.declaration.id\n      && node.declaration.id.name === typeName\n    );\n  }\n\n  class DeclarePropTypesForTSTypeAnnotation {\n    constructor(propTypes, declaredPropTypes, rootNode) {\n      this.propTypes = propTypes;\n      this.declaredPropTypes = declaredPropTypes;\n      this.foundDeclaredPropertiesList = [];\n      this.referenceNameMap = new Set();\n      this.sourceCode = getSourceCode(context);\n      this.shouldIgnorePropTypes = false;\n      this.rootNode = rootNode;\n      this.visitTSNode(this.propTypes);\n      this.endAndStructDeclaredPropTypes();\n    }\n\n    /**\n     * The node will be distribute to different function.\n     * @param {ASTNode} node\n     */\n    visitTSNode(node) {\n      if (!node) return;\n      if (astUtil.isTSTypeAnnotation(node)) {\n        const typeAnnotation = node.typeAnnotation;\n        this.visitTSNode(typeAnnotation);\n      } else if (astUtil.isTSTypeReference(node)) {\n        this.searchDeclarationByName(node);\n      } else if (astUtil.isTSInterfaceHeritage(node)) {\n        this.searchDeclarationByName(node);\n      } else if (astUtil.isTSTypeLiteral(node)) {\n        // Check node is an object literal\n        if (Array.isArray(node.members)) {\n          this.foundDeclaredPropertiesList = this.foundDeclaredPropertiesList.concat(node.members);\n        }\n      } else if (astUtil.isTSIntersectionType(node)) {\n        this.convertIntersectionTypeToPropTypes(node);\n      } else if (astUtil.isTSParenthesizedType(node)) {\n        const typeAnnotation = node.typeAnnotation;\n        this.visitTSNode(typeAnnotation);\n      } else if (astUtil.isTSTypeParameterInstantiation(node)) {\n        if (Array.isArray(node.params)) {\n          node.params.forEach((x) => this.visitTSNode(x));\n        }\n      } else {\n        this.shouldIgnorePropTypes = true;\n      }\n    }\n\n    /**\n     * Search TSInterfaceDeclaration or TSTypeAliasDeclaration,\n     * by using TSTypeReference and TSInterfaceHeritage name.\n     * @param {ASTNode} node\n     */\n    searchDeclarationByName(node) {\n      let typeName;\n      if (astUtil.isTSTypeReference(node)) {\n        typeName = node.typeName.name;\n        const leftMostName = getLeftMostTypeName(node.typeName);\n        const shouldTraverseTypeParams = genericReactTypesImport.has(leftMostName);\n        const nodeTypeArguments = propsUtil.getTypeArguments(node);\n        if (shouldTraverseTypeParams && nodeTypeArguments && nodeTypeArguments.length !== 0) {\n          // All react Generic types are derived from:\n          // type PropsWithChildren<P> = P & { children?: ReactNode | undefined }\n          // So we should construct an optional children prop\n          this.shouldSpecifyOptionalChildrenProps = true;\n\n          const rightMostName = getRightMostTypeName(node.typeName);\n          if (\n            leftMostName === 'React'\n            && (\n              rightMostName === 'HTMLAttributes'\n              || rightMostName === 'HTMLElement'\n              || rightMostName === 'HTMLProps'\n            )\n          ) {\n            this.shouldSpecifyClassNameProp = true;\n          }\n\n          const importedName = localToImportedMap[rightMostName];\n          const idx = genericTypeParamIndexWherePropsArePresent[\n            leftMostName !== rightMostName ? rightMostName : importedName\n          ];\n          const nextNode = nodeTypeArguments.params[idx];\n          this.visitTSNode(nextNode);\n          return;\n        }\n      } else if (astUtil.isTSInterfaceHeritage(node)) {\n        if (!node.expression && node.id) {\n          typeName = node.id.name;\n        } else {\n          typeName = node.expression.name;\n        }\n      }\n      if (!typeName) {\n        this.shouldIgnorePropTypes = true;\n        return;\n      }\n      if (typeName === 'ReturnType') {\n        this.convertReturnTypeToPropTypes(node, this.rootNode);\n        return;\n      }\n      // Prevent recursive inheritance will cause maximum callstack.\n      if (this.referenceNameMap.has(typeName)) {\n        this.shouldIgnorePropTypes = true;\n        return;\n      }\n      // Add typeName to Set and consider it as traversed.\n      this.referenceNameMap.add(typeName);\n\n      /**\n       * From line 577 to line 581, and line 588 to line 590 are trying to handle typescript-eslint-parser\n       * Need to be deprecated after remove typescript-eslint-parser support.\n       */\n      const candidateTypes = this.sourceCode.ast.body.filter((item) => astUtil.isTSTypeDeclaration(item));\n\n      const declarations = flatMap(\n        candidateTypes,\n        (type) => (\n          type.declarations\n          || (\n            type.declaration\n            && type.declaration.declarations\n          )\n          || type.declaration\n        )\n      );\n\n      // we tried to find either an interface or a type with the TypeReference name\n      const typeDeclaration = declarations.filter((dec) => dec.id.name === typeName);\n\n      const interfaceDeclarations = this.sourceCode.ast.body\n        .filter(filterInterfaceOrTypeAlias)\n        .filter((item) => filterInterfaceOrAliasByName(item, typeName))\n        .map((item) => (item.declaration || item));\n\n      if (typeDeclaration.length !== 0) {\n        typeDeclaration.map((t) => t.init || t.typeAnnotation).forEach(this.visitTSNode, this);\n      } else if (interfaceDeclarations.length !== 0) {\n        interfaceDeclarations.forEach(this.traverseDeclaredInterfaceOrTypeAlias, this);\n      } else {\n        this.shouldIgnorePropTypes = true;\n      }\n    }\n\n    /**\n     * Traverse TSInterfaceDeclaration and TSTypeAliasDeclaration\n     * which retrieve from function searchDeclarationByName;\n     * @param {ASTNode} node\n     */\n    traverseDeclaredInterfaceOrTypeAlias(node) {\n      if (astUtil.isTSInterfaceDeclaration(node)) {\n        // Handle TSInterfaceDeclaration interface Props { name: string, id: number}, should put in properties list directly;\n        this.foundDeclaredPropertiesList = this.foundDeclaredPropertiesList.concat(node.body.body);\n      }\n      // Handle TSTypeAliasDeclaration type Props = {name:string}\n      if (astUtil.isTSTypeAliasDeclaration(node)) {\n        const typeAnnotation = node.typeAnnotation;\n        this.visitTSNode(typeAnnotation);\n      }\n      if (Array.isArray(node.extends)) {\n        node.extends.forEach((x) => this.visitTSNode(x));\n        // This line is trying to handle typescript-eslint-parser\n        // typescript-eslint-parser extension is name as heritage\n      } else if (Array.isArray(node.heritage)) {\n        node.heritage.forEach((x) => this.visitTSNode(x));\n      }\n    }\n\n    convertIntersectionTypeToPropTypes(node) {\n      if (!node) return;\n      if (Array.isArray(node.types)) {\n        node.types.forEach((x) => this.visitTSNode(x));\n      } else {\n        this.shouldIgnorePropTypes = true;\n      }\n    }\n\n    convertReturnTypeToPropTypes(node, rootNode) {\n      // ReturnType<T> should always have one parameter\n      const nodeTypeArguments = propsUtil.getTypeArguments(node);\n      if (nodeTypeArguments) {\n        if (nodeTypeArguments.params.length === 1) {\n          let returnType = nodeTypeArguments.params[0];\n          // This line is trying to handle typescript-eslint-parser\n          // typescript-eslint-parser TSTypeQuery is wrapped by TSTypeReference\n          if (astUtil.isTSTypeReference(returnType)) {\n            returnType = returnType.typeName;\n          }\n          // Handle ReturnType<typeof mapStateToProps>\n          if (astUtil.isTSTypeQuery(returnType)) {\n            const returnTypeFunction = flatMap(this.sourceCode.ast.body\n              .filter((item) => item.type === 'VariableDeclaration'\n                && item.declarations.find((dec) => dec.id.name === returnType.exprName.name)\n              ), (type) => type.declarations).map((dec) => dec.init);\n\n            if (Array.isArray(returnTypeFunction)) {\n              if (returnTypeFunction.length === 0) {\n                // Cannot find identifier in current scope. It might be an exported type.\n                this.shouldIgnorePropTypes = true;\n                return;\n              }\n              returnTypeFunction.forEach((func) => {\n                if (isFunctionType(func)) {\n                  let res = func.body;\n                  if (res.type === 'BlockStatement') {\n                    res = astUtil.findReturnStatement(func);\n                    if (res) {\n                      res = res.argument;\n                    }\n                  }\n                  switch (res.type) {\n                    case 'ObjectExpression':\n                      iterateProperties(context, res.properties, (key, value, propNode) => {\n                        if (propNode && astUtil.isCallExpression(propNode.argument)) {\n                          const propNodeTypeArguments = propsUtil.getTypeArguments(propNode.argument);\n                          if (propNodeTypeArguments) {\n                            this.visitTSNode(propNodeTypeArguments);\n                          } else {\n                            // Ignore this CallExpression return value since it doesn't have any typeParameters to let us know it's types.\n                            this.shouldIgnorePropTypes = true;\n                            return;\n                          }\n                        }\n                        if (!value) {\n                          this.shouldIgnorePropTypes = true;\n                          return;\n                        }\n                        const types = buildReactDeclarationTypes(value, key, rootNode);\n                        types.fullName = key;\n                        types.name = key;\n                        types.node = propNode;\n                        types.isRequired = propsUtil.isRequiredPropType(value);\n                        this.declaredPropTypes[key] = types;\n                      });\n                      break;\n                    case 'CallExpression':\n                      if (propsUtil.getTypeArguments(res)) {\n                        this.visitTSNode(propsUtil.getTypeArguments(res));\n                      } else {\n                        // Ignore this CallExpression return value since it doesn't have any typeParameters to let us know it's types.\n                        this.shouldIgnorePropTypes = true;\n                      }\n                      break;\n                    default:\n                  }\n                }\n              });\n              return;\n            }\n          }\n          // Handle ReturnType<()=>returnType>\n          if (astUtil.isTSFunctionType(returnType)) {\n            if (astUtil.isTSTypeAnnotation(returnType.returnType)) {\n              this.visitTSNode(returnType.returnType);\n              return;\n            }\n            // This line is trying to handle typescript-eslint-parser\n            // typescript-eslint-parser TSFunction name returnType as typeAnnotation\n            if (astUtil.isTSTypeAnnotation(returnType.typeAnnotation)) {\n              this.visitTSNode(returnType.typeAnnotation);\n              return;\n            }\n          }\n        }\n      }\n      this.shouldIgnorePropTypes = true;\n    }\n\n    endAndStructDeclaredPropTypes() {\n      if (this.shouldSpecifyOptionalChildrenProps) {\n        this.declaredPropTypes.children = {\n          fullName: 'children',\n          name: 'children',\n          isRequired: false,\n        };\n      }\n      if (this.shouldSpecifyClassNameProp) {\n        this.declaredPropTypes.className = {\n          fullName: 'className',\n          name: 'className',\n          isRequired: false,\n        };\n      }\n\n      this.foundDeclaredPropertiesList.forEach((tsInterfaceBody) => {\n        if (tsInterfaceBody && (tsInterfaceBody.type === 'TSPropertySignature' || tsInterfaceBody.type === 'TSMethodSignature')) {\n          let accessor = 'name';\n          if (tsInterfaceBody.key.type === 'Literal') {\n            if (typeof tsInterfaceBody.key.value === 'number') {\n              accessor = 'raw';\n            } else {\n              accessor = 'value';\n            }\n          }\n          this.declaredPropTypes[tsInterfaceBody.key[accessor]] = {\n            fullName: tsInterfaceBody.key[accessor],\n            name: tsInterfaceBody.key[accessor],\n            node: tsInterfaceBody,\n            isRequired: !tsInterfaceBody.optional,\n          };\n        }\n      });\n    }\n  }\n\n  /**\n   * Mark a prop type as declared\n   * @param {ASTNode} node The AST node being checked.\n   * @param {ASTNode} propTypes The AST node containing the proptypes\n   * @param {ASTNode} rootNode\n   */\n  function markPropTypesAsDeclared(node, propTypes, rootNode) {\n    let componentNode = node;\n    while (componentNode && !components.get(componentNode)) {\n      componentNode = componentNode.parent;\n    }\n    const component = components.get(componentNode);\n    let declaredPropTypes = (component && component.declaredPropTypes) || {};\n    let ignorePropsValidation = (component && component.ignorePropsValidation) || false;\n    switch (propTypes && propTypes.type) {\n      case 'ObjectTypeAnnotation':\n        ignorePropsValidation = declarePropTypesForObjectTypeAnnotation(propTypes, declaredPropTypes);\n        break;\n      case 'ObjectExpression':\n        iterateProperties(context, propTypes.properties, (key, value, propNode) => {\n          if (!value) {\n            ignorePropsValidation = true;\n            return;\n          }\n          const types = buildReactDeclarationTypes(value, key, rootNode);\n          types.fullName = key;\n          types.name = key;\n          types.node = propNode;\n          types.isRequired = propsUtil.isRequiredPropType(value);\n          declaredPropTypes[key] = types;\n        });\n        break;\n      case 'MemberExpression': {\n        let curDeclaredPropTypes = declaredPropTypes;\n        // Walk the list of properties, until we reach the assignment\n        // ie: ClassX.propTypes.a.b.c = ...\n        while (\n          propTypes\n          && propTypes.parent\n          && propTypes.parent.type !== 'AssignmentExpression'\n          && propTypes.property\n          && curDeclaredPropTypes\n        ) {\n          const propName = propTypes.property.name;\n          if (propName in curDeclaredPropTypes) {\n            curDeclaredPropTypes = curDeclaredPropTypes[propName].children;\n            propTypes = propTypes.parent;\n          } else {\n            // This will crash at runtime because we haven't seen this key before\n            // stop this and do not declare it\n            propTypes = null;\n          }\n        }\n        if (propTypes && propTypes.parent && propTypes.property) {\n          if (!(propTypes === propTypes.parent.left && propTypes.parent.left.object)) {\n            ignorePropsValidation = true;\n            break;\n          }\n          const parentProp = getText(context, propTypes.parent.left.object).replace(/^.*\\.propTypes\\./, '');\n          const types = buildReactDeclarationTypes(\n            propTypes.parent.right,\n            parentProp,\n            rootNode\n          );\n\n          types.name = propTypes.property.name;\n          types.fullName = [parentProp, propTypes.property.name].join('.');\n          types.node = propTypes.parent;\n          types.isRequired = propsUtil.isRequiredPropType(propTypes.parent.right);\n          curDeclaredPropTypes[propTypes.property.name] = types;\n        } else {\n          let isUsedInPropTypes = false;\n          let n = propTypes;\n          while (n) {\n            if (((n.type === 'AssignmentExpression') && propsUtil.isPropTypesDeclaration(n.left))\n              || ((n.type === 'ClassProperty' || n.type === 'PropertyDefinition' || n.type === 'Property') && propsUtil.isPropTypesDeclaration(n))) {\n              // Found a propType used inside of another propType. This is not considered usage, we'll still validate\n              // this component.\n              isUsedInPropTypes = true;\n              break;\n            }\n            n = n.parent;\n          }\n          if (!isUsedInPropTypes) {\n            ignorePropsValidation = true;\n          }\n        }\n        break;\n      }\n      case 'Identifier': {\n        const firstMatchingVariable = variableUtil.getVariableFromContext(context, node, propTypes.name);\n        if (firstMatchingVariable) {\n          const defInScope = firstMatchingVariable.defs[firstMatchingVariable.defs.length - 1];\n          markPropTypesAsDeclared(node, defInScope.node && defInScope.node.init, rootNode);\n          return;\n        }\n        ignorePropsValidation = true;\n        break;\n      }\n      case 'CallExpression': {\n        if (\n          propWrapperUtil.isPropWrapperFunction(\n            context,\n            getText(context, propTypes.callee)\n          )\n          && propTypes.arguments && propTypes.arguments[0]\n        ) {\n          markPropTypesAsDeclared(node, propTypes.arguments[0], rootNode);\n          return;\n        }\n        break;\n      }\n      case 'IntersectionTypeAnnotation':\n        ignorePropsValidation = declarePropTypesForIntersectionTypeAnnotation(propTypes, declaredPropTypes);\n        break;\n      case 'GenericTypeAnnotation':\n        if (propTypes.id.name === '$ReadOnly') {\n          const propTypeArguments = propsUtil.getTypeArguments(propTypes);\n          ignorePropsValidation = declarePropTypesForObjectTypeAnnotation(\n            propTypeArguments.params[0],\n            declaredPropTypes\n          );\n        } else {\n          ignorePropsValidation = true;\n        }\n        break;\n      case 'TSTypeReference':\n      case 'TSTypeAnnotation': {\n        const tsTypeAnnotation = new DeclarePropTypesForTSTypeAnnotation(propTypes, declaredPropTypes, rootNode);\n        ignorePropsValidation = tsTypeAnnotation.shouldIgnorePropTypes;\n        declaredPropTypes = tsTypeAnnotation.declaredPropTypes;\n      }\n        break;\n      case null:\n        break;\n      default:\n        ignorePropsValidation = true;\n        break;\n    }\n\n    components.set(node, {\n      declaredPropTypes,\n      ignorePropsValidation,\n    });\n  }\n\n  /**\n   * @param {ASTNode} node We expect either an ArrowFunctionExpression,\n   *   FunctionDeclaration, or FunctionExpression\n   * @param {ASTNode} rootNode\n   */\n  function markAnnotatedFunctionArgumentsAsDeclared(node, rootNode) {\n    if (!node.params || !node.params.length) {\n      return;\n    }\n\n    let propTypesArguments = null;\n    if (node.parent) {\n      propTypesArguments = propsUtil.getTypeArguments(node.parent);\n    }\n\n    if (\n      node.parent\n      && node.parent.callee\n      && propTypesArguments\n      && propTypesArguments.params\n      && (\n        node.parent.callee.name === 'forwardRef' || (\n          node.parent.callee.object\n          && node.parent.callee.property\n          && node.parent.callee.object.name === 'React'\n          && node.parent.callee.property.name === 'forwardRef'\n        )\n      )\n    ) {\n      const declaredPropTypes = {};\n      const obj = new DeclarePropTypesForTSTypeAnnotation(propTypesArguments.params[1], declaredPropTypes, rootNode);\n      components.set(node, {\n        declaredPropTypes: obj.declaredPropTypes,\n        ignorePropsValidation: obj.shouldIgnorePropTypes,\n      });\n      return;\n    }\n\n    const siblingIdentifier = node.parent && node.parent.id;\n    const siblingHasTypeAnnotation = siblingIdentifier && siblingIdentifier.typeAnnotation;\n    const isNodeAnnotated = annotations.isAnnotatedFunctionPropsDeclaration(node, context);\n\n    if (!isNodeAnnotated && !siblingHasTypeAnnotation) {\n      return;\n    }\n\n    // https://github.com/jsx-eslint/eslint-plugin-react/issues/2784\n    if (isInsideClassBody(node) && !astUtil.isFunction(node)) {\n      return;\n    }\n\n    // Should ignore function that not return JSXElement\n    if (!utils.isReturningJSXOrNull(node) || startWithCapitalizedLetter(node)) {\n      return;\n    }\n\n    if (isNodeAnnotated) {\n      const param = node.params[0];\n      if (param.typeAnnotation && param.typeAnnotation.typeAnnotation && param.typeAnnotation.typeAnnotation.type === 'UnionTypeAnnotation') {\n        param.typeAnnotation.typeAnnotation.types.forEach((annotation) => {\n          if (annotation.type === 'GenericTypeAnnotation') {\n            markPropTypesAsDeclared(node, resolveTypeAnnotation(annotation), rootNode);\n          } else {\n            markPropTypesAsDeclared(node, annotation, rootNode);\n          }\n        });\n      } else {\n        markPropTypesAsDeclared(node, resolveTypeAnnotation(param), rootNode);\n      }\n    } else {\n      // implements what's discussed here: https://github.com/jsx-eslint/eslint-plugin-react/issues/2777#issuecomment-683944481\n      const annotation = siblingIdentifier.typeAnnotation.typeAnnotation;\n\n      if (\n        annotation\n        && annotation.type !== 'TSTypeReference'\n        && propsUtil.getTypeArguments(annotation) == null\n      ) {\n        return;\n      }\n\n      if (!isValidReactGenericTypeAnnotation(annotation)) return;\n\n      markPropTypesAsDeclared(node, resolveTypeAnnotation(siblingIdentifier), rootNode);\n    }\n  }\n\n  /**\n   * Resolve the type annotation for a given class declaration node.\n   *\n   * @param {ASTNode} node The annotation or a node containing the type annotation.\n   * @returns {ASTNode} The resolved type annotation for the node.\n   */\n  function resolveSuperParameterPropsType(node) {\n    let propsParameterPosition;\n    const parameters = propsUtil.getSuperTypeArguments(node);\n\n    try {\n      // Flow <=0.52 had 3 required TypedParameters of which the second one is the Props.\n      // Flow >=0.53 has 2 optional TypedParameters of which the first one is the Props.\n      propsParameterPosition = testFlowVersion(context, '>= 0.53.0') ? 0 : 1;\n    } catch (e) {\n      // In case there is no flow version defined, we can safely assume that when there are 3 Props we are dealing with version <= 0.52\n      propsParameterPosition = parameters.params.length <= 2 ? 0 : 1;\n    }\n\n    let annotation = parameters.params[propsParameterPosition];\n    while (annotation && (annotation.type === 'TypeAnnotation' || annotation.type === 'NullableTypeAnnotation')) {\n      annotation = annotation.typeAnnotation;\n    }\n\n    if (annotation && annotation.type === 'GenericTypeAnnotation' && getInTypeScope(annotation.id.name)) {\n      return getInTypeScope(annotation.id.name);\n    }\n    return annotation;\n  }\n\n  /**\n   * Checks if we are declaring a `props` class property with a flow type annotation.\n   * @param {ASTNode} node The AST node being checked.\n   * @returns {boolean} True if the node is a type annotated props declaration, false if not.\n   */\n  function isAnnotatedClassPropsDeclaration(node) {\n    if (node && (node.type === 'ClassProperty' || node.type === 'PropertyDefinition')) {\n      const tokens = getFirstTokens(context, node, 2);\n      if (\n        node.typeAnnotation && (\n          tokens[0].value === 'props'\n          || (tokens[1] && tokens[1].value === 'props')\n        )\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  return {\n    ClassExpression(node) {\n      // TypeParameterDeclaration need to be added to typeScope in order to handle ClassExpressions.\n      // This visitor is executed before TypeParameterDeclaration are scoped, therefore we postpone\n      // processing class expressions until when the program exists.\n      classExpressions.push(node);\n    },\n\n    ClassDeclaration(node) {\n      if (isSuperTypeParameterPropsDeclaration(node)) {\n        markPropTypesAsDeclared(node, resolveSuperParameterPropsType(node), node);\n      }\n    },\n\n    'ClassProperty, PropertyDefinition'(node) {\n      if (isAnnotatedClassPropsDeclaration(node)) {\n        markPropTypesAsDeclared(node, resolveTypeAnnotation(node), node);\n      } else if (propsUtil.isPropTypesDeclaration(node)) {\n        markPropTypesAsDeclared(node, node.value, node);\n      }\n    },\n\n    ObjectExpression(node) {\n      // Search for the proptypes declaration\n      node.properties.forEach((property) => {\n        if (!propsUtil.isPropTypesDeclaration(property)) {\n          return;\n        }\n        markPropTypesAsDeclared(node, property.value, node);\n      });\n    },\n\n    FunctionExpression(node) {\n      if (node.parent.type !== 'MethodDefinition') {\n        markAnnotatedFunctionArgumentsAsDeclared(node, node);\n      }\n    },\n\n    ImportDeclaration(node) {\n      // parse `import ... from 'react`\n      if (node.source.value === 'react') {\n        node.specifiers.forEach((specifier) => {\n          if (\n            // handles import * as X from 'react'\n            specifier.type === 'ImportNamespaceSpecifier'\n            // handles import React from 'react'\n            || specifier.type === 'ImportDefaultSpecifier'\n          ) {\n            genericReactTypesImport.add(specifier.local.name);\n          }\n\n          // handles import { FC } from 'react' or import { FC as X } from 'react'\n          if (specifier.type === 'ImportSpecifier' && allowedGenericTypes.has(specifier.imported.name)) {\n            genericReactTypesImport.add(specifier.local.name);\n            localToImportedMap[specifier.local.name] = specifier.imported.name;\n          }\n        });\n      }\n    },\n\n    FunctionDeclaration: markAnnotatedFunctionArgumentsAsDeclared,\n\n    ArrowFunctionExpression: markAnnotatedFunctionArgumentsAsDeclared,\n\n    MemberExpression(node) {\n      if (propsUtil.isPropTypesDeclaration(node)) {\n        const component = utils.getRelatedComponent(node);\n        if (!component) {\n          return;\n        }\n        try {\n          markPropTypesAsDeclared(component.node, node.parent.right || node.parent, node);\n        } catch (e) {\n          if (e.constructor !== RangeError) { throw e; }\n        }\n      }\n    },\n\n    MethodDefinition(node) {\n      if (!node.static || node.kind !== 'get' || !propsUtil.isPropTypesDeclaration(node)) {\n        return;\n      }\n\n      let i = node.value.body.body.length - 1;\n      for (; i >= 0; i--) {\n        if (node.value.body.body[i].type === 'ReturnStatement') {\n          break;\n        }\n      }\n\n      if (i >= 0) {\n        markPropTypesAsDeclared(node, node.value.body.body[i].argument, node);\n      }\n    },\n\n    TypeAlias(node) {\n      setInTypeScope(node.id.name, node.right);\n    },\n\n    TypeParameterDeclaration(node) {\n      const identifier = node.params[0];\n\n      if (identifier.typeAnnotation) {\n        setInTypeScope(identifier.name, identifier.typeAnnotation.typeAnnotation);\n      }\n    },\n\n    Program() {\n      stack = [{}];\n    },\n\n    BlockStatement() {\n      stack.push(Object.create(typeScope()));\n    },\n\n    'BlockStatement:exit'() {\n      stack.pop();\n    },\n\n    'Program:exit'() {\n      classExpressions.forEach((node) => {\n        if (isSuperTypeParameterPropsDeclaration(node)) {\n          markPropTypesAsDeclared(node, resolveSuperParameterPropsType(node), node);\n        }\n      });\n    },\n  };\n};\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = propName;\n/**\n * Returns the name of the prop given the JSXAttribute object.\n */\nfunction propName() {\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!prop.type || prop.type !== 'JSXAttribute') {\n    throw new Error('The prop must be a JSXAttribute collected by the AST parser.');\n  }\n\n  if (prop.name.type === 'JSXNamespacedName') {\n    return prop.name.namespace.name + ':' + prop.name.name.name;\n  }\n\n  return prop.name.name;\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasProp;\nexports.hasAnyProp = hasAnyProp;\nexports.hasEveryProp = hasEveryProp;\n\nvar _propName = require('./propName');\n\nvar _propName2 = _interopRequireDefault(_propName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_OPTIONS = {\n  spreadStrict: true,\n  ignoreCase: true\n};\n\n/**\n * Returns boolean indicating whether an prop exists on the props\n * property of a JSX element node.\n */\nfunction hasProp() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n\n  var propToCheck = options.ignoreCase ? prop.toUpperCase() : prop;\n\n  return props.some(function (attribute) {\n    // If the props contain a spread prop, then refer to strict param.\n    if (attribute.type === 'JSXSpreadAttribute') {\n      return !options.spreadStrict;\n    }\n\n    var currentProp = options.ignoreCase ? (0, _propName2.default)(attribute).toUpperCase() : (0, _propName2.default)(attribute);\n\n    return propToCheck === currentProp;\n  });\n}\n\n/**\n * Given the props on a node and a list of props to check, this returns a boolean\n * indicating if any of them exist on the node.\n */\nfunction hasAnyProp() {\n  var nodeProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n\n  var propsToCheck = typeof props === 'string' ? props.split(' ') : props;\n\n  return propsToCheck.some(function (prop) {\n    return hasProp(nodeProps, prop, options);\n  });\n}\n\n/**\n * Given the props on a node and a list of props to check, this returns a boolean\n * indicating if all of them exist on the node\n */\nfunction hasEveryProp() {\n  var nodeProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n\n  var propsToCheck = typeof props === 'string' ? props.split(' ') : props;\n\n  return propsToCheck.every(function (prop) {\n    return hasProp(nodeProps, prop, options);\n  });\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = elementType;\nfunction resolveMemberExpressions() {\n  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (object.type === 'JSXMemberExpression') {\n    return resolveMemberExpressions(object.object, object.property) + '.' + property.name;\n  }\n\n  return object.name + '.' + property.name;\n}\n\n/**\n * Returns the tagName associated with a JSXElement.\n */\nfunction elementType() {\n  var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var name = node.name;\n\n\n  if (node.type === 'JSXOpeningFragment') {\n    return '<>';\n  }\n\n  if (!name) {\n    throw new Error('The argument provided is not a JSXElement node.');\n  }\n\n  if (name.type === 'JSXMemberExpression') {\n    var _name$object = name.object,\n        object = _name$object === undefined ? {} : _name$object,\n        _name$property = name.property,\n        property = _name$property === undefined ? {} : _name$property;\n\n    return resolveMemberExpressions(object, property);\n  }\n\n  if (name.type === 'JSXNamespacedName') {\n    return name.namespace.name + ':' + name.name.name;\n  }\n\n  return node.name.name;\n}", "'use strict';\n\nvar ArraySpeciesCreate = require('es-abstract/2023/ArraySpeciesCreate');\nvar FlattenIntoArray = require('es-abstract/2023/FlattenIntoArray');\nvar Get = require('es-abstract/2023/Get');\nvar ToIntegerOrInfinity = require('es-abstract/2023/ToIntegerOrInfinity');\nvar ToLength = require('es-abstract/2023/ToLength');\nvar ToObject = require('es-abstract/2023/ToObject');\n\nmodule.exports = function flat() {\n\tvar O = ToObject(this);\n\tvar sourceLen = ToLength(Get(O, 'length'));\n\n\tvar depthNum = 1;\n\tif (arguments.length > 0 && typeof arguments[0] !== 'undefined') {\n\t\tdepthNum = ToIntegerOrInfinity(arguments[0]);\n\t}\n\n\tvar A = ArraySpeciesCreate(O, 0);\n\tFlattenIntoArray(A, O, sourceLen, 0, depthNum);\n\treturn A;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn Array.prototype.flat || implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar shimUnscopables = require('es-shim-unscopables');\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimFlat() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\tArray.prototype,\n\t\t{ flat: polyfill },\n\t\t{ flat: function () { return Array.prototype.flat !== polyfill; } }\n\t);\n\n\tshimUnscopables('flat');\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar polyfill = getPolyfill();\nvar shim = require('./shim');\n\nvar boundFlat = callBind(polyfill);\n\ndefine(boundFlat, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundFlat;\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.eventHandlersByType = undefined;\n\nvar _arrayPrototype = require('array.prototype.flat');\n\nvar _arrayPrototype2 = _interopRequireDefault(_arrayPrototype);\n\nvar _object = require('object.values');\n\nvar _object2 = _interopRequireDefault(_object);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Common event handlers for JSX element event binding.\n */\n\nvar eventHandlersByType = {\n  clipboard: ['onCopy', 'onCut', 'onPaste'],\n  composition: ['onCompositionEnd', 'onCompositionStart', 'onCompositionUpdate'],\n  keyboard: ['onKeyDown', 'onKeyPress', 'onKeyUp'],\n  focus: ['onFocus', 'onBlur'],\n  form: ['onChange', 'onInput', 'onSubmit'],\n  mouse: ['onClick', 'onContextMenu', 'onDblClick', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp'],\n  selection: ['onSelect'],\n  touch: ['onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'],\n  ui: ['onScroll'],\n  wheel: ['onWheel'],\n  media: ['onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting'],\n  image: ['onLoad', 'onError'],\n  animation: ['onAnimationStart', 'onAnimationEnd', 'onAnimationIteration'],\n  transition: ['onTransitionEnd']\n};\n\nexports.default = (0, _arrayPrototype2.default)((0, _object2.default)(eventHandlersByType));\nexports.eventHandlersByType = eventHandlersByType;", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = getProp;\n\nvar _propName = require('./propName');\n\nvar _propName2 = _interopRequireDefault(_propName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DEFAULT_OPTIONS = {\n  ignoreCase: true\n};\n\n/**\n * Returns the JSXAttribute itself or undefined, indicating the prop\n * is not present on the JSXOpeningElement.\n *\n */\nfunction getProp() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;\n\n  function getName(name) {\n    return options.ignoreCase ? name.toUpperCase() : name;\n  }\n  var propToFind = getName(prop);\n  function isPropToFind(property) {\n    return property.type === 'Property' && property.key.type === 'Identifier' && propToFind === getName(property.key.name);\n  }\n\n  var foundAttribute = props.find(function (attribute) {\n    // If the props contain a spread prop, try to find the property in the object expression.\n    if (attribute.type === 'JSXSpreadAttribute') {\n      return attribute.argument.type === 'ObjectExpression' && propToFind !== getName('key') // https://github.com/reactjs/rfcs/pull/107\n      && attribute.argument.properties.some(isPropToFind);\n    }\n\n    return propToFind === getName((0, _propName2.default)(attribute));\n  });\n\n  if (foundAttribute && foundAttribute.type === 'JSXSpreadAttribute') {\n    return propertyToJSXAttribute(foundAttribute.argument.properties.find(isPropToFind));\n  }\n\n  return foundAttribute;\n}\n\nfunction propertyToJSXAttribute(node) {\n  var key = node.key,\n      value = node.value;\n\n  return _extends({\n    type: 'JSXAttribute',\n    name: _extends({ type: 'JSXIdentifier', name: key.name }, getBaseProps(key)),\n    value: value.type === 'Literal' ? adjustRangeOfNode(value) : _extends({ type: 'JSXExpressionContainer', expression: adjustExpressionRange(value) }, getBaseProps(value))\n  }, getBaseProps(node));\n}\n\nfunction adjustRangeOfNode(node) {\n  var _ref = node.range || [node.start, node.end],\n      _ref2 = _slicedToArray(_ref, 2),\n      start = _ref2[0],\n      end = _ref2[1];\n\n  return _extends({}, node, {\n    end: undefined,\n    range: [start, end],\n    start: undefined\n  });\n}\n\nfunction adjustExpressionRange(_ref3) {\n  var expressions = _ref3.expressions,\n      quasis = _ref3.quasis,\n      expression = _objectWithoutProperties(_ref3, ['expressions', 'quasis']);\n\n  return _extends({}, adjustRangeOfNode(expression), expressions ? { expressions: expressions.map(adjustRangeOfNode) } : {}, quasis ? { quasis: quasis.map(adjustRangeOfNode) } : {});\n}\n\nfunction getBaseProps(_ref4) {\n  var loc = _ref4.loc,\n      node = _objectWithoutProperties(_ref4, ['loc']);\n\n  var _adjustRangeOfNode = adjustRangeOfNode(node),\n      range = _adjustRangeOfNode.range;\n\n  return {\n    loc: getBaseLocation(loc),\n    range: range\n  };\n}\n\nfunction getBaseLocation(_ref5) {\n  var start = _ref5.start,\n      end = _ref5.end,\n      source = _ref5.source,\n      filename = _ref5.filename;\n\n  return _extends({\n    start: start,\n    end: end\n  }, source !== undefined ? { source: source } : {}, filename !== undefined ? { filename: filename } : {});\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromLiteral;\n/**\n * Extractor function for a Literal type value node.\n *\n * @param - value - AST Value object with type `Literal`\n * @returns { String|Boolean } - The extracted value converted to correct type.\n */\nfunction extractValueFromLiteral(value) {\n  var extractedValue = value.value;\n\n\n  var normalizedStringValue = typeof extractedValue === 'string' && extractedValue.toLowerCase();\n  if (normalizedStringValue === 'true') {\n    return true;\n  }\n\n  if (normalizedStringValue === 'false') {\n    return false;\n  }\n\n  return extractedValue;\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromJSXElement;\n/**\n * Extractor function for a JSXElement type value node.\n *\n * Returns self-closing element with correct name.\n */\nfunction extractValueFromJSXElement(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n\n  var Tag = value.openingElement.name.name;\n  if (value.openingElement.selfClosing) {\n    return '<' + Tag + ' />';\n  }\n  return '<' + Tag + '>' + [].concat(value.children).map(function (x) {\n    return getValue(x);\n  }).join('') + '</' + Tag + '>';\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromJSXText;\n/**\n * Extractor function for a JSXText type value node.\n *\n * Returns self-closing element with correct name.\n */\nfunction extractValueFromJSXText(value) {\n  return value.raw;\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromJSXFragment;\n/**\n * Extractor function for a JSXFragment type value node.\n *\n * Returns self-closing element with correct name.\n */\nfunction extractValueFromJSXFragment(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n\n  if (value.children.length === 0) {\n    return '<></>';\n  }\n  return '<>' + [].concat(value.children).map(function (x) {\n    return getValue(x);\n  }).join('') + '</>';\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromIdentifier;\nvar JS_RESERVED = {\n  Array: Array,\n  Date: Date,\n  Infinity: Infinity,\n  Math: Math,\n  Number: Number,\n  Object: Object,\n  String: String,\n  undefined: undefined\n};\n\n/**\n * Extractor function for a Identifier type value node.\n * An Identifier is usually a reference to a variable.\n * Just return variable name to determine its existence.\n *\n * @param - value - AST Value object with type `Identifier`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromIdentifier(value) {\n  var name = value.name;\n\n\n  if (Object.hasOwnProperty.call(JS_RESERVED, name)) {\n    return JS_RESERVED[name];\n  }\n\n  return name;\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromTemplateLiteral;\nfunction sortStarts(a, b) {\n  return (a.range ? a.range[0] : a.start) - (b.range ? b.range[0] : b.start);\n}\n\n/**\n * Returns the string value of a template literal object.\n * Tries to build it as best as it can based on the passed\n * prop. For instance `This is a ${prop}` will return 'This is a {prop}'.\n *\n * If the template literal builds to undefined (`${undefined}`), then\n * this should return \"undefined\".\n */\nfunction extractValueFromTemplateLiteral(value) {\n  var quasis = value.quasis,\n      expressions = value.expressions;\n\n  var partitions = quasis.concat(expressions);\n\n  return partitions.sort(sortStarts).map(function (_ref) {\n    var type = _ref.type,\n        _ref$value = _ref.value;\n    _ref$value = _ref$value === undefined ? {} : _ref$value;\n    var raw = _ref$value.raw,\n        name = _ref.name;\n\n    if (type === 'TemplateElement') {\n      return raw;\n    }\n\n    if (type === 'Identifier') {\n      return name === 'undefined' ? name : '{' + name + '}';\n    }\n\n    if (type.indexOf('Expression') > -1) {\n      return '{' + type + '}';\n    }\n\n    return '';\n  }).join('');\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromTaggedTemplateExpression;\n\nvar _TemplateLiteral = require('./TemplateLiteral');\n\nvar _TemplateLiteral2 = _interopRequireDefault(_TemplateLiteral);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the string value of a tagged template literal object.\n * Redirects the bulk of the work to `TemplateLiteral`.\n */\nfunction extractValueFromTaggedTemplateExpression(value) {\n  return (0, _TemplateLiteral2.default)(value.quasi);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromFunctionExpression;\n/**\n * Extractor function for a FunctionExpression type value node.\n * Statically, we can't execute the given function, so just return a function\n * to indicate that the value is present.\n *\n * @param - value - AST Value object with type `FunctionExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromFunctionExpression(value) {\n  return function () {\n    return value;\n  };\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromLogicalExpression;\n/**\n * Extractor function for a LogicalExpression type value node.\n * A logical expression is `a && b` or `a || b`, so we evaluate both sides\n * and return the extracted value of the expression.\n *\n * @param - value - AST Value object with type `LogicalExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromLogicalExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n      left = value.left,\n      right = value.right;\n\n  var leftVal = getValue(left);\n  var rightVal = getValue(right);\n\n  if (operator === '&&') {\n    return leftVal && rightVal;\n  }\n  if (operator === '??') {\n    // return leftVal ?? rightVal; // TODO: update to babel 7\n    return leftVal === null || typeof leftVal === 'undefined' ? rightVal : leftVal;\n  }\n  return leftVal || rightVal;\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromMemberExpression;\n/**\n * Extractor function for a MemberExpression type value node.\n * A member expression is accessing a property on an object `obj.property`.\n *\n * @param - value - AST Value object with type `MemberExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj.property` convention.\n */\nfunction extractValueFromMemberExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return '' + getValue(value.object) + (value.optional ? '?.' : '.') + getValue(value.property);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromChainExpression;\n/**\n * Extractor function for a ChainExpression type value node.\n * A member expression is accessing a property on an object `obj.property`.\n *\n * @param - value - AST Value object with type `ChainExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj?.property` convention.\n */\nfunction extractValueFromChainExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return getValue(value.expression || value);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromOptionalCallExpression;\n/**\n * Extractor function for a OptionalCallExpression type value node.\n * A member expression is accessing a property on an object `obj.property` and invoking it.\n *\n * @param - value - AST Value object with type `OptionalCallExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj.property?.()` convention.\n */\nfunction extractValueFromOptionalCallExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return getValue(value.callee) + '?.(' + value.arguments.map(function (x) {\n    return getValue(x);\n  }).join(', ') + ')';\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromOptionalMemberExpression;\n/**\n * Extractor function for a OptionalMemberExpression type value node.\n * A member expression is accessing a property on an object `obj.property`.\n *\n * @param - value - AST Value object with type `OptionalMemberExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj?.property` convention.\n */\nfunction extractValueFromOptionalMemberExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return getValue(value.object) + '?.' + getValue(value.property);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromCallExpression;\n/**\n * Extractor function for a CallExpression type value node.\n * A call expression looks like `bar()`\n * This will return `bar` as the value to indicate its existence,\n * since we can not execute the function bar in a static environment.\n *\n * @param - value - AST Value object with type `CallExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromCallExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var args = Array.isArray(value.arguments) ? value.arguments.map(function (x) {\n    return getValue(x);\n  }).join(', ') : '';\n  return '' + getValue(value.callee) + (value.optional ? '?.' : '') + '(' + args + ')';\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromUnaryExpression;\n/**\n * Extractor function for a UnaryExpression type value node.\n * A unary expression is an expression with a unary operator.\n * For example, !\"foobar\" will evaluate to false, so this will return false.\n *\n * @param - value - AST Value object with type `UnaryExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromUnaryExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n      argument = value.argument;\n\n\n  switch (operator) {\n    case '-':\n      return -getValue(argument);\n    case '+':\n      return +getValue(argument); // eslint-disable-line no-implicit-coercion\n    case '!':\n      return !getValue(argument);\n    case '~':\n      return ~getValue(argument); // eslint-disable-line no-bitwise\n    case 'delete':\n      // I believe delete statements evaluate to true.\n      return true;\n    case 'typeof':\n    case 'void':\n    default:\n      return undefined;\n  }\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromThisExpression;\n/**\n * Extractor function for a ThisExpression type value node.\n * A this expression is using `this` as an identifier.\n *\n * @returns - 'this' as a string.\n */\nfunction extractValueFromThisExpression() {\n  return 'this';\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromConditionalExpression;\n/**\n * Extractor function for a ConditionalExpression type value node.\n *\n * @param - value - AST Value object with type `ConditionalExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromConditionalExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var test = value.test,\n      alternate = value.alternate,\n      consequent = value.consequent;\n\n\n  return getValue(test) ? getValue(consequent) : getValue(alternate);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromBinaryExpression;\n/**\n * Extractor function for a BinaryExpression type value node.\n * A binary expression has a left and right side separated by an operator\n * such as `a + b`.\n *\n * @param - value - AST Value object with type `BinaryExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromBinaryExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n      left = value.left,\n      right = value.right;\n\n  var leftVal = getValue(left);\n  var rightVal = getValue(right);\n\n  switch (operator) {\n    case '==':\n      return leftVal == rightVal; // eslint-disable-line\n    case '!=':\n      return leftVal != rightVal; // eslint-disable-line\n    case '===':\n      return leftVal === rightVal;\n    case '!==':\n      return leftVal !== rightVal;\n    case '<':\n      return leftVal < rightVal;\n    case '<=':\n      return leftVal <= rightVal;\n    case '>':\n      return leftVal > rightVal;\n    case '>=':\n      return leftVal >= rightVal;\n    case '<<':\n      return leftVal << rightVal; // eslint-disable-line no-bitwise\n    case '>>':\n      return leftVal >> rightVal; // eslint-disable-line no-bitwise\n    case '>>>':\n      return leftVal >>> rightVal; // eslint-disable-line no-bitwise\n    case '+':\n      return leftVal + rightVal;\n    case '-':\n      return leftVal - rightVal;\n    case '*':\n      return leftVal * rightVal;\n    case '/':\n      return leftVal / rightVal;\n    case '%':\n      return leftVal % rightVal;\n    case '|':\n      return leftVal | rightVal; // eslint-disable-line no-bitwise\n    case '^':\n      return leftVal ^ rightVal; // eslint-disable-line no-bitwise\n    case '&':\n      return leftVal & rightVal; // eslint-disable-line no-bitwise\n    case 'in':\n      try {\n        return leftVal in rightVal;\n      } catch (err) {\n        return false;\n      }\n    case 'instanceof':\n      if (typeof rightVal !== 'function') {\n        return false;\n      }\n      return leftVal instanceof rightVal;\n    default:\n      return undefined;\n  }\n}", "'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimAssign() {\n\tvar polyfill = getPolyfill();\n\tdefine(\n\t\tObject,\n\t\t{ assign: polyfill },\n\t\t{ assign: function () { return Object.assign !== polyfill; } }\n\t);\n\treturn polyfill;\n};\n", "'use strict';\n\nvar defineProperties = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind.apply(getPolyfill());\n// eslint-disable-next-line no-unused-vars\nvar bound = function assign(target, source1) {\n\treturn polyfill(Object, arguments);\n};\n\ndefineProperties(bound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = bound;\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromObjectExpression;\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Extractor function for an ObjectExpression type value node.\n * An object expression is using {}.\n *\n * @returns - a representation of the object\n */\nfunction extractValueFromObjectExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return value.properties.reduce(function (obj, property) {\n    // Support types: SpreadProperty and ExperimentalSpreadProperty\n    if (/^(?:Experimental)?Spread(?:Property|Element)$/.test(property.type)) {\n      if (property.argument.type === 'ObjectExpression') {\n        return (0, _object2.default)({}, obj, extractValueFromObjectExpression(property.argument));\n      }\n    } else {\n      return (0, _object2.default)({}, obj, _defineProperty({}, getValue(property.key), getValue(property.value)));\n    }\n    return obj;\n  }, {});\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromNewExpression;\n/**\n * Extractor function for a NewExpression type value node.\n * A new expression instantiates an object with `new` keyword.\n *\n * @returns - an empty object.\n */\nfunction extractValueFromNewExpression() {\n  return new Object(); // eslint-disable-line\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromUpdateExpression;\n/**\n * Extractor function for an UpdateExpression type value node.\n * An update expression is an expression with an update operator.\n * For example, foo++ will evaluate to foo + 1.\n *\n * @param - value - AST Value object with type `UpdateExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromUpdateExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n      argument = value.argument,\n      prefix = value.prefix;\n\n\n  var val = getValue(argument);\n\n  switch (operator) {\n    case '++':\n      return prefix ? ++val : val++; // eslint-disable-line no-plusplus\n    case '--':\n      return prefix ? --val : val--; // eslint-disable-line no-plusplus\n    default:\n      return undefined;\n  }\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromArrayExpression;\n/**\n * Extractor function for an ArrayExpression type value node.\n * An array expression is an expression with [] syntax.\n *\n * @returns - An array of the extracted elements.\n */\nfunction extractValueFromArrayExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return value.elements.map(function (element) {\n    if (element === null) return undefined;\n    return getValue(element);\n  });\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromBindExpression;\n/**\n * Extractor function for a BindExpression type value node.\n * A bind expression looks like `::this.foo`\n * This will return `this.foo.bind(this)` as the value to indicate its existence,\n * since we can not execute the function this.foo.bind(this) in a static environment.\n *\n * @param - value - AST Value object with type `BindExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromBindExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var callee = getValue(value.callee);\n\n  // If value.object === null, the callee must be a MemberExpression.\n  // https://github.com/babel/babylon/blob/master/ast/spec.md#bindexpression\n  var object = value.object === null ? getValue(value.callee.object) : getValue(value.object);\n\n  if (value.object && value.object.property) {\n    return object + '.' + callee + '.bind(' + object + ')';\n  }\n\n  return callee + '.bind(' + object + ')';\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromSpreadElement;\n/**\n * Extractor function for a SpreadElement type value node.\n * We can't statically evaluate an array spread, so just return\n * undefined.\n *\n * @param - value - AST Value object with type `SpreadElement`\n * @returns - An prototypeless object.\n */\nfunction extractValueFromSpreadElement() {\n  return undefined;\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromTypeCastExpression;\n/**\n * Extractor function for a TypeCastExpression type value node.\n * A type cast expression looks like `(this.handleClick: (event: MouseEvent) => void))`\n * This will return the expression `this.handleClick`.\n *\n * @param - value - AST Value object with type `TypeCastExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromTypeCastExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return getValue(value.expression);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromSequenceExpression;\n/**\n * Extractor function for a SequenceExpression type value node.\n * A Sequence expression is an object with an attribute named\n * expressions which contains an array of different types\n *  of expression objects.\n *\n * @returns - An array of the extracted elements.\n */\nfunction extractValueFromSequenceExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return value.expressions.map(function (element) {\n    return getValue(element);\n  });\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromTSNonNullExpression;\nvar extractValueFromThisExpression = require('./ThisExpression').default;\nvar extractValueFromCallExpression = require('./CallExpression').default;\n\nfunction navigate(obj, prop, value) {\n  if (value.computed) {\n    return value.optional ? obj + '?.[' + prop + ']' : obj + '[' + prop + ']';\n  }\n  return value.optional ? obj + '?.' + prop : obj + '.' + prop;\n}\n\n/**\n * Extractor function for a TSNonNullExpression type value node.\n * A TSNonNullExpression is accessing a TypeScript Non-Null Assertion\n * Operator !\n *\n * @param - value - AST Value object with type `TSNonNullExpression`\n * @returns - The extracted value converted to correct type\n *  and maintaing `obj.property` convention.\n */\nfunction extractValueFromTSNonNullExpression(value) {\n  // eslint-disable-next-line global-require\n  // const getValue = require('.').default;\n  var errorMessage = 'The prop value with an expression type of TSNonNullExpression could not be resolved. Please file an issue ( https://github.com/jsx-eslint/jsx-ast-utils/issues/new ) to get this fixed immediately.';\n\n  // it's just the name\n  if (value.type === 'Identifier') {\n    var name = value.name;\n\n    return name;\n  }\n\n  if (value.type === 'Literal') {\n    return value.value;\n  }\n\n  if (value.type === 'TSAsExpression') {\n    return extractValueFromTSNonNullExpression(value.expression);\n  }\n\n  if (value.type === 'CallExpression') {\n    return extractValueFromCallExpression(value);\n  }\n\n  if (value.type === 'ThisExpression') {\n    return extractValueFromThisExpression();\n  }\n\n  // does not contains properties & is not parenthesized\n  if (value.type === 'TSNonNullExpression' && (!value.extra || value.extra.parenthesized === false)) {\n    var expression = value.expression;\n\n    return extractValueFromTSNonNullExpression(expression) + '!';\n  }\n\n  // does not contains properties & is parenthesized\n  if (value.type === 'TSNonNullExpression' && value.extra && value.extra.parenthesized === true) {\n    var _expression = value.expression;\n\n    return '(' + extractValueFromTSNonNullExpression(_expression) + '!' + ')';\n  }\n\n  if (value.type === 'MemberExpression') {\n    // contains a property & is not parenthesized\n    if (!value.extra || value.extra.parenthesized === false) {\n      return navigate(extractValueFromTSNonNullExpression(value.object), extractValueFromTSNonNullExpression(value.property), value);\n    }\n\n    // contains a property & is parenthesized\n    if (value.extra && value.extra.parenthesized === true) {\n      var result = navigate(extractValueFromTSNonNullExpression(value.object), extractValueFromTSNonNullExpression(value.property), value);\n      return '(' + result + ')';\n    }\n  }\n\n  // try to fail silently, if specs for TSNonNullExpression change\n  // not throw, only log error. Similar to how it was done previously\n  if (value.expression) {\n    var _expression2 = value.expression;\n\n    while (_expression2) {\n      if (_expression2.type === 'Identifier') {\n        // eslint-disable-next-line no-console\n        console.error(errorMessage);\n        return _expression2.name;\n      }\n      var _expression3 = _expression2;\n      _expression2 = _expression3.expression;\n    }\n  }\n\n  // eslint-disable-next-line no-console\n  console.error(errorMessage);\n  return '';\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromAssignmentExpression;\n/**\n * Extractor function for a AssignmentExpression type value node.\n * An assignment expression looks like `x = y` or `x += y` in expression position.\n * This will return the assignment as the value.\n *\n * @param - value - AST Value object with type `AssignmentExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromAssignmentExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  return getValue(value.left) + ' ' + value.operator + ' ' + getValue(value.right);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = extract;\nexports.extractLiteral = extractLiteral;\n\nvar _Literal = require('../Literal');\n\nvar _Literal2 = _interopRequireDefault(_Literal);\n\nvar _JSXElement = require('../JSXElement');\n\nvar _JSXElement2 = _interopRequireDefault(_JSXElement);\n\nvar _JSXFragment = require('../JSXFragment');\n\nvar _JSXFragment2 = _interopRequireDefault(_JSXFragment);\n\nvar _JSXText = require('../JSXText');\n\nvar _JSXText2 = _interopRequireDefault(_JSXText);\n\nvar _Identifier = require('./Identifier');\n\nvar _Identifier2 = _interopRequireDefault(_Identifier);\n\nvar _TaggedTemplateExpression = require('./TaggedTemplateExpression');\n\nvar _TaggedTemplateExpression2 = _interopRequireDefault(_TaggedTemplateExpression);\n\nvar _TemplateLiteral = require('./TemplateLiteral');\n\nvar _TemplateLiteral2 = _interopRequireDefault(_TemplateLiteral);\n\nvar _FunctionExpression = require('./FunctionExpression');\n\nvar _FunctionExpression2 = _interopRequireDefault(_FunctionExpression);\n\nvar _LogicalExpression = require('./LogicalExpression');\n\nvar _LogicalExpression2 = _interopRequireDefault(_LogicalExpression);\n\nvar _MemberExpression = require('./MemberExpression');\n\nvar _MemberExpression2 = _interopRequireDefault(_MemberExpression);\n\nvar _ChainExpression = require('./ChainExpression');\n\nvar _ChainExpression2 = _interopRequireDefault(_ChainExpression);\n\nvar _OptionalCallExpression = require('./OptionalCallExpression');\n\nvar _OptionalCallExpression2 = _interopRequireDefault(_OptionalCallExpression);\n\nvar _OptionalMemberExpression = require('./OptionalMemberExpression');\n\nvar _OptionalMemberExpression2 = _interopRequireDefault(_OptionalMemberExpression);\n\nvar _CallExpression = require('./CallExpression');\n\nvar _CallExpression2 = _interopRequireDefault(_CallExpression);\n\nvar _UnaryExpression = require('./UnaryExpression');\n\nvar _UnaryExpression2 = _interopRequireDefault(_UnaryExpression);\n\nvar _ThisExpression = require('./ThisExpression');\n\nvar _ThisExpression2 = _interopRequireDefault(_ThisExpression);\n\nvar _ConditionalExpression = require('./ConditionalExpression');\n\nvar _ConditionalExpression2 = _interopRequireDefault(_ConditionalExpression);\n\nvar _BinaryExpression = require('./BinaryExpression');\n\nvar _BinaryExpression2 = _interopRequireDefault(_BinaryExpression);\n\nvar _ObjectExpression = require('./ObjectExpression');\n\nvar _ObjectExpression2 = _interopRequireDefault(_ObjectExpression);\n\nvar _NewExpression = require('./NewExpression');\n\nvar _NewExpression2 = _interopRequireDefault(_NewExpression);\n\nvar _UpdateExpression = require('./UpdateExpression');\n\nvar _UpdateExpression2 = _interopRequireDefault(_UpdateExpression);\n\nvar _ArrayExpression = require('./ArrayExpression');\n\nvar _ArrayExpression2 = _interopRequireDefault(_ArrayExpression);\n\nvar _BindExpression = require('./BindExpression');\n\nvar _BindExpression2 = _interopRequireDefault(_BindExpression);\n\nvar _SpreadElement = require('./SpreadElement');\n\nvar _SpreadElement2 = _interopRequireDefault(_SpreadElement);\n\nvar _TypeCastExpression = require('./TypeCastExpression');\n\nvar _TypeCastExpression2 = _interopRequireDefault(_TypeCastExpression);\n\nvar _SequenceExpression = require('./SequenceExpression');\n\nvar _SequenceExpression2 = _interopRequireDefault(_SequenceExpression);\n\nvar _TSNonNullExpression = require('./TSNonNullExpression');\n\nvar _TSNonNullExpression2 = _interopRequireDefault(_TSNonNullExpression);\n\nvar _AssignmentExpression = require('./AssignmentExpression');\n\nvar _AssignmentExpression2 = _interopRequireDefault(_AssignmentExpression);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Composition map of types to their extractor functions.\nvar TYPES = {\n  Identifier: _Identifier2.default,\n  Literal: _Literal2.default,\n  JSXElement: _JSXElement2.default,\n  JSXFragment: _JSXFragment2.default,\n  JSXText: _JSXText2.default,\n  TaggedTemplateExpression: _TaggedTemplateExpression2.default,\n  TemplateLiteral: _TemplateLiteral2.default,\n  ArrowFunctionExpression: _FunctionExpression2.default,\n  FunctionExpression: _FunctionExpression2.default,\n  LogicalExpression: _LogicalExpression2.default,\n  MemberExpression: _MemberExpression2.default,\n  ChainExpression: _ChainExpression2.default,\n  OptionalCallExpression: _OptionalCallExpression2.default,\n  OptionalMemberExpression: _OptionalMemberExpression2.default,\n  CallExpression: _CallExpression2.default,\n  UnaryExpression: _UnaryExpression2.default,\n  ThisExpression: _ThisExpression2.default,\n  ConditionalExpression: _ConditionalExpression2.default,\n  BinaryExpression: _BinaryExpression2.default,\n  ObjectExpression: _ObjectExpression2.default,\n  NewExpression: _NewExpression2.default,\n  UpdateExpression: _UpdateExpression2.default,\n  ArrayExpression: _ArrayExpression2.default,\n  BindExpression: _BindExpression2.default,\n  SpreadElement: _SpreadElement2.default,\n  TypeCastExpression: _TypeCastExpression2.default,\n  SequenceExpression: _SequenceExpression2.default,\n  TSNonNullExpression: _TSNonNullExpression2.default,\n  AssignmentExpression: _AssignmentExpression2.default\n};\n\nvar noop = function noop() {\n  return null;\n};\n\nvar errorMessage = function errorMessage(expression) {\n  return 'The prop value with an expression type of ' + expression + ' could not be resolved. Please file an issue ( https://github.com/jsx-eslint/jsx-ast-utils/issues/new ) to get this fixed immediately.';\n};\n\n/**\n * This function maps an AST value node\n * to its correct extractor function for its\n * given type.\n *\n * This will map correctly for *all* possible expression types.\n *\n * @param - value - AST Value object with type `JSXExpressionContainer`\n * @returns The extracted value.\n */\nfunction extract(value) {\n  // Value will not have the expression property when we recurse.\n  // The type for expression on ArrowFunctionExpression is a boolean.\n  var expression = void 0;\n  if (typeof value.expression !== 'boolean' && value.expression) {\n    expression = value.expression; // eslint-disable-line prefer-destructuring\n  } else {\n    expression = value;\n  }\n  var _expression = expression,\n      type = _expression.type;\n\n  // Typescript NonNull Expression is wrapped & it would end up in the wrong extractor\n\n  if (expression.object && expression.object.type === 'TSNonNullExpression') {\n    type = 'TSNonNullExpression';\n  }\n\n  while (type === 'TSAsExpression') {\n    var _expression2 = expression;\n    type = _expression2.type;\n\n    if (expression.expression) {\n      var _expression3 = expression;\n      expression = _expression3.expression;\n    }\n  }\n\n  if (TYPES[type] === undefined) {\n    // eslint-disable-next-line no-console\n    console.error(errorMessage(type));\n    return null;\n  }\n\n  return TYPES[type](expression);\n}\n\n// Composition map of types to their extractor functions to handle literals.\nvar LITERAL_TYPES = _extends({}, TYPES, {\n  Literal: function Literal(value) {\n    var extractedVal = TYPES.Literal.call(undefined, value);\n    var isNull = extractedVal === null;\n    // This will be convention for attributes that have null\n    // value explicitly defined (<div prop={null} /> maps to 'null').\n    return isNull ? 'null' : extractedVal;\n  },\n  Identifier: function Identifier(value) {\n    var isUndefined = TYPES.Identifier.call(undefined, value) === undefined;\n    return isUndefined ? undefined : null;\n  },\n  JSXElement: noop,\n  JSXFragment: noop,\n  JSXText: noop,\n  ArrowFunctionExpression: noop,\n  FunctionExpression: noop,\n  LogicalExpression: noop,\n  MemberExpression: noop,\n  OptionalCallExpression: noop,\n  OptionalMemberExpression: noop,\n  CallExpression: noop,\n  UnaryExpression: function UnaryExpression(value) {\n    var extractedVal = TYPES.UnaryExpression.call(undefined, value);\n    return extractedVal === undefined ? null : extractedVal;\n  },\n  UpdateExpression: function UpdateExpression(value) {\n    var extractedVal = TYPES.UpdateExpression.call(undefined, value);\n    return extractedVal === undefined ? null : extractedVal;\n  },\n  ThisExpression: noop,\n  ConditionalExpression: noop,\n  BinaryExpression: noop,\n  ObjectExpression: noop,\n  NewExpression: noop,\n  ArrayExpression: function ArrayExpression(value) {\n    var extractedVal = TYPES.ArrayExpression.call(undefined, value);\n    return extractedVal.filter(function (val) {\n      return val !== null;\n    });\n  },\n  BindExpression: noop,\n  SpreadElement: noop,\n  TSNonNullExpression: noop,\n  TSAsExpression: noop,\n  TypeCastExpression: noop,\n  SequenceExpression: noop,\n  ChainExpression: noop\n});\n\n/**\n * This function maps an AST value node\n * to its correct extractor function for its\n * given type.\n *\n * This will map correctly for *some* possible types that map to literals.\n *\n * @param - value - AST Value object with type `JSXExpressionContainer`\n * @returns The extracted value.\n */\nfunction extractLiteral(value) {\n  // Value will not have the expression property when we recurse.\n  var expression = value.expression || value;\n  var type = expression.type;\n\n\n  if (LITERAL_TYPES[type] === undefined) {\n    // eslint-disable-next-line no-console\n    console.error(errorMessage(type));\n    return null;\n  }\n\n  return LITERAL_TYPES[type](expression);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = getValue;\nexports.getLiteralValue = getLiteralValue;\n\nvar _Literal = require('./Literal');\n\nvar _Literal2 = _interopRequireDefault(_Literal);\n\nvar _JSXElement = require('./JSXElement');\n\nvar _JSXElement2 = _interopRequireDefault(_JSXElement);\n\nvar _JSXText = require('./JSXText');\n\nvar _JSXText2 = _interopRequireDefault(_JSXText);\n\nvar _JSXFragment = require('./JSXFragment');\n\nvar _JSXFragment2 = _interopRequireDefault(_JSXFragment);\n\nvar _expressions = require('./expressions');\n\nvar _expressions2 = _interopRequireDefault(_expressions);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Composition map of types to their extractor functions.\nvar TYPES = {\n  Literal: _Literal2.default,\n  JSXElement: _JSXElement2.default,\n  JSXExpressionContainer: _expressions2.default,\n  JSXText: _JSXText2.default,\n  JSXFragment: _JSXFragment2.default\n};\n\n// Composition map of types to their extractor functions to handle literals.\nvar LITERAL_TYPES = _extends({}, TYPES, {\n  JSXElement: function JSXElement() {\n    return null;\n  },\n  JSXExpressionContainer: _expressions.extractLiteral\n});\n\n/**\n * This function maps an AST value node\n * to its correct extractor function for its\n * given type.\n *\n * This will map correctly for *all* possible types.\n *\n * @param value - AST Value object on a JSX Attribute.\n */\nfunction getValue(value) {\n  if (!TYPES[value.type]) console.log(value.type);\n  return TYPES[value.type](value);\n}\n\n/**\n * This function maps an AST value node\n * to its correct extractor function for its\n * given type.\n *\n * This will map correctly for *some* possible types that map to literals.\n *\n * @param value - AST Value object on a JSX Attribute.\n */\nfunction getLiteralValue(value) {\n  return LITERAL_TYPES[value.type](value);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getPropValue;\nexports.getLiteralPropValue = getLiteralPropValue;\n\nvar _values = require('./values');\n\nvar _values2 = _interopRequireDefault(_values);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar extractValue = function extractValue(attribute, extractor) {\n  if (attribute && attribute.type === 'JSXAttribute') {\n    if (attribute.value === null) {\n      // Null valued attributes imply truthiness.\n      // For example: <div aria-hidden />\n      // See: https://facebook.github.io/react/docs/jsx-in-depth.html#boolean-attributes\n      return true;\n    }\n\n    return extractor(attribute.value);\n  }\n\n  return undefined;\n};\n\n/**\n * Returns the value of a given attribute.\n * Different types of attributes have their associated\n * values in different properties on the object.\n *\n * This function should return the most *closely* associated\n * value with the intention of the JSX.\n *\n * @param attribute - The JSXAttribute collected by AST parser.\n */\nfunction getPropValue(attribute) {\n  return extractValue(attribute, _values2.default);\n}\n\n/**\n * Returns the value of a given attribute.\n * Different types of attributes have their associated\n * values in different properties on the object.\n *\n * This function should return a value only if we can extract\n * a literal value from its attribute (i.e. values that have generic\n * types in JavaScript - strings, numbers, booleans, etc.)\n *\n * @param attribute - The JSXAttribute collected by AST parser.\n */\nfunction getLiteralPropValue(attribute) {\n  return extractValue(attribute, _values.getLiteralValue);\n}", "'use strict';\n\nvar _hasProp = require('./hasProp');\n\nvar _hasProp2 = _interopRequireDefault(_hasProp);\n\nvar _elementType = require('./elementType');\n\nvar _elementType2 = _interopRequireDefault(_elementType);\n\nvar _eventHandlers = require('./eventHandlers');\n\nvar _eventHandlers2 = _interopRequireDefault(_eventHandlers);\n\nvar _getProp = require('./getProp');\n\nvar _getProp2 = _interopRequireDefault(_getProp);\n\nvar _getPropValue = require('./getPropValue');\n\nvar _getPropValue2 = _interopRequireDefault(_getPropValue);\n\nvar _propName = require('./propName');\n\nvar _propName2 = _interopRequireDefault(_propName);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  hasProp: _hasProp2.default,\n  hasAnyProp: _hasProp.hasAnyProp,\n  hasEveryProp: _hasProp.hasEveryProp,\n  elementType: _elementType2.default,\n  eventHandlers: _eventHandlers2.default,\n  eventHandlersByType: _eventHandlers.eventHandlersByType,\n  getProp: _getProp2.default,\n  getPropValue: _getPropValue2.default,\n  getLiteralPropValue: _getPropValue.getLiteralPropValue,\n  propName: _propName2.default\n};", "module.exports = require('./lib').elementType; // eslint-disable-line import/no-unresolved\n", "'use strict';\n\nconst astUtil = require('./ast');\nconst pragmaUtil = require('./pragma');\nconst variableUtil = require('./variable');\n\n/**\n * Check if variable is destructured from pragma import\n *\n * @param {Context} context eslint context\n * @param {ASTNode} node The AST node to check\n * @param {string} variable The variable name to check\n * @returns {boolean} True if createElement is destructured from the pragma\n */\nmodule.exports = function isDestructuredFromPragmaImport(context, node, variable) {\n  const pragma = pragmaUtil.getFromContext(context);\n  const variableInScope = variableUtil.getVariableFromContext(context, node, variable);\n  if (variableInScope) {\n    const latestDef = variableUtil.getLatestVariableDefinition(variableInScope);\n    if (latestDef) {\n      // check if latest definition is a variable declaration: 'variable = value'\n      if (latestDef.node.type === 'VariableDeclarator' && latestDef.node.init) {\n        // check for: 'variable = pragma.variable'\n        if (\n          latestDef.node.init.type === 'MemberExpression'\n          && latestDef.node.init.object.type === 'Identifier'\n          && latestDef.node.init.object.name === pragma\n        ) {\n          return true;\n        }\n        // check for: '{variable} = pragma'\n        if (\n          latestDef.node.init.type === 'Identifier'\n          && latestDef.node.init.name === pragma\n        ) {\n          return true;\n        }\n\n        // \"require('react')\"\n        let requireExpression = null;\n\n        // get \"require('react')\" from: \"{variable} = require('react')\"\n        if (astUtil.isCallExpression(latestDef.node.init)) {\n          requireExpression = latestDef.node.init;\n        }\n        // get \"require('react')\" from: \"variable = require('react').variable\"\n        if (\n          !requireExpression\n          && latestDef.node.init.type === 'MemberExpression'\n          && astUtil.isCallExpression(latestDef.node.init.object)\n        ) {\n          requireExpression = latestDef.node.init.object;\n        }\n\n        // check proper require.\n        if (\n          requireExpression\n          && requireExpression.callee\n          && requireExpression.callee.name === 'require'\n          && requireExpression.arguments[0]\n          && requireExpression.arguments[0].value === pragma.toLocaleLowerCase()\n        ) {\n          return true;\n        }\n\n        return false;\n      }\n\n      // latest definition is an import declaration: import {<variable>} from 'react'\n      if (\n        latestDef.parent\n        && latestDef.parent.type === 'ImportDeclaration'\n        && latestDef.parent.source.value === pragma.toLocaleLowerCase()\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n", "'use strict';\n\nconst pragmaUtil = require('./pragma');\nconst isDestructuredFromPragmaImport = require('./isDestructuredFromPragmaImport');\n\n/**\n * Checks if the node is a createElement call\n * @param {Context} context - The AST node being checked.\n * @param {ASTNode} node - The AST node being checked.\n * @returns {boolean} - True if node is a createElement call object literal, False if not.\n*/\nmodule.exports = function isCreateElement(context, node) {\n  if (!node.callee) {\n    return false;\n  }\n\n  if (\n    node.callee.type === 'MemberExpression'\n    && node.callee.property.name === 'createElement'\n    && node.callee.object\n    && node.callee.object.name === pragmaUtil.getFromContext(context)\n  ) {\n    return true;\n  }\n\n  if (\n    node.callee.name === 'createElement'\n    && isDestructuredFromPragmaImport(context, node, 'createElement')\n  ) {\n    return true;\n  }\n\n  return false;\n};\n", "/**\n * @fileoverview Utility functions for JSX\n */\n\n'use strict';\n\nconst elementType = require('jsx-ast-utils/elementType');\n\nconst astUtil = require('./ast');\nconst isCreateElement = require('./isCreateElement');\nconst variableUtil = require('./variable');\n\n// See https://github.com/babel/babel/blob/ce420ba51c68591e057696ef43e028f41c6e04cd/packages/babel-types/src/validators/react/isCompatTag.js\n// for why we only test for the first character\nconst COMPAT_TAG_REGEX = /^[a-z]/;\n\n/**\n * Checks if a node represents a DOM element according to React.\n * @param {object} node - JSXOpeningElement to check.\n * @returns {boolean} Whether or not the node corresponds to a DOM element.\n */\nfunction isDOMComponent(node) {\n  const name = elementType(node);\n  return COMPAT_TAG_REGEX.test(name);\n}\n\n/**\n * Test whether a JSXElement is a fragment\n * @param {JSXElement} node\n * @param {string} reactPragma\n * @param {string} fragmentPragma\n * @returns {boolean}\n */\nfunction isFragment(node, reactPragma, fragmentPragma) {\n  const name = node.openingElement.name;\n\n  // <Fragment>\n  if (name.type === 'JSXIdentifier' && name.name === fragmentPragma) {\n    return true;\n  }\n\n  // <React.Fragment>\n  if (\n    name.type === 'JSXMemberExpression'\n    && name.object.type === 'JSXIdentifier'\n    && name.object.name === reactPragma\n    && name.property.type === 'JSXIdentifier'\n    && name.property.name === fragmentPragma\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Checks if a node represents a JSX element or fragment.\n * @param {object} node - node to check.\n * @returns {boolean} Whether or not the node if a JSX element or fragment.\n */\nfunction isJSX(node) {\n  return node && ['JSXElement', 'JSXFragment'].indexOf(node.type) >= 0;\n}\n\n/**\n * Check if node is like `key={...}` as in `<Foo key={...} />`\n * @param {ASTNode} node\n * @returns {boolean}\n */\nfunction isJSXAttributeKey(node) {\n  return node.type === 'JSXAttribute'\n    && node.name\n    && node.name.type === 'JSXIdentifier'\n    && node.name.name === 'key';\n}\n\n/**\n * Check if value has only whitespaces\n * @param {unknown} value\n * @returns {boolean}\n */\nfunction isWhiteSpaces(value) {\n  return typeof value === 'string' ? /^\\s*$/.test(value) : false;\n}\n\n/**\n * Check if the node is returning JSX or null\n *\n * @param {Context} context The context of `ASTNode`.\n * @param {ASTNode} ASTnode The AST node being checked\n * @param {boolean} [strict] If true, in a ternary condition the node must return JSX in both cases\n * @param {boolean} [ignoreNull] If true, null return values will be ignored\n * @returns {boolean} True if the node is returning JSX or null, false if not\n */\nfunction isReturningJSX(context, ASTnode, strict, ignoreNull) {\n  const isJSXValue = (node) => {\n    if (!node) {\n      return false;\n    }\n    switch (node.type) {\n      case 'ConditionalExpression':\n        if (strict) {\n          return isJSXValue(node.consequent) && isJSXValue(node.alternate);\n        }\n        return isJSXValue(node.consequent) || isJSXValue(node.alternate);\n      case 'LogicalExpression':\n        if (strict) {\n          return isJSXValue(node.left) && isJSXValue(node.right);\n        }\n        return isJSXValue(node.left) || isJSXValue(node.right);\n      case 'SequenceExpression':\n        return isJSXValue(node.expressions[node.expressions.length - 1]);\n      case 'JSXElement':\n      case 'JSXFragment':\n        return true;\n      case 'CallExpression':\n        return isCreateElement(context, node);\n      case 'Literal':\n        if (!ignoreNull && node.value === null) {\n          return true;\n        }\n        return false;\n      case 'Identifier': {\n        const variable = variableUtil.findVariableByName(context, node, node.name);\n        return isJSX(variable);\n      }\n      default:\n        return false;\n    }\n  };\n\n  let found = false;\n  astUtil.traverseReturns(ASTnode, context, (node, breakTraverse) => {\n    if (isJSXValue(node)) {\n      found = true;\n      breakTraverse();\n    }\n  });\n\n  return found;\n}\n\n/**\n * Check if the node is returning only null values\n *\n * @param {ASTNode} ASTnode The AST node being checked\n * @param {Context} context The context of `ASTNode`.\n * @returns {boolean} True if the node is returning only null values\n */\nfunction isReturningOnlyNull(ASTnode, context) {\n  let found = false;\n  let foundSomethingElse = false;\n  astUtil.traverseReturns(ASTnode, context, (node) => {\n    // Traverse return statement\n    astUtil.traverse(node, {\n      enter(childNode) {\n        const setFound = () => {\n          found = true;\n          this.skip();\n        };\n        const setFoundSomethingElse = () => {\n          foundSomethingElse = true;\n          this.skip();\n        };\n        switch (childNode.type) {\n          case 'ReturnStatement':\n            break;\n          case 'ConditionalExpression':\n            if (childNode.consequent.value === null && childNode.alternate.value === null) {\n              setFound();\n            }\n            break;\n          case 'Literal':\n            if (childNode.value === null) {\n              setFound();\n            }\n            break;\n          default:\n            setFoundSomethingElse();\n        }\n      },\n    });\n  });\n\n  return found && !foundSomethingElse;\n}\n\nmodule.exports = {\n  isDOMComponent,\n  isFragment,\n  isJSX,\n  isJSXAttributeKey,\n  isWhiteSpaces,\n  isReturningJSX,\n  isReturningOnlyNull,\n};\n", "/**\n * @fileoverview Common used propTypes detection functionality.\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst astUtil = require('./ast');\nconst componentUtil = require('./componentUtil');\nconst testReactVersion = require('./version').testReactVersion;\nconst ast = require('./ast');\nconst eslintUtil = require('./eslint');\n\nconst getScope = eslintUtil.getScope;\nconst getSourceCode = eslintUtil.getSourceCode;\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst LIFE_CYCLE_METHODS = ['componentWillReceiveProps', 'shouldComponentUpdate', 'componentWillUpdate', 'componentDidUpdate'];\nconst ASYNC_SAFE_LIFE_CYCLE_METHODS = ['getDerivedStateFromProps', 'getSnapshotBeforeUpdate', 'UNSAFE_componentWillReceiveProps', 'UNSAFE_componentWillUpdate'];\n\nfunction createPropVariables() {\n  /** @type {Map<string, string[]>} Maps the variable to its definition. `props.a.b` is stored as `['a', 'b']` */\n  let propVariables = new Map();\n  let hasBeenWritten = false;\n  const stack = [{ propVariables, hasBeenWritten }];\n  return {\n    pushScope() {\n      // popVariables is not copied until first write.\n      stack.push({ propVariables, hasBeenWritten: false });\n    },\n    popScope() {\n      stack.pop();\n      propVariables = stack[stack.length - 1].propVariables;\n      hasBeenWritten = stack[stack.length - 1].hasBeenWritten;\n    },\n    /**\n     * Add a variable name to the current scope\n     * @param {string} name\n     * @param {string[]} allNames Example: `props.a.b` should be formatted as `['a', 'b']`\n     * @returns {Map<string, string[]>}\n     */\n    set(name, allNames) {\n      if (!hasBeenWritten) {\n        // copy on write\n        propVariables = new Map(propVariables);\n        Object.assign(stack[stack.length - 1], { propVariables, hasBeenWritten: true });\n        stack[stack.length - 1].hasBeenWritten = true;\n      }\n      return propVariables.set(name, allNames);\n    },\n    /**\n     * Get the definition of a variable.\n     * @param {string} name\n     * @returns {string[]} Example: `props.a.b` is represented by `['a', 'b']`\n     */\n    get(name) {\n      return propVariables.get(name);\n    },\n  };\n}\n\n/**\n * Checks if the string is one of `props`, `nextProps`, or `prevProps`\n * @param {string} name The AST node being checked.\n * @returns {boolean} True if the prop name matches\n */\nfunction isCommonVariableNameForProps(name) {\n  return name === 'props' || name === 'nextProps' || name === 'prevProps';\n}\n\n/**\n * Checks if the component must be validated\n * @param {Object} component The component to process\n * @returns {boolean} True if the component must be validated, false if not.\n */\nfunction mustBeValidated(component) {\n  return !!(component && !component.ignorePropsValidation);\n}\n\n/**\n * Check if we are in a lifecycle method\n * @param {object} context\n * @param {ASTNode} node The AST node being checked.\n * @param {boolean} checkAsyncSafeLifeCycles\n * @return {boolean} true if we are in a class constructor, false if not\n */\nfunction inLifeCycleMethod(context, node, checkAsyncSafeLifeCycles) {\n  let scope = getScope(context, node);\n  while (scope) {\n    if (scope.block && scope.block.parent && scope.block.parent.key) {\n      const name = scope.block.parent.key.name;\n\n      if (LIFE_CYCLE_METHODS.indexOf(name) >= 0) {\n        return true;\n      }\n      if (checkAsyncSafeLifeCycles && ASYNC_SAFE_LIFE_CYCLE_METHODS.indexOf(name) >= 0) {\n        return true;\n      }\n    }\n    scope = scope.upper;\n  }\n  return false;\n}\n\n/**\n * Returns true if the given node is a React Component lifecycle method\n * @param {ASTNode} node The AST node being checked.\n * @param {boolean} checkAsyncSafeLifeCycles\n * @return {boolean} True if the node is a lifecycle method\n */\nfunction isNodeALifeCycleMethod(node, checkAsyncSafeLifeCycles) {\n  if (node.key) {\n    if (node.kind === 'constructor') {\n      return true;\n    }\n\n    const nodeKeyName = node.key.name;\n\n    if (typeof nodeKeyName !== 'string') {\n      return false;\n    }\n\n    if (LIFE_CYCLE_METHODS.indexOf(nodeKeyName) >= 0) {\n      return true;\n    }\n    if (checkAsyncSafeLifeCycles && ASYNC_SAFE_LIFE_CYCLE_METHODS.indexOf(nodeKeyName) >= 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the given node is inside a React Component lifecycle\n * method.\n * @param {ASTNode} node The AST node being checked.\n * @param {boolean} checkAsyncSafeLifeCycles\n * @return {boolean} True if the node is inside a lifecycle method\n */\nfunction isInLifeCycleMethod(node, checkAsyncSafeLifeCycles) {\n  if (\n    (node.type === 'MethodDefinition' || node.type === 'Property')\n    && isNodeALifeCycleMethod(node, checkAsyncSafeLifeCycles)\n  ) {\n    return true;\n  }\n\n  if (node.parent) {\n    return isInLifeCycleMethod(node.parent, checkAsyncSafeLifeCycles);\n  }\n\n  return false;\n}\n\n/**\n * Check if a function node is a setState updater\n * @param {ASTNode} node a function node\n * @return {boolean}\n */\nfunction isSetStateUpdater(node) {\n  const unwrappedParentCalleeNode = astUtil.isCallExpression(node.parent)\n    && ast.unwrapTSAsExpression(node.parent.callee);\n\n  return unwrappedParentCalleeNode\n    && unwrappedParentCalleeNode.property\n    && unwrappedParentCalleeNode.property.name === 'setState'\n    // Make sure we are in the updater not the callback\n    && node.parent.arguments[0] === node;\n}\n\nfunction isPropArgumentInSetStateUpdater(context, node, name) {\n  if (typeof name !== 'string') {\n    return;\n  }\n  let scope = getScope(context, node);\n  while (scope) {\n    const unwrappedParentCalleeNode = scope.block\n      && astUtil.isCallExpression(scope.block.parent)\n      && ast.unwrapTSAsExpression(scope.block.parent.callee);\n    if (\n      unwrappedParentCalleeNode\n      && unwrappedParentCalleeNode.property\n      && unwrappedParentCalleeNode.property.name === 'setState'\n      // Make sure we are in the updater not the callback\n      && scope.block.parent.arguments[0].range[0] === scope.block.range[0]\n      && scope.block.parent.arguments[0].params\n      && scope.block.parent.arguments[0].params.length > 1\n    ) {\n      return scope.block.parent.arguments[0].params[1].name === name;\n    }\n    scope = scope.upper;\n  }\n  return false;\n}\n\n/**\n * @param {Context} context\n * @param {ASTNode} node\n * @returns {boolean}\n */\nfunction isInClassComponent(context, node) {\n  return !!(componentUtil.getParentES6Component(context, node) || componentUtil.getParentES5Component(context, node));\n}\n\n/**\n * Checks if the node is `this.props`\n * @param {ASTNode|undefined} node\n * @returns {boolean}\n */\nfunction isThisDotProps(node) {\n  return !!node\n    && node.type === 'MemberExpression'\n    && ast.unwrapTSAsExpression(node.object).type === 'ThisExpression'\n    && node.property.name === 'props';\n}\n\n/**\n * Checks if the prop has spread operator.\n * @param {object} context\n * @param {ASTNode} node The AST node being marked.\n * @returns {boolean} True if the prop has spread operator, false if not.\n */\nfunction hasSpreadOperator(context, node) {\n  const tokens = getSourceCode(context).getTokens(node);\n  return tokens.length && tokens[0].value === '...';\n}\n\n/**\n * Checks if the node is a propTypes usage of the form `this.props.*`, `props.*`, `prevProps.*`, or `nextProps.*`.\n * @param {Context} context\n * @param {ASTNode} node\n * @param {Object} utils\n * @param {boolean} checkAsyncSafeLifeCycles\n * @returns {boolean}\n */\nfunction isPropTypesUsageByMemberExpression(context, node, utils, checkAsyncSafeLifeCycles) {\n  const unwrappedObjectNode = ast.unwrapTSAsExpression(node.object);\n\n  if (isInClassComponent(context, node)) {\n    // this.props.*\n    if (isThisDotProps(unwrappedObjectNode)) {\n      return true;\n    }\n    // props.* or prevProps.* or nextProps.*\n    if (\n      isCommonVariableNameForProps(unwrappedObjectNode.name)\n      && (inLifeCycleMethod(context, node, checkAsyncSafeLifeCycles) || astUtil.inConstructor(context, node))\n    ) {\n      return true;\n    }\n    // this.setState((_, props) => props.*))\n    if (isPropArgumentInSetStateUpdater(context, node, unwrappedObjectNode.name)) {\n      return true;\n    }\n    return false;\n  }\n  // props.* in function component\n  return unwrappedObjectNode.name === 'props' && !ast.isAssignmentLHS(node);\n}\n\n/**\n * Retrieve the name of a property node\n * @param {Context} context\n * @param {ASTNode} node The AST node with the property.\n * @param {Object} utils\n * @param {boolean} checkAsyncSafeLifeCycles\n * @return {string|undefined} the name of the property or undefined if not found\n */\nfunction getPropertyName(context, node, utils, checkAsyncSafeLifeCycles) {\n  const property = node.property;\n  if (property) {\n    switch (property.type) {\n      case 'Identifier':\n        if (node.computed) {\n          return '__COMPUTED_PROP__';\n        }\n        return property.name;\n      case 'MemberExpression':\n        return;\n      case 'Literal':\n        // Accept computed properties that are literal strings\n        if (typeof property.value === 'string') {\n          return property.value;\n        }\n        // Accept number as well but only accept props[123]\n        if (typeof property.value === 'number') {\n          if (isPropTypesUsageByMemberExpression(context, node, utils, checkAsyncSafeLifeCycles)) {\n            return property.raw;\n          }\n        }\n        // falls through\n      default:\n        if (node.computed) {\n          return '__COMPUTED_PROP__';\n        }\n        break;\n    }\n  }\n}\n\nmodule.exports = function usedPropTypesInstructions(context, components, utils) {\n  const checkAsyncSafeLifeCycles = testReactVersion(context, '>= 16.3.0');\n\n  const propVariables = createPropVariables();\n  const pushScope = propVariables.pushScope;\n  const popScope = propVariables.popScope;\n\n  /**\n   * Mark a prop type as used\n   * @param {ASTNode} node The AST node being marked.\n   * @param {string[]} [parentNames]\n   */\n  function markPropTypesAsUsed(node, parentNames) {\n    parentNames = parentNames || [];\n    let type;\n    let name;\n    let allNames;\n    let properties;\n    switch (node.type) {\n      case 'OptionalMemberExpression':\n      case 'MemberExpression':\n        name = getPropertyName(context, node, utils, checkAsyncSafeLifeCycles);\n        if (name) {\n          allNames = parentNames.concat(name);\n          if (\n            // Match props.foo.bar, don't match bar[props.foo]\n            node.parent.type === 'MemberExpression'\n            && node.parent.object === node\n          ) {\n            markPropTypesAsUsed(node.parent, allNames);\n          }\n          // Handle the destructuring part of `const {foo} = props.a.b`\n          if (\n            node.parent.type === 'VariableDeclarator'\n            && node.parent.id.type === 'ObjectPattern'\n          ) {\n            node.parent.id.parent = node.parent; // patch for bug in eslint@4 in which ObjectPattern has no parent\n            markPropTypesAsUsed(node.parent.id, allNames);\n          }\n\n          // const a = props.a\n          if (\n            node.parent.type === 'VariableDeclarator'\n            && node.parent.id.type === 'Identifier'\n          ) {\n            propVariables.set(node.parent.id.name, allNames);\n          }\n          // Do not mark computed props as used.\n          type = name !== '__COMPUTED_PROP__' ? 'direct' : null;\n        }\n        break;\n      case 'ArrowFunctionExpression':\n      case 'FunctionDeclaration':\n      case 'FunctionExpression': {\n        if (node.params.length === 0) {\n          break;\n        }\n        type = 'destructuring';\n        const propParam = isSetStateUpdater(node) ? node.params[1] : node.params[0];\n        properties = propParam.type === 'AssignmentPattern'\n          ? propParam.left.properties\n          : propParam.properties;\n        break;\n      }\n      case 'ObjectPattern':\n        type = 'destructuring';\n        properties = node.properties;\n        break;\n      case 'TSEmptyBodyFunctionExpression':\n        break;\n      default:\n        throw new Error(`${node.type} ASTNodes are not handled by markPropTypesAsUsed`);\n    }\n\n    const component = components.get(utils.getParentComponent(node));\n    const usedPropTypes = (component && component.usedPropTypes) || [];\n    let ignoreUnusedPropTypesValidation = (component && component.ignoreUnusedPropTypesValidation) || false;\n\n    switch (type) {\n      case 'direct': {\n        // Ignore Object methods\n        if (name in Object.prototype) {\n          break;\n        }\n\n        const reportedNode = node.property;\n        usedPropTypes.push({\n          name,\n          allNames,\n          node: reportedNode,\n        });\n        break;\n      }\n      case 'destructuring': {\n        for (let k = 0, l = (properties || []).length; k < l; k++) {\n          if (hasSpreadOperator(context, properties[k]) || properties[k].computed) {\n            ignoreUnusedPropTypesValidation = true;\n            break;\n          }\n          const propName = ast.getKeyValue(context, properties[k]);\n\n          if (!propName || properties[k].type !== 'Property') {\n            break;\n          }\n\n          usedPropTypes.push({\n            allNames: parentNames.concat([propName]),\n            name: propName,\n            node: properties[k],\n          });\n\n          if (properties[k].value.type === 'ObjectPattern') {\n            markPropTypesAsUsed(properties[k].value, parentNames.concat([propName]));\n          } else if (properties[k].value.type === 'Identifier') {\n            propVariables.set(properties[k].value.name, parentNames.concat(propName));\n          }\n        }\n        break;\n      }\n      default:\n        break;\n    }\n\n    components.set(component ? component.node : node, {\n      usedPropTypes,\n      ignoreUnusedPropTypesValidation,\n    });\n  }\n\n  /**\n   * @param {ASTNode} node We expect either an ArrowFunctionExpression,\n   *   FunctionDeclaration, or FunctionExpression\n   */\n  function markDestructuredFunctionArgumentsAsUsed(node) {\n    const param = node.params && isSetStateUpdater(node) ? node.params[1] : node.params[0];\n\n    const destructuring = param && (\n      param.type === 'ObjectPattern'\n      || ((param.type === 'AssignmentPattern') && (param.left.type === 'ObjectPattern'))\n    );\n\n    if (destructuring && (components.get(node) || components.get(node.parent))) {\n      markPropTypesAsUsed(node);\n    }\n  }\n\n  function handleSetStateUpdater(node) {\n    if (!node.params || node.params.length < 2 || !isSetStateUpdater(node)) {\n      return;\n    }\n    markPropTypesAsUsed(node);\n  }\n\n  /**\n   * Handle both stateless functions and setState updater functions.\n   * @param {ASTNode} node We expect either an ArrowFunctionExpression,\n   *   FunctionDeclaration, or FunctionExpression\n   */\n  function handleFunctionLikeExpressions(node) {\n    pushScope();\n    handleSetStateUpdater(node);\n    markDestructuredFunctionArgumentsAsUsed(node);\n  }\n\n  function handleCustomValidators(component) {\n    const propTypes = component.declaredPropTypes;\n    if (!propTypes) {\n      return;\n    }\n\n    Object.keys(propTypes).forEach((key) => {\n      const node = propTypes[key].node;\n\n      if (node && node.value && astUtil.isFunctionLikeExpression(node.value)) {\n        markPropTypesAsUsed(node.value);\n      }\n    });\n  }\n\n  return {\n    VariableDeclarator(node) {\n      const unwrappedInitNode = ast.unwrapTSAsExpression(node.init);\n\n      // let props = this.props\n      if (isThisDotProps(unwrappedInitNode) && isInClassComponent(context, node) && node.id.type === 'Identifier') {\n        propVariables.set(node.id.name, []);\n      }\n\n      // Only handles destructuring\n      if (node.id.type !== 'ObjectPattern' || !unwrappedInitNode) {\n        return;\n      }\n\n      // let {props: {firstname}} = this\n      const propsProperty = node.id.properties.find((property) => (\n        property.key\n        && (property.key.name === 'props' || property.key.value === 'props')\n      ));\n\n      if (unwrappedInitNode.type === 'ThisExpression' && propsProperty && propsProperty.value.type === 'ObjectPattern') {\n        markPropTypesAsUsed(propsProperty.value);\n        return;\n      }\n\n      // let {props} = this\n      if (unwrappedInitNode.type === 'ThisExpression' && propsProperty && propsProperty.value.name === 'props') {\n        propVariables.set('props', []);\n        return;\n      }\n\n      // let {firstname} = props\n      if (\n        isCommonVariableNameForProps(unwrappedInitNode.name)\n        && (utils.getParentStatelessComponent(node) || isInLifeCycleMethod(node, checkAsyncSafeLifeCycles))\n      ) {\n        markPropTypesAsUsed(node.id);\n        return;\n      }\n\n      // let {firstname} = this.props\n      if (isThisDotProps(unwrappedInitNode) && isInClassComponent(context, node)) {\n        markPropTypesAsUsed(node.id);\n        return;\n      }\n\n      // let {firstname} = thing, where thing is defined by const thing = this.props.**.*\n      if (propVariables.get(unwrappedInitNode.name)) {\n        markPropTypesAsUsed(node.id, propVariables.get(unwrappedInitNode.name));\n      }\n    },\n\n    FunctionDeclaration: handleFunctionLikeExpressions,\n\n    ArrowFunctionExpression: handleFunctionLikeExpressions,\n\n    FunctionExpression: handleFunctionLikeExpressions,\n\n    'FunctionDeclaration:exit': popScope,\n\n    'ArrowFunctionExpression:exit': popScope,\n\n    'FunctionExpression:exit': popScope,\n\n    JSXSpreadAttribute(node) {\n      const component = components.get(utils.getParentComponent(node));\n      components.set(component ? component.node : node, {\n        ignoreUnusedPropTypesValidation: node.argument.type !== 'ObjectExpression',\n      });\n    },\n\n    'MemberExpression, OptionalMemberExpression'(node) {\n      if (isPropTypesUsageByMemberExpression(context, node, utils, checkAsyncSafeLifeCycles)) {\n        markPropTypesAsUsed(node);\n        return;\n      }\n\n      const propVariable = propVariables.get(ast.unwrapTSAsExpression(node.object).name);\n      if (propVariable) {\n        markPropTypesAsUsed(node, propVariable);\n      }\n    },\n\n    ObjectPattern(node) {\n      // If the object pattern is a destructured props object in a lifecycle\n      // method -- mark it for used props.\n      if (isNodeALifeCycleMethod(node.parent.parent, checkAsyncSafeLifeCycles) && node.properties.length > 0) {\n        markPropTypesAsUsed(node.parent);\n      }\n    },\n\n    'Program:exit'() {\n      values(components.list())\n        .filter((component) => mustBeValidated(component))\n        .forEach((component) => {\n          handleCustomValidators(component);\n        });\n    },\n  };\n};\n", "/**\n * @fileoverview Common defaultProps detection functionality.\n */\n\n'use strict';\n\nconst fromEntries = require('object.fromentries');\nconst astUtil = require('./ast');\nconst componentUtil = require('./componentUtil');\nconst propsUtil = require('./props');\nconst variableUtil = require('./variable');\nconst propWrapperUtil = require('./propWrapper');\nconst getText = require('./eslint').getText;\n\nconst QUOTES_REGEX = /^[\"']|[\"']$/g;\n\nmodule.exports = function defaultPropsInstructions(context, components, utils) {\n  /**\n   * Try to resolve the node passed in to a variable in the current scope. If the node passed in is not\n   * an Identifier, then the node is simply returned.\n   * @param   {ASTNode} node The node to resolve.\n   * @returns {ASTNode|null} Return null if the value could not be resolved, ASTNode otherwise.\n   */\n  function resolveNodeValue(node) {\n    if (node.type === 'Identifier') {\n      return variableUtil.findVariableByName(context, node, node.name);\n    }\n    if (\n      astUtil.isCallExpression(node)\n      && propWrapperUtil.isPropWrapperFunction(context, node.callee.name)\n      && node.arguments && node.arguments[0]\n    ) {\n      return resolveNodeValue(node.arguments[0]);\n    }\n    return node;\n  }\n\n  /**\n   * Extracts a DefaultProp from an ObjectExpression node.\n   * @param   {ASTNode} objectExpression ObjectExpression node.\n   * @returns {Object|string}            Object representation of a defaultProp, to be consumed by\n   *                                     `addDefaultPropsToComponent`, or string \"unresolved\", if the defaultProps\n   *                                     from this ObjectExpression can't be resolved.\n   */\n  function getDefaultPropsFromObjectExpression(objectExpression) {\n    const hasSpread = objectExpression.properties.find((property) => property.type === 'ExperimentalSpreadProperty' || property.type === 'SpreadElement');\n\n    if (hasSpread) {\n      return 'unresolved';\n    }\n\n    return objectExpression.properties.map((defaultProp) => ({\n      name: getText(context, defaultProp.key).replace(QUOTES_REGEX, ''),\n      node: defaultProp,\n    }));\n  }\n\n  /**\n   * Marks a component's DefaultProps declaration as \"unresolved\". A component's DefaultProps is\n   * marked as \"unresolved\" if we cannot safely infer the values of its defaultProps declarations\n   * without risking false negatives.\n   * @param   {Object} component The component to mark.\n   * @returns {void}\n   */\n  function markDefaultPropsAsUnresolved(component) {\n    components.set(component.node, {\n      defaultProps: 'unresolved',\n    });\n  }\n\n  /**\n   * Adds defaultProps to the component passed in.\n   * @param   {ASTNode}         component    The component to add the defaultProps to.\n   * @param   {Object[]|'unresolved'} defaultProps defaultProps to add to the component or the string \"unresolved\"\n   *                                         if this component has defaultProps that can't be resolved.\n   * @returns {void}\n   */\n  function addDefaultPropsToComponent(component, defaultProps) {\n    // Early return if this component's defaultProps is already marked as \"unresolved\".\n    if (component.defaultProps === 'unresolved') {\n      return;\n    }\n\n    if (defaultProps === 'unresolved') {\n      markDefaultPropsAsUnresolved(component);\n      return;\n    }\n\n    const defaults = component.defaultProps || {};\n    const newDefaultProps = Object.assign(\n      {},\n      defaults,\n      fromEntries(defaultProps.map((prop) => [prop.name, prop]))\n    );\n\n    components.set(component.node, {\n      defaultProps: newDefaultProps,\n    });\n  }\n\n  return {\n    MemberExpression(node) {\n      const isDefaultProp = propsUtil.isDefaultPropsDeclaration(node);\n\n      if (!isDefaultProp) {\n        return;\n      }\n\n      // find component this defaultProps belongs to\n      const component = utils.getRelatedComponent(node);\n      if (!component) {\n        return;\n      }\n\n      // e.g.:\n      // MyComponent.propTypes = {\n      //   foo: React.PropTypes.string.isRequired,\n      //   bar: React.PropTypes.string\n      // };\n      //\n      // or:\n      //\n      // MyComponent.propTypes = myPropTypes;\n      if (node.parent.type === 'AssignmentExpression') {\n        const expression = resolveNodeValue(node.parent.right);\n        if (!expression || expression.type !== 'ObjectExpression') {\n          // If a value can't be found, we mark the defaultProps declaration as \"unresolved\", because\n          // we should ignore this component and not report any errors for it, to avoid false-positives\n          // with e.g. external defaultProps declarations.\n          if (isDefaultProp) {\n            markDefaultPropsAsUnresolved(component);\n          }\n\n          return;\n        }\n\n        addDefaultPropsToComponent(component, getDefaultPropsFromObjectExpression(expression));\n\n        return;\n      }\n\n      // e.g.:\n      // MyComponent.propTypes.baz = React.PropTypes.string;\n      if (node.parent.type === 'MemberExpression' && node.parent.parent\n        && node.parent.parent.type === 'AssignmentExpression') {\n        addDefaultPropsToComponent(component, [{\n          name: node.parent.property.name,\n          node: node.parent.parent,\n        }]);\n      }\n    },\n\n    // e.g.:\n    // class Hello extends React.Component {\n    //   static get defaultProps() {\n    //     return {\n    //       name: 'Dean'\n    //     };\n    //   }\n    //   render() {\n    //     return <div>Hello {this.props.name}</div>;\n    //   }\n    // }\n    MethodDefinition(node) {\n      if (!node.static || node.kind !== 'get') {\n        return;\n      }\n\n      if (!propsUtil.isDefaultPropsDeclaration(node)) {\n        return;\n      }\n\n      // find component this propTypes/defaultProps belongs to\n      const component = components.get(componentUtil.getParentES6Component(context, node));\n      if (!component) {\n        return;\n      }\n\n      const returnStatement = utils.findReturnStatement(node);\n      if (!returnStatement) {\n        return;\n      }\n\n      const expression = resolveNodeValue(returnStatement.argument);\n      if (!expression || expression.type !== 'ObjectExpression') {\n        return;\n      }\n\n      addDefaultPropsToComponent(component, getDefaultPropsFromObjectExpression(expression));\n    },\n\n    // e.g.:\n    // class Greeting extends React.Component {\n    //   render() {\n    //     return (\n    //       <h1>Hello, {this.props.foo} {this.props.bar}</h1>\n    //     );\n    //   }\n    //   static defaultProps = {\n    //     foo: 'bar',\n    //     bar: 'baz'\n    //   };\n    // }\n    'ClassProperty, PropertyDefinition'(node) {\n      if (!(node.static && node.value)) {\n        return;\n      }\n\n      const propName = astUtil.getPropertyName(node);\n      const isDefaultProp = propName === 'defaultProps' || propName === 'getDefaultProps';\n\n      if (!isDefaultProp) {\n        return;\n      }\n\n      // find component this propTypes/defaultProps belongs to\n      const component = components.get(componentUtil.getParentES6Component(context, node));\n      if (!component) {\n        return;\n      }\n\n      const expression = resolveNodeValue(node.value);\n      if (!expression || expression.type !== 'ObjectExpression') {\n        return;\n      }\n\n      addDefaultPropsToComponent(component, getDefaultPropsFromObjectExpression(expression));\n    },\n\n    // e.g.:\n    // React.createClass({\n    //   render: function() {\n    //     return <div>{this.props.foo}</div>;\n    //   },\n    //   getDefaultProps: function() {\n    //     return {\n    //       foo: 'default'\n    //     };\n    //   }\n    // });\n    ObjectExpression(node) {\n      // find component this propTypes/defaultProps belongs to\n      const component = componentUtil.isES5Component(node, context) && components.get(node);\n      if (!component) {\n        return;\n      }\n\n      // Search for the proptypes declaration\n      node.properties.forEach((property) => {\n        if (property.type === 'ExperimentalSpreadProperty' || property.type === 'SpreadElement') {\n          return;\n        }\n\n        const isDefaultProp = propsUtil.isDefaultPropsDeclaration(property);\n\n        if (isDefaultProp && property.value.type === 'FunctionExpression') {\n          const returnStatement = utils.findReturnStatement(property);\n          if (!returnStatement || returnStatement.argument.type !== 'ObjectExpression') {\n            return;\n          }\n\n          addDefaultPropsToComponent(component, getDefaultPropsFromObjectExpression(returnStatement.argument));\n        }\n      });\n    },\n  };\n};\n", "/**\n * @fileoverview Utility class and functions for React components detection\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst arrayIncludes = require('array-includes');\nconst fromEntries = require('object.fromentries');\nconst values = require('object.values');\nconst iterFrom = require('es-iterator-helpers/Iterator.from');\nconst map = require('es-iterator-helpers/Iterator.prototype.map');\n\nconst variableUtil = require('./variable');\nconst pragmaUtil = require('./pragma');\nconst astUtil = require('./ast');\nconst componentUtil = require('./componentUtil');\nconst propTypesUtil = require('./propTypes');\nconst jsxUtil = require('./jsx');\nconst usedPropTypesUtil = require('./usedPropTypes');\nconst defaultPropsUtil = require('./defaultProps');\nconst isFirstLetterCapitalized = require('./isFirstLetterCapitalized');\nconst isDestructuredFromPragmaImport = require('./isDestructuredFromPragmaImport');\nconst eslintUtil = require('./eslint');\n\nconst getScope = eslintUtil.getScope;\nconst getText = eslintUtil.getText;\n\nfunction getId(node) {\n  return node ? `${node.range[0]}:${node.range[1]}` : '';\n}\n\nfunction usedPropTypesAreEquivalent(propA, propB) {\n  if (propA.name === propB.name) {\n    if (!propA.allNames && !propB.allNames) {\n      return true;\n    }\n    if (Array.isArray(propA.allNames) && Array.isArray(propB.allNames) && propA.allNames.join('') === propB.allNames.join('')) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n}\n\nfunction mergeUsedPropTypes(propsList, newPropsList) {\n  const propsToAdd = newPropsList.filter((newProp) => {\n    const newPropIsAlreadyInTheList = propsList.some((prop) => usedPropTypesAreEquivalent(prop, newProp));\n    return !newPropIsAlreadyInTheList;\n  });\n\n  return propsList.concat(propsToAdd);\n}\n\nconst USE_HOOK_PREFIX_REGEX = /^use[A-Z]/;\n\nconst Lists = new WeakMap();\nconst ReactImports = new WeakMap();\n\n/**\n * Components\n */\nclass Components {\n  constructor() {\n    Lists.set(this, {});\n    ReactImports.set(this, {});\n  }\n\n  /**\n   * Add a node to the components list, or update it if it's already in the list\n   *\n   * @param {ASTNode} node The AST node being added.\n   * @param {number} confidence Confidence in the component detection (0=banned, 1=maybe, 2=yes)\n   * @returns {Object} Added component object\n   */\n  add(node, confidence) {\n    const id = getId(node);\n    const list = Lists.get(this);\n    if (list[id]) {\n      if (confidence === 0 || list[id].confidence === 0) {\n        list[id].confidence = 0;\n      } else {\n        list[id].confidence = Math.max(list[id].confidence, confidence);\n      }\n      return list[id];\n    }\n    list[id] = {\n      node,\n      confidence,\n    };\n    return list[id];\n  }\n\n  /**\n   * Find a component in the list using its node\n   *\n   * @param {ASTNode} node The AST node being searched.\n   * @returns {Object} Component object, undefined if the component is not found or has confidence value of 0.\n   */\n  get(node) {\n    const id = getId(node);\n    const item = Lists.get(this)[id];\n    if (item && item.confidence >= 1) {\n      return item;\n    }\n    return null;\n  }\n\n  /**\n   * Update a component in the list\n   *\n   * @param {ASTNode} node The AST node being updated.\n   * @param {Object} props Additional properties to add to the component.\n   */\n  set(node, props) {\n    const list = Lists.get(this);\n    let component = list[getId(node)];\n    while (!component || component.confidence < 1) {\n      node = node.parent;\n      if (!node) {\n        return;\n      }\n      component = list[getId(node)];\n    }\n\n    Object.assign(\n      component,\n      props,\n      {\n        usedPropTypes: mergeUsedPropTypes(\n          component.usedPropTypes || [],\n          props.usedPropTypes || []\n        ),\n      }\n    );\n  }\n\n  /**\n   * Return the components list\n   * Components for which we are not confident are not returned\n   *\n   * @returns {Object} Components list\n   */\n  list() {\n    const thisList = Lists.get(this);\n    const list = {};\n    const usedPropTypes = {};\n\n    // Find props used in components for which we are not confident\n    Object.keys(thisList).filter((i) => thisList[i].confidence < 2).forEach((i) => {\n      let component = null;\n      let node = null;\n      node = thisList[i].node;\n      while (!component && node.parent) {\n        node = node.parent;\n        // Stop moving up if we reach a decorator\n        if (node.type === 'Decorator') {\n          break;\n        }\n        component = this.get(node);\n      }\n      if (component) {\n        const newUsedProps = (thisList[i].usedPropTypes || []).filter((propType) => !propType.node || propType.node.kind !== 'init');\n\n        const componentId = getId(component.node);\n\n        usedPropTypes[componentId] = mergeUsedPropTypes(usedPropTypes[componentId] || [], newUsedProps);\n      }\n    });\n\n    // Assign used props in not confident components to the parent component\n    Object.keys(thisList).filter((j) => thisList[j].confidence >= 2).forEach((j) => {\n      const id = getId(thisList[j].node);\n      list[j] = thisList[j];\n      if (usedPropTypes[id]) {\n        list[j].usedPropTypes = mergeUsedPropTypes(list[j].usedPropTypes || [], usedPropTypes[id]);\n      }\n    });\n    return list;\n  }\n\n  /**\n   * Return the length of the components list\n   * Components for which we are not confident are not counted\n   *\n   * @returns {number} Components list length\n   */\n  length() {\n    const list = Lists.get(this);\n    return values(list).filter((component) => component.confidence >= 2).length;\n  }\n\n  /**\n   * Return the node naming the default React import\n   * It can be used to determine the local name of import, even if it's imported\n   * with an unusual name.\n   *\n   * @returns {ASTNode} React default import node\n   */\n  getDefaultReactImports() {\n    return ReactImports.get(this).defaultReactImports;\n  }\n\n  /**\n   * Return the nodes of all React named imports\n   *\n   * @returns {Object} The list of React named imports\n   */\n  getNamedReactImports() {\n    return ReactImports.get(this).namedReactImports;\n  }\n\n  /**\n   * Add the default React import specifier to the scope\n   *\n   * @param {ASTNode} specifier The AST Node of the default React import\n   * @returns {void}\n   */\n  addDefaultReactImport(specifier) {\n    const info = ReactImports.get(this);\n    ReactImports.set(this, Object.assign({}, info, {\n      defaultReactImports: (info.defaultReactImports || []).concat(specifier),\n    }));\n  }\n\n  /**\n   * Add a named React import specifier to the scope\n   *\n   * @param {ASTNode} specifier The AST Node of a named React import\n   * @returns {void}\n   */\n  addNamedReactImport(specifier) {\n    const info = ReactImports.get(this);\n    ReactImports.set(this, Object.assign({}, info, {\n      namedReactImports: (info.namedReactImports || []).concat(specifier),\n    }));\n  }\n}\n\nfunction getWrapperFunctions(context, pragma) {\n  const componentWrapperFunctions = context.settings.componentWrapperFunctions || [];\n\n  // eslint-disable-next-line arrow-body-style\n  return componentWrapperFunctions.map((wrapperFunction) => {\n    return typeof wrapperFunction === 'string'\n      ? { property: wrapperFunction }\n      : Object.assign({}, wrapperFunction, {\n        object: wrapperFunction.object === '<pragma>' ? pragma : wrapperFunction.object,\n      });\n  }).concat([\n    { property: 'forwardRef', object: pragma },\n    { property: 'memo', object: pragma },\n  ]);\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * Merge many eslint rules into one\n * @param {{[_: string]: Function}[]} rules the returned values for eslint rule.create(context)\n * @returns {{[_: string]: Function}} merged rule\n */\nfunction mergeRules(rules) {\n  /** @type {Map<string, Function[]>} */\n  const handlersByKey = new Map();\n  rules.forEach((rule) => {\n    Object.keys(rule).forEach((key) => {\n      const fns = handlersByKey.get(key);\n      if (!fns) {\n        handlersByKey.set(key, [rule[key]]);\n      } else {\n        fns.push(rule[key]);\n      }\n    });\n  });\n\n  /** @type {{ [key: string]: Function }} */\n  return fromEntries(map(iterFrom(handlersByKey), (entry) => [\n    entry[0],\n    function mergedHandler(node) {\n      entry[1].forEach((fn) => {\n        fn(node);\n      });\n    },\n  ]));\n}\n\nfunction componentRule(rule, context) {\n  const pragma = pragmaUtil.getFromContext(context);\n  const components = new Components();\n  const wrapperFunctions = getWrapperFunctions(context, pragma);\n\n  // Utilities for component detection\n  const utils = {\n    /**\n     * Check if variable is destructured from pragma import\n     *\n     * @param {ASTNode} node The AST node to check\n     * @param {string} variable The variable name to check\n     * @returns {boolean} True if createElement is destructured from the pragma\n     */\n    isDestructuredFromPragmaImport(node, variable) {\n      return isDestructuredFromPragmaImport(context, node, variable);\n    },\n\n    /**\n     * @param {ASTNode} node\n     * @param {boolean=} strict\n     * @returns {boolean}\n     */\n    isReturningJSX(node, strict) {\n      return jsxUtil.isReturningJSX(context, node, strict, true);\n    },\n\n    isReturningJSXOrNull(node, strict) {\n      return jsxUtil.isReturningJSX(context, node, strict);\n    },\n\n    isReturningOnlyNull(node) {\n      return jsxUtil.isReturningOnlyNull(node, context);\n    },\n\n    getPragmaComponentWrapper(node) {\n      let isPragmaComponentWrapper;\n      let currentNode = node;\n      let prevNode;\n      do {\n        currentNode = currentNode.parent;\n        isPragmaComponentWrapper = this.isPragmaComponentWrapper(currentNode);\n        if (isPragmaComponentWrapper) {\n          prevNode = currentNode;\n        }\n      } while (isPragmaComponentWrapper);\n\n      return prevNode;\n    },\n\n    getComponentNameFromJSXElement(node) {\n      if (node.type !== 'JSXElement') {\n        return null;\n      }\n      if (node.openingElement && node.openingElement.name && node.openingElement.name.name) {\n        return node.openingElement.name.name;\n      }\n      return null;\n    },\n\n    /**\n     * Getting the first JSX element's name.\n     * @param {object} node\n     * @returns {string | null}\n     */\n    getNameOfWrappedComponent(node) {\n      if (node.length < 1) {\n        return null;\n      }\n      const body = node[0].body;\n      if (!body) {\n        return null;\n      }\n      if (body.type === 'JSXElement') {\n        return this.getComponentNameFromJSXElement(body);\n      }\n      if (body.type === 'BlockStatement') {\n        const jsxElement = body.body.find((item) => item.type === 'ReturnStatement');\n        return jsxElement\n          && jsxElement.argument\n          && this.getComponentNameFromJSXElement(jsxElement.argument);\n      }\n      return null;\n    },\n\n    /**\n     * Get the list of names of components created till now\n     * @returns {string | boolean}\n     */\n    getDetectedComponents() {\n      const list = components.list();\n      return values(list).filter((val) => {\n        if (val.node.type === 'ClassDeclaration') {\n          return true;\n        }\n        if (\n          val.node.type === 'ArrowFunctionExpression'\n          && val.node.parent\n          && val.node.parent.type === 'VariableDeclarator'\n          && val.node.parent.id\n        ) {\n          return true;\n        }\n        return false;\n      }).map((val) => {\n        if (val.node.type === 'ArrowFunctionExpression') return val.node.parent.id.name;\n        return val.node.id && val.node.id.name;\n      });\n    },\n\n    /**\n     * It will check whether memo/forwardRef is wrapping existing component or\n     * creating a new one.\n     * @param {object} node\n     * @returns {boolean}\n     */\n    nodeWrapsComponent(node) {\n      const childComponent = this.getNameOfWrappedComponent(node.arguments);\n      const componentList = this.getDetectedComponents();\n      return !!childComponent && arrayIncludes(componentList, childComponent);\n    },\n\n    isPragmaComponentWrapper(node) {\n      if (!astUtil.isCallExpression(node)) {\n        return false;\n      }\n\n      return wrapperFunctions.some((wrapperFunction) => {\n        if (node.callee.type === 'MemberExpression') {\n          return wrapperFunction.object\n            && wrapperFunction.object === node.callee.object.name\n            && wrapperFunction.property === node.callee.property.name\n            && !this.nodeWrapsComponent(node);\n        }\n        return wrapperFunction.property === node.callee.name\n          && (!wrapperFunction.object\n            // Functions coming from the current pragma need special handling\n            || (wrapperFunction.object === pragma && this.isDestructuredFromPragmaImport(node, node.callee.name))\n          );\n      });\n    },\n\n    /**\n     * Find a return statement in the current node\n     *\n     * @param {ASTNode} node The AST node being checked\n     */\n    findReturnStatement: astUtil.findReturnStatement,\n\n    /**\n     * Get the parent component node from the current scope\n     * @param {ASTNode} node\n     *\n     * @returns {ASTNode} component node, null if we are not in a component\n     */\n    getParentComponent(node) {\n      return (\n        componentUtil.getParentES6Component(context, node)\n        || componentUtil.getParentES5Component(context, node)\n        || utils.getParentStatelessComponent(node)\n      );\n    },\n\n    /**\n     * @param {ASTNode} node\n     * @returns {boolean}\n     */\n    isInAllowedPositionForComponent(node) {\n      switch (node.parent.type) {\n        case 'VariableDeclarator':\n        case 'AssignmentExpression':\n        case 'Property':\n        case 'ReturnStatement':\n        case 'ExportDefaultDeclaration':\n        case 'ArrowFunctionExpression': {\n          return true;\n        }\n        case 'SequenceExpression': {\n          return utils.isInAllowedPositionForComponent(node.parent)\n            && node === node.parent.expressions[node.parent.expressions.length - 1];\n        }\n        default:\n          return false;\n      }\n    },\n\n    /**\n     * Get node if node is a stateless component, or node.parent in cases like\n     * `React.memo` or `React.forwardRef`. Otherwise returns `undefined`.\n     * @param {ASTNode} node\n     * @returns {ASTNode | undefined}\n     */\n    getStatelessComponent(node) {\n      const parent = node.parent;\n      if (\n        node.type === 'FunctionDeclaration'\n        && (!node.id || isFirstLetterCapitalized(node.id.name))\n        && utils.isReturningJSXOrNull(node)\n      ) {\n        return node;\n      }\n\n      if (node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression') {\n        const isPropertyAssignment = parent.type === 'AssignmentExpression'\n          && parent.left.type === 'MemberExpression';\n        const isModuleExportsAssignment = isPropertyAssignment\n          && parent.left.object.name === 'module'\n          && parent.left.property.name === 'exports';\n\n        if (node.parent.type === 'ExportDefaultDeclaration') {\n          if (utils.isReturningJSX(node)) {\n            return node;\n          }\n          return undefined;\n        }\n\n        if (node.parent.type === 'VariableDeclarator' && utils.isReturningJSXOrNull(node)) {\n          if (isFirstLetterCapitalized(node.parent.id.name)) {\n            return node;\n          }\n          return undefined;\n        }\n\n        // case: const any = () => { return (props) => null }\n        // case: const any = () => (props) => null\n        if (\n          (node.parent.type === 'ReturnStatement' || (node.parent.type === 'ArrowFunctionExpression' && node.parent.expression))\n          && !utils.isReturningJSX(node)\n        ) {\n          return undefined;\n        }\n\n        // case: any = () => { return => null }\n        // case: any = () => null\n        if (node.parent.type === 'AssignmentExpression' && !isPropertyAssignment && utils.isReturningJSXOrNull(node)) {\n          if (isFirstLetterCapitalized(node.parent.left.name)) {\n            return node;\n          }\n          return undefined;\n        }\n\n        // case: any = () => () => null\n        if (node.parent.type === 'ArrowFunctionExpression' && node.parent.parent.type === 'AssignmentExpression' && !isPropertyAssignment && utils.isReturningJSXOrNull(node)) {\n          if (isFirstLetterCapitalized(node.parent.parent.left.name)) {\n            return node;\n          }\n          return undefined;\n        }\n\n        // case: { any: () => () => null }\n        if (node.parent.type === 'ArrowFunctionExpression' && node.parent.parent.type === 'Property' && !isPropertyAssignment && utils.isReturningJSXOrNull(node)) {\n          if (isFirstLetterCapitalized(node.parent.parent.key.name)) {\n            return node;\n          }\n          return undefined;\n        }\n\n        // case: any = function() {return function() {return null;};}\n        if (node.parent.type === 'ReturnStatement') {\n          if (isFirstLetterCapitalized(node.id && node.id.name)) {\n            return node;\n          }\n          const functionExpr = node.parent.parent.parent;\n          if (functionExpr.parent.type === 'AssignmentExpression' && !isPropertyAssignment && utils.isReturningJSXOrNull(node)) {\n            if (isFirstLetterCapitalized(functionExpr.parent.left.name)) {\n              return node;\n            }\n            return undefined;\n          }\n        }\n\n        // case: { any: function() {return function() {return null;};} }\n        if (node.parent.type === 'ReturnStatement') {\n          const functionExpr = node.parent.parent.parent;\n          if (functionExpr.parent.type === 'Property' && !isPropertyAssignment && utils.isReturningJSXOrNull(node)) {\n            if (isFirstLetterCapitalized(functionExpr.parent.key.name)) {\n              return node;\n            }\n            return undefined;\n          }\n        }\n\n        // for case abc = { [someobject.somekey]: props => { ... return not-jsx } }\n        if (\n          node.parent\n          && node.parent.key\n          && node.parent.key.type === 'MemberExpression'\n          && !utils.isReturningJSX(node)\n          && !utils.isReturningOnlyNull(node)\n        ) {\n          return undefined;\n        }\n\n        if (\n          node.parent.type === 'Property' && (\n            (node.parent.method && !node.parent.computed) // case: { f() { return ... } }\n            || (!node.id && !node.parent.computed) // case: { f: () => ... }\n          )\n        ) {\n          if (\n            isFirstLetterCapitalized(node.parent.key.name)\n            && utils.isReturningJSX(node)\n          ) {\n            return node;\n          }\n          return undefined;\n        }\n\n        // Case like `React.memo(() => <></>)` or `React.forwardRef(...)`\n        const pragmaComponentWrapper = utils.getPragmaComponentWrapper(node);\n        if (pragmaComponentWrapper && utils.isReturningJSXOrNull(node)) {\n          return pragmaComponentWrapper;\n        }\n\n        if (!(utils.isInAllowedPositionForComponent(node) && utils.isReturningJSXOrNull(node))) {\n          return undefined;\n        }\n\n        if (utils.isParentComponentNotStatelessComponent(node)) {\n          return undefined;\n        }\n\n        if (node.id) {\n          return isFirstLetterCapitalized(node.id.name) ? node : undefined;\n        }\n\n        if (\n          isPropertyAssignment\n          && !isModuleExportsAssignment\n          && !isFirstLetterCapitalized(parent.left.property.name)\n        ) {\n          return undefined;\n        }\n\n        if (parent.type === 'Property' && utils.isReturningOnlyNull(node)) {\n          return undefined;\n        }\n\n        return node;\n      }\n\n      return undefined;\n    },\n\n    /**\n     * Get the parent stateless component node from the current scope\n     *\n     * @param {ASTNode} node The AST node being checked\n     * @returns {ASTNode} component node, null if we are not in a component\n     */\n    getParentStatelessComponent(node) {\n      let scope = getScope(context, node);\n      while (scope) {\n        const statelessComponent = utils.getStatelessComponent(scope.block);\n        if (statelessComponent) {\n          return statelessComponent;\n        }\n        scope = scope.upper;\n      }\n      return null;\n    },\n\n    /**\n     * Get the related component from a node\n     *\n     * @param {ASTNode} node The AST node being checked (must be a MemberExpression).\n     * @returns {ASTNode | null} component node, null if we cannot find the component\n     */\n    getRelatedComponent(node) {\n      let i;\n      let j;\n      let k;\n      let l;\n      let componentNode;\n      // Get the component path\n      const componentPath = [];\n      let nodeTemp = node;\n      while (nodeTemp) {\n        if (nodeTemp.property && nodeTemp.property.type === 'Identifier') {\n          componentPath.push(nodeTemp.property.name);\n        }\n        if (nodeTemp.object && nodeTemp.object.type === 'Identifier') {\n          componentPath.push(nodeTemp.object.name);\n        }\n        nodeTemp = nodeTemp.object;\n      }\n      componentPath.reverse();\n      const componentName = componentPath.slice(0, componentPath.length - 1).join('.');\n\n      // Find the variable in the current scope\n      const variableName = componentPath.shift();\n      if (!variableName) {\n        return null;\n      }\n      const variableInScope = variableUtil.getVariableFromContext(context, node, variableName);\n      if (!variableInScope) {\n        return null;\n      }\n\n      // Try to find the component using variable references\n      variableInScope.references.some((ref) => {\n        let refId = ref.identifier;\n        if (refId.parent && refId.parent.type === 'MemberExpression') {\n          refId = refId.parent;\n        }\n        if (getText(context, refId) !== componentName) {\n          return false;\n        }\n        if (refId.type === 'MemberExpression') {\n          componentNode = refId.parent.right;\n        } else if (\n          refId.parent\n          && refId.parent.type === 'VariableDeclarator'\n          && refId.parent.init\n          && refId.parent.init.type !== 'Identifier'\n        ) {\n          componentNode = refId.parent.init;\n        }\n        return true;\n      });\n\n      if (componentNode) {\n        // Return the component\n        return components.add(componentNode, 1);\n      }\n\n      // Try to find the component using variable declarations\n      const defs = variableInScope.defs;\n      const defInScope = defs.find((def) => (\n        def.type === 'ClassName'\n        || def.type === 'FunctionName'\n        || def.type === 'Variable'\n      ));\n      if (!defInScope || !defInScope.node) {\n        return null;\n      }\n      componentNode = defInScope.node.init || defInScope.node;\n\n      // Traverse the node properties to the component declaration\n      for (i = 0, j = componentPath.length; i < j; i++) {\n        if (!componentNode.properties) {\n          continue; // eslint-disable-line no-continue\n        }\n        for (k = 0, l = componentNode.properties.length; k < l; k++) {\n          if (componentNode.properties[k].key && componentNode.properties[k].key.name === componentPath[i]) {\n            componentNode = componentNode.properties[k];\n            break;\n          }\n        }\n        if (!componentNode || !componentNode.value) {\n          return null;\n        }\n        componentNode = componentNode.value;\n      }\n\n      // Return the component\n      return components.add(componentNode, 1);\n    },\n\n    isParentComponentNotStatelessComponent(node) {\n      return !!(\n        node.parent\n        && node.parent.key\n        && node.parent.key.type === 'Identifier'\n        // custom component functions must start with a capital letter (returns false otherwise)\n        && node.parent.key.name.charAt(0) === node.parent.key.name.charAt(0).toLowerCase()\n        // react render function cannot have params\n        && !!(node.params || []).length\n      );\n    },\n\n    /**\n     * Identify whether a node (CallExpression) is a call to a React hook\n     *\n     * @param {ASTNode} node The AST node being searched. (expects CallExpression)\n     * @param {('useCallback'|'useContext'|'useDebugValue'|'useEffect'|'useImperativeHandle'|'useLayoutEffect'|'useMemo'|'useReducer'|'useRef'|'useState')[]} [expectedHookNames] React hook names to which search is limited.\n     * @returns {boolean} True if the node is a call to a React hook\n     */\n    isReactHookCall(node, expectedHookNames) {\n      if (!astUtil.isCallExpression(node)) {\n        return false;\n      }\n\n      const defaultReactImports = components.getDefaultReactImports();\n      const namedReactImports = components.getNamedReactImports();\n\n      const defaultReactImportName = defaultReactImports\n        && defaultReactImports[0]\n        && defaultReactImports[0].local.name;\n      const reactHookImportSpecifiers = namedReactImports\n        && namedReactImports.filter((specifier) => USE_HOOK_PREFIX_REGEX.test(specifier.imported.name));\n      const reactHookImportNames = reactHookImportSpecifiers\n        && fromEntries(reactHookImportSpecifiers.map((specifier) => [specifier.local.name, specifier.imported.name]));\n\n      const isPotentialReactHookCall = defaultReactImportName\n        && node.callee.type === 'MemberExpression'\n        && node.callee.object.type === 'Identifier'\n        && node.callee.object.name === defaultReactImportName\n        && node.callee.property.type === 'Identifier'\n        && node.callee.property.name.match(USE_HOOK_PREFIX_REGEX);\n\n      const isPotentialHookCall = reactHookImportNames\n        && node.callee.type === 'Identifier'\n        && node.callee.name.match(USE_HOOK_PREFIX_REGEX);\n\n      const scope = (isPotentialReactHookCall || isPotentialHookCall) && getScope(context, node);\n\n      const reactResolvedDefs = isPotentialReactHookCall\n        && scope.references\n        && scope.references.find(\n          (reference) => reference.identifier.name === defaultReactImportName\n        ).resolved.defs;\n\n      const isReactShadowed = isPotentialReactHookCall && reactResolvedDefs\n        && reactResolvedDefs.some((reactDef) => reactDef.type !== 'ImportBinding');\n\n      const potentialHookReference = isPotentialHookCall\n        && scope.references\n        && scope.references.find(\n          (reference) => reactHookImportNames[reference.identifier.name]\n        );\n\n      const hookResolvedDefs = potentialHookReference && potentialHookReference.resolved.defs;\n      const localHookName = (\n        isPotentialReactHookCall\n        && node.callee.property.name\n      ) || (\n        isPotentialHookCall\n        && potentialHookReference\n        && node.callee.name\n      );\n      const isHookShadowed = isPotentialHookCall\n        && hookResolvedDefs\n        && hookResolvedDefs.some(\n          (hookDef) => hookDef.name.name === localHookName\n          && hookDef.type !== 'ImportBinding'\n        );\n\n      const isHookCall = (isPotentialReactHookCall && !isReactShadowed)\n        || (isPotentialHookCall && localHookName && !isHookShadowed);\n\n      if (!isHookCall) {\n        return false;\n      }\n\n      if (!expectedHookNames) {\n        return true;\n      }\n\n      return arrayIncludes(\n        expectedHookNames,\n        (reactHookImportNames && reactHookImportNames[localHookName]) || localHookName\n      );\n    },\n  };\n\n  // Component detection instructions\n  const detectionInstructions = {\n    CallExpression(node) {\n      if (!utils.isPragmaComponentWrapper(node)) {\n        return;\n      }\n      if (node.arguments.length > 0 && astUtil.isFunctionLikeExpression(node.arguments[0])) {\n        components.add(node, 2);\n      }\n    },\n\n    ClassExpression(node) {\n      if (!componentUtil.isES6Component(node, context)) {\n        return;\n      }\n      components.add(node, 2);\n    },\n\n    ClassDeclaration(node) {\n      if (!componentUtil.isES6Component(node, context)) {\n        return;\n      }\n      components.add(node, 2);\n    },\n\n    ObjectExpression(node) {\n      if (!componentUtil.isES5Component(node, context)) {\n        return;\n      }\n      components.add(node, 2);\n    },\n\n    FunctionExpression(node) {\n      if (node.async && node.generator) {\n        components.add(node, 0);\n        return;\n      }\n\n      const component = utils.getStatelessComponent(node);\n      if (!component) {\n        return;\n      }\n      components.add(component, 2);\n    },\n\n    FunctionDeclaration(node) {\n      if (node.async && node.generator) {\n        components.add(node, 0);\n        return;\n      }\n\n      const cNode = utils.getStatelessComponent(node);\n      if (!cNode) {\n        return;\n      }\n      components.add(cNode, 2);\n    },\n\n    ArrowFunctionExpression(node) {\n      const component = utils.getStatelessComponent(node);\n      if (!component) {\n        return;\n      }\n      components.add(component, 2);\n    },\n\n    ThisExpression(node) {\n      const component = utils.getParentStatelessComponent(node);\n      if (!component || !/Function/.test(component.type) || !node.parent.property) {\n        return;\n      }\n      // Ban functions accessing a property on a ThisExpression\n      components.add(node, 0);\n    },\n  };\n\n  // Detect React import specifiers\n  const reactImportInstructions = {\n    ImportDeclaration(node) {\n      const isReactImported = node.source.type === 'Literal' && node.source.value === 'react';\n      if (!isReactImported) {\n        return;\n      }\n\n      node.specifiers.forEach((specifier) => {\n        if (specifier.type === 'ImportDefaultSpecifier') {\n          components.addDefaultReactImport(specifier);\n        }\n        if (specifier.type === 'ImportSpecifier') {\n          components.addNamedReactImport(specifier);\n        }\n      });\n    },\n  };\n\n  const ruleInstructions = rule(context, components, utils);\n  const propTypesInstructions = propTypesUtil(context, components, utils);\n  const usedPropTypesInstructions = usedPropTypesUtil(context, components, utils);\n  const defaultPropsInstructions = defaultPropsUtil(context, components, utils);\n\n  const mergedRule = mergeRules([\n    detectionInstructions,\n    propTypesInstructions,\n    usedPropTypesInstructions,\n    defaultPropsInstructions,\n    reactImportInstructions,\n    ruleInstructions,\n  ]);\n\n  return mergedRule;\n}\n\nmodule.exports = Object.assign(Components, {\n  detect(rule) {\n    return componentRule.bind(this, rule);\n  },\n});\n", "'use strict';\n\nfunction docsUrl(ruleName) {\n  return `https://github.com/jsx-eslint/eslint-plugin-react/tree/master/docs/rules/${ruleName}.md`;\n}\n\nmodule.exports = docsUrl;\n", "{\n  \"name\": \"eslint\",\n  \"version\": \"9.13.0\",\n  \"author\": \"Nicholas C. Zakas <nicholas+npm@nczconsulting.com>\",\n  \"description\": \"An AST-based pattern checker for JavaScript.\",\n  \"type\": \"commonjs\",\n  \"bin\": {\n    \"eslint\": \"./bin/eslint.js\"\n  },\n  \"main\": \"./lib/api.js\",\n  \"types\": \"./lib/types/index.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./lib/types/index.d.ts\",\n      \"default\": \"./lib/api.js\"\n    },\n    \"./package.json\": \"./package.json\",\n    \"./use-at-your-own-risk\": {\n      \"types\": \"./lib/types/use-at-your-own-risk.d.ts\",\n      \"default\": \"./lib/unsupported-api.js\"\n    },\n    \"./rules\": {\n      \"types\": \"./lib/types/rules/index.d.ts\"\n    },\n    \"./universal\": {\n      \"types\": \"./lib/types/universal.d.ts\",\n      \"default\": \"./lib/universal.js\"\n    }\n  },\n  \"typesVersions\": {\n    \"*\": {\n      \"use-at-your-own-risk\": [\n        \"./lib/types/use-at-your-own-risk.d.ts\"\n      ],\n      \"rules\": [\n        \"./lib/types/rules/index.d.ts\"\n      ],\n      \"universal\": [\n        \"./lib/types/universal.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build:docs:update-links\": \"node tools/fetch-docs-links.js\",\n    \"build:site\": \"node Makefile.js gensite\",\n    \"build:webpack\": \"node Makefile.js webpack\",\n    \"build:readme\": \"node tools/update-readme.js\",\n    \"build:rules-index\": \"node Makefile.js generateRuleIndexPage\",\n    \"lint\": \"trunk check --no-fix --ignore=docs/**/*.js -a --filter=eslint && trunk check --no-fix --ignore=docs/**/*.js\",\n    \"lint:docs:js\": \"trunk check --no-fix --ignore=** --ignore=!docs/**/*.js -a --filter=eslint && trunk check --no-fix --ignore=** --ignore=!docs/**/*.js\",\n    \"lint:docs:rule-examples\": \"node Makefile.js checkRuleExamples\",\n    \"lint:unused\": \"knip\",\n    \"lint:fix\": \"trunk check -y --ignore=docs/**/*.js -a --filter=eslint && trunk check -y --ignore=docs/**/*.js\",\n    \"lint:fix:docs:js\": \"trunk check -y --ignore=** --ignore=!docs/**/*.js -a --flter=eslint && trunk check -y --ignore=** --ignore=!docs/**/*.js\",\n    \"lint:types\": \"attw --pack\",\n    \"release:generate:alpha\": \"node Makefile.js generatePrerelease -- alpha\",\n    \"release:generate:beta\": \"node Makefile.js generatePrerelease -- beta\",\n    \"release:generate:latest\": \"node Makefile.js generateRelease -- latest\",\n    \"release:generate:maintenance\": \"node Makefile.js generateRelease -- maintenance\",\n    \"release:generate:rc\": \"node Makefile.js generatePrerelease -- rc\",\n    \"release:publish\": \"node Makefile.js publishRelease\",\n    \"test\": \"node Makefile.js test\",\n    \"test:browser\": \"node Makefile.js wdio\",\n    \"test:cli\": \"mocha\",\n    \"test:fuzz\": \"node Makefile.js fuzz\",\n    \"test:performance\": \"node Makefile.js perf\",\n    \"test:emfile\": \"node tools/check-emfile-handling.js\",\n    \"test:types\": \"tsc -p tests/lib/types/tsconfig.json\"\n  },\n  \"gitHooks\": {\n    \"pre-commit\": \"lint-staged\"\n  },\n  \"lint-staged\": {\n    \"*.js\": \"trunk check --fix --filter=eslint\",\n    \"*.md\": \"trunk check --fix --filter=markdownlint\",\n    \"lib/rules/*.js\": [\n      \"node tools/update-eslint-all.js\",\n      \"git add packages/js/src/configs/eslint-all.js\"\n    ],\n    \"docs/src/rules/*.md\": [\n      \"node tools/check-rule-examples.js\",\n      \"node tools/fetch-docs-links.js\",\n      \"git add docs/src/_data/further_reading_links.json\"\n    ],\n    \"docs/**/*.svg\": \"trunk check --fix --filter=svgo\"\n  },\n  \"files\": [\n    \"LICENSE\",\n    \"README.md\",\n    \"bin\",\n    \"conf\",\n    \"lib\",\n    \"messages\"\n  ],\n  \"repository\": \"eslint/eslint\",\n  \"funding\": \"https://eslint.org/donate\",\n  \"homepage\": \"https://eslint.org\",\n  \"bugs\": \"https://github.com/eslint/eslint/issues/\",\n  \"dependencies\": {\n    \"@eslint-community/eslint-utils\": \"^4.2.0\",\n    \"@eslint-community/regexpp\": \"^4.11.0\",\n    \"@eslint/config-array\": \"^0.18.0\",\n    \"@eslint/core\": \"^0.7.0\",\n    \"@eslint/eslintrc\": \"^3.1.0\",\n    \"@eslint/js\": \"9.13.0\",\n    \"@eslint/plugin-kit\": \"^0.2.0\",\n    \"@humanfs/node\": \"^0.16.5\",\n    \"@humanwhocodes/module-importer\": \"^1.0.1\",\n    \"@humanwhocodes/retry\": \"^0.3.1\",\n    \"@types/estree\": \"^1.0.6\",\n    \"@types/json-schema\": \"^7.0.15\",\n    \"ajv\": \"^6.12.4\",\n    \"chalk\": \"^4.0.0\",\n    \"cross-spawn\": \"^7.0.2\",\n    \"debug\": \"^4.3.2\",\n    \"escape-string-regexp\": \"^4.0.0\",\n    \"eslint-scope\": \"^8.1.0\",\n    \"eslint-visitor-keys\": \"^4.1.0\",\n    \"espree\": \"^10.2.0\",\n    \"esquery\": \"^1.5.0\",\n    \"esutils\": \"^2.0.2\",\n    \"fast-deep-equal\": \"^3.1.3\",\n    \"file-entry-cache\": \"^8.0.0\",\n    \"find-up\": \"^5.0.0\",\n    \"glob-parent\": \"^6.0.2\",\n    \"ignore\": \"^5.2.0\",\n    \"imurmurhash\": \"^0.1.4\",\n    \"is-glob\": \"^4.0.0\",\n    \"json-stable-stringify-without-jsonify\": \"^1.0.1\",\n    \"lodash.merge\": \"^4.6.2\",\n    \"minimatch\": \"^3.1.2\",\n    \"natural-compare\": \"^1.4.0\",\n    \"optionator\": \"^0.9.3\",\n    \"text-table\": \"^0.2.0\"\n  },\n  \"devDependencies\": {\n    \"@arethetypeswrong/cli\": \"^0.16.4\",\n    \"@babel/core\": \"^7.4.3\",\n    \"@babel/preset-env\": \"^7.4.3\",\n    \"@eslint/json\": \"^0.5.0\",\n    \"@trunkio/launcher\": \"^1.3.0\",\n    \"@types/node\": \"^20.11.5\",\n    \"@typescript-eslint/parser\": \"^8.4.0\",\n    \"@wdio/browser-runner\": \"^9.0.5\",\n    \"@wdio/cli\": \"^9.0.5\",\n    \"@wdio/concise-reporter\": \"^9.0.4\",\n    \"@wdio/mocha-framework\": \"^9.0.5\",\n    \"babel-loader\": \"^8.0.5\",\n    \"c8\": \"^7.12.0\",\n    \"chai\": \"^4.0.1\",\n    \"cheerio\": \"^0.22.0\",\n    \"common-tags\": \"^1.8.0\",\n    \"core-js\": \"^3.1.3\",\n    \"ejs\": \"^3.0.2\",\n    \"eslint\": \"file:.\",\n    \"eslint-config-eslint\": \"file:packages/eslint-config-eslint\",\n    \"eslint-plugin-eslint-plugin\": \"^6.0.0\",\n    \"eslint-plugin-expect-type\": \"^0.4.0\",\n    \"eslint-plugin-yml\": \"^1.14.0\",\n    \"eslint-release\": \"^3.3.0\",\n    \"eslint-rule-composer\": \"^0.3.0\",\n    \"eslump\": \"^3.0.0\",\n    \"esprima\": \"^4.0.1\",\n    \"fast-glob\": \"^3.2.11\",\n    \"fs-teardown\": \"^0.1.3\",\n    \"glob\": \"^10.0.0\",\n    \"globals\": \"^15.0.0\",\n    \"got\": \"^11.8.3\",\n    \"gray-matter\": \"^4.0.3\",\n    \"jiti\": \"^2.1.0\",\n    \"knip\": \"^5.32.0\",\n    \"lint-staged\": \"^11.0.0\",\n    \"load-perf\": \"^0.2.0\",\n    \"markdown-it\": \"^12.2.0\",\n    \"markdown-it-container\": \"^3.0.0\",\n    \"marked\": \"^4.0.8\",\n    \"metascraper\": \"^5.25.7\",\n    \"metascraper-description\": \"^5.25.7\",\n    \"metascraper-image\": \"^5.29.3\",\n    \"metascraper-logo\": \"^5.25.7\",\n    \"metascraper-logo-favicon\": \"^5.25.7\",\n    \"metascraper-title\": \"^5.25.7\",\n    \"mocha\": \"^10.7.3\",\n    \"node-polyfill-webpack-plugin\": \"^1.0.3\",\n    \"npm-license\": \"^0.3.3\",\n    \"pirates\": \"^4.0.5\",\n    \"progress\": \"^2.0.3\",\n    \"proxyquire\": \"^2.0.1\",\n    \"recast\": \"^0.23.0\",\n    \"regenerator-runtime\": \"^0.14.0\",\n    \"rollup-plugin-node-polyfills\": \"^0.2.1\",\n    \"semver\": \"^7.5.3\",\n    \"shelljs\": \"^0.8.5\",\n    \"sinon\": \"^11.0.0\",\n    \"typescript\": \"^5.3.3\",\n    \"vite-plugin-commonjs\": \"^0.10.0\",\n    \"webpack\": \"^5.23.0\",\n    \"webpack-cli\": \"^4.5.0\",\n    \"yorkie\": \"^2.0.0\"\n  },\n  \"peerDependencies\": {\n    \"jiti\": \"*\"\n  },\n  \"peerDependenciesMeta\": {\n    \"jiti\": {\n      \"optional\": true\n    }\n  },\n  \"keywords\": [\n    \"ast\",\n    \"lint\",\n    \"javascript\",\n    \"ecmascript\",\n    \"espree\"\n  ],\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n  }\n}\n", "'use strict';\n\nconst semver = require('semver');\nconst eslintPkg = require('eslint/package.json');\n\nmodule.exports = function getMessageData(messageId, message) {\n  return messageId && semver.satisfies(eslintPkg.version, '>= 4.15') ? { messageId } : { message };\n};\n", "'use strict';\n\nconst getMessageData = require('./message');\n\nmodule.exports = function report(context, message, messageId, data) {\n  context.report(\n    Object.assign(\n      getMessageData(messageId, message),\n      data\n    )\n  );\n};\n", "/**\n * @fileoverview Enforces consistent naming for boolean props\n * @author Ev Haus\n */\n\n'use strict';\n\nconst flatMap = require('array.prototype.flatmap');\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst propsUtil = require('../util/props');\nconst astUtil = require('../util/ast');\nconst docsUrl = require('../util/docsUrl');\nconst propWrapperUtil = require('../util/propWrapper');\nconst report = require('../util/report');\nconst eslintUtil = require('../util/eslint');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n/**\n * Checks if prop is nested\n * @param {Object} prop Property object, single prop type declaration\n * @returns {boolean}\n */\nfunction nestedPropTypes(prop) {\n  return (\n    prop.type === 'Property'\n    && astUtil.isCallExpression(prop.value)\n  );\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  patternMismatch: 'Prop name `{{propName}}` doesn’t match rule `{{pattern}}`',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      category: 'Stylistic Issues',\n      description: 'Enforces consistent naming for boolean props',\n      recommended: false,\n      url: docsUrl('boolean-prop-naming'),\n    },\n\n    messages,\n\n    schema: [{\n      additionalProperties: false,\n      properties: {\n        propTypeNames: {\n          items: {\n            type: 'string',\n          },\n          minItems: 1,\n          type: 'array',\n          uniqueItems: true,\n        },\n        rule: {\n          default: '^(is|has)[A-Z]([A-Za-z0-9]?)+',\n          minLength: 1,\n          type: 'string',\n        },\n        message: {\n          minLength: 1,\n          type: 'string',\n        },\n        validateNested: {\n          default: false,\n          type: 'boolean',\n        },\n      },\n      type: 'object',\n    }],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const config = context.options[0] || {};\n    const rule = config.rule ? new RegExp(config.rule) : null;\n    const propTypeNames = config.propTypeNames || ['bool'];\n\n    // Remembers all Flowtype object definitions\n    const objectTypeAnnotations = new Map();\n\n    /**\n     * Returns the prop key to ensure we handle the following cases:\n     * propTypes: {\n     *   full: React.PropTypes.bool,\n     *   short: PropTypes.bool,\n     *   direct: bool,\n     *   required: PropTypes.bool.isRequired\n     * }\n     * @param {Object} node The node we're getting the name of\n     * @returns {string | null}\n     */\n    function getPropKey(node) {\n      // Check for `ExperimentalSpreadProperty` (eslint 3/4) and `SpreadElement` (eslint 5)\n      // so we can skip validation of those fields.\n      // Otherwise it will look for `node.value.property` which doesn't exist and breaks eslint.\n      if (node.type === 'ExperimentalSpreadProperty' || node.type === 'SpreadElement') {\n        return null;\n      }\n      if (node.value && node.value.property) {\n        const name = node.value.property.name;\n        if (name === 'isRequired') {\n          if (node.value.object && node.value.object.property) {\n            return node.value.object.property.name;\n          }\n          return null;\n        }\n        return name;\n      }\n      if (node.value && node.value.type === 'Identifier') {\n        return node.value.name;\n      }\n      return null;\n    }\n\n    /**\n     * Returns the name of the given node (prop)\n     * @param {Object} node The node we're getting the name of\n     * @returns {string}\n     */\n    function getPropName(node) {\n      // Due to this bug https://github.com/babel/babel-eslint/issues/307\n      // we can't get the name of the Flow object key name. So we have\n      // to hack around it for now.\n      if (node.type === 'ObjectTypeProperty') {\n        return getSourceCode(context).getFirstToken(node).value;\n      }\n\n      return node.key.name;\n    }\n\n    /**\n     * Checks if prop is declared in flow way\n     * @param {Object} prop Property object, single prop type declaration\n     * @returns {boolean}\n     */\n    function flowCheck(prop) {\n      return (\n        prop.type === 'ObjectTypeProperty'\n        && prop.value.type === 'BooleanTypeAnnotation'\n        && rule.test(getPropName(prop)) === false\n      );\n    }\n\n    /**\n     * Checks if prop is declared in regular way\n     * @param {Object} prop Property object, single prop type declaration\n     * @returns {boolean}\n     */\n    function regularCheck(prop) {\n      const propKey = getPropKey(prop);\n      return (\n        propKey\n        && propTypeNames.indexOf(propKey) >= 0\n        && rule.test(getPropName(prop)) === false\n      );\n    }\n\n    function tsCheck(prop) {\n      if (prop.type !== 'TSPropertySignature') return false;\n      const typeAnnotation = (prop.typeAnnotation || {}).typeAnnotation;\n      return (\n        typeAnnotation\n        && typeAnnotation.type === 'TSBooleanKeyword'\n        && rule.test(getPropName(prop)) === false\n      );\n    }\n\n    /**\n     * Runs recursive check on all proptypes\n     * @param {Array} proptypes A list of Property object (for each proptype defined)\n     * @param {Function} addInvalidProp callback to run for each error\n     */\n    function runCheck(proptypes, addInvalidProp) {\n      if (proptypes) {\n        proptypes.forEach((prop) => {\n          if (config.validateNested && nestedPropTypes(prop)) {\n            runCheck(prop.value.arguments[0].properties, addInvalidProp);\n            return;\n          }\n          if (flowCheck(prop) || regularCheck(prop) || tsCheck(prop)) {\n            addInvalidProp(prop);\n          }\n        });\n      }\n    }\n\n    /**\n     * Checks and mark props with invalid naming\n     * @param {Object} node The component node we're testing\n     * @param {Array} proptypes A list of Property object (for each proptype defined)\n     */\n    function validatePropNaming(node, proptypes) {\n      const component = components.get(node) || node;\n      const invalidProps = component.invalidProps || [];\n\n      runCheck(proptypes, (prop) => {\n        invalidProps.push(prop);\n      });\n\n      components.set(node, {\n        invalidProps,\n      });\n    }\n\n    /**\n     * Reports invalid prop naming\n     * @param {Object} component The component to process\n     */\n    function reportInvalidNaming(component) {\n      component.invalidProps.forEach((propNode) => {\n        const propName = getPropName(propNode);\n        report(context, config.message || messages.patternMismatch, !config.message && 'patternMismatch', {\n          node: propNode,\n          data: {\n            component: propName,\n            propName,\n            pattern: config.rule,\n          },\n        });\n      });\n    }\n\n    function checkPropWrapperArguments(node, args) {\n      if (!node || !Array.isArray(args)) {\n        return;\n      }\n      args.filter((arg) => arg.type === 'ObjectExpression').forEach((object) => validatePropNaming(node, object.properties));\n    }\n\n    function getComponentTypeAnnotation(component) {\n      // If this is a functional component that uses a global type, check it\n      if (\n        (component.node.type === 'FunctionDeclaration' || component.node.type === 'ArrowFunctionExpression')\n        && component.node.params\n        && component.node.params.length > 0\n        && component.node.params[0].typeAnnotation\n      ) {\n        return component.node.params[0].typeAnnotation.typeAnnotation;\n      }\n\n      if (\n        !component.node.parent\n        || component.node.parent.type !== 'VariableDeclarator'\n        || !component.node.parent.id\n        || component.node.parent.id.type !== 'Identifier'\n        || !component.node.parent.id.typeAnnotation\n        || !component.node.parent.id.typeAnnotation.typeAnnotation\n      ) {\n        return;\n      }\n\n      const annotationTypeArguments = propsUtil.getTypeArguments(\n        component.node.parent.id.typeAnnotation.typeAnnotation\n      );\n      if (\n        annotationTypeArguments && (\n          annotationTypeArguments.type === 'TSTypeParameterInstantiation'\n          || annotationTypeArguments.type === 'TypeParameterInstantiation'\n        )\n      ) {\n        return annotationTypeArguments.params.find(\n          (param) => param.type === 'TSTypeReference' || param.type === 'GenericTypeAnnotation'\n        );\n      }\n    }\n\n    function findAllTypeAnnotations(identifier, node) {\n      if (node.type === 'TSTypeLiteral' || node.type === 'ObjectTypeAnnotation' || node.type === 'TSInterfaceBody') {\n        const currentNode = [].concat(\n          objectTypeAnnotations.get(identifier.name) || [],\n          node\n        );\n        objectTypeAnnotations.set(identifier.name, currentNode);\n      } else if (\n        node.type === 'TSParenthesizedType'\n        && (\n          node.typeAnnotation.type === 'TSIntersectionType'\n          || node.typeAnnotation.type === 'TSUnionType'\n        )\n      ) {\n        node.typeAnnotation.types.forEach((type) => {\n          findAllTypeAnnotations(identifier, type);\n        });\n      } else if (\n        node.type === 'TSIntersectionType'\n        || node.type === 'TSUnionType'\n        || node.type === 'IntersectionTypeAnnotation'\n        || node.type === 'UnionTypeAnnotation'\n      ) {\n        node.types.forEach((type) => {\n          findAllTypeAnnotations(identifier, type);\n        });\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!rule || !propsUtil.isPropTypesDeclaration(node)) {\n          return;\n        }\n        if (\n          node.value\n          && astUtil.isCallExpression(node.value)\n          && propWrapperUtil.isPropWrapperFunction(\n            context,\n            getText(context, node.value.callee)\n          )\n        ) {\n          checkPropWrapperArguments(node, node.value.arguments);\n        }\n        if (node.value && node.value.properties) {\n          validatePropNaming(node, node.value.properties);\n        }\n        if (node.typeAnnotation && node.typeAnnotation.typeAnnotation) {\n          validatePropNaming(node, node.typeAnnotation.typeAnnotation.properties);\n        }\n      },\n\n      MemberExpression(node) {\n        if (!rule || !propsUtil.isPropTypesDeclaration(node)) {\n          return;\n        }\n        const component = utils.getRelatedComponent(node);\n        if (!component || !node.parent.right) {\n          return;\n        }\n        const right = node.parent.right;\n        if (\n          astUtil.isCallExpression(right)\n          && propWrapperUtil.isPropWrapperFunction(\n            context,\n            getText(context, right.callee)\n          )\n        ) {\n          checkPropWrapperArguments(component.node, right.arguments);\n          return;\n        }\n        validatePropNaming(component.node, node.parent.right.properties);\n      },\n\n      ObjectExpression(node) {\n        if (!rule) {\n          return;\n        }\n\n        // Search for the proptypes declaration\n        node.properties.forEach((property) => {\n          if (!propsUtil.isPropTypesDeclaration(property)) {\n            return;\n          }\n          validatePropNaming(node, property.value.properties);\n        });\n      },\n\n      TypeAlias(node) {\n        findAllTypeAnnotations(node.id, node.right);\n      },\n\n      TSTypeAliasDeclaration(node) {\n        findAllTypeAnnotations(node.id, node.typeAnnotation);\n      },\n\n      TSInterfaceDeclaration(node) {\n        findAllTypeAnnotations(node.id, node.body);\n      },\n\n      // eslint-disable-next-line object-shorthand\n      'Program:exit'() {\n        if (!rule) {\n          return;\n        }\n\n        values(components.list()).forEach((component) => {\n          const annotation = getComponentTypeAnnotation(component);\n\n          if (annotation) {\n            let propType;\n            if (annotation.type === 'GenericTypeAnnotation') {\n              propType = objectTypeAnnotations.get(annotation.id.name);\n            } else if (annotation.type === 'ObjectTypeAnnotation' || annotation.type === 'TSTypeLiteral') {\n              propType = annotation;\n            } else if (annotation.type === 'TSTypeReference') {\n              propType = objectTypeAnnotations.get(annotation.typeName.name);\n            } else if (annotation.type === 'TSIntersectionType') {\n              propType = flatMap(annotation.types, (type) => (\n                type.type === 'TSTypeReference'\n                  ? objectTypeAnnotations.get(type.typeName.name)\n                  : type\n              ));\n            }\n\n            if (propType) {\n              [].concat(propType).filter(Boolean).forEach((prop) => {\n                validatePropNaming(\n                  component.node,\n                  prop.properties || prop.members || prop.body\n                );\n              });\n            }\n          }\n\n          if (component.invalidProps && component.invalidProps.length > 0) {\n            reportInvalidNaming(component);\n          }\n        });\n\n        // Reset cache\n        objectTypeAnnotations.clear();\n      },\n    };\n  }),\n};\n", "module.exports = require('./lib').getProp; // eslint-disable-line import/no-unresolved\n", "module.exports = require('./lib').getLiteralPropValue; // eslint-disable-line import/no-unresolved\n", "/**\n * @fileoverview Forbid \"button\" element without an explicit \"type\" attribute\n * @author Filipp Riabchun\n */\n\n'use strict';\n\nconst getProp = require('jsx-ast-utils/getProp');\nconst getLiteralPropValue = require('jsx-ast-utils/getLiteralPropValue');\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst optionDefaults = {\n  button: true,\n  submit: true,\n  reset: true,\n};\n\nconst messages = {\n  missingType: 'Missing an explicit type attribute for button',\n  complexType: 'The button type attribute must be specified by a static string or a trivial ternary expression',\n  invalidValue: '\"{{value}}\" is an invalid value for button type attribute',\n  forbiddenValue: '\"{{value}}\" is an invalid value for button type attribute',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of `button` elements without an explicit `type` attribute',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('button-has-type'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        button: {\n          default: optionDefaults.button,\n          type: 'boolean',\n        },\n        submit: {\n          default: optionDefaults.submit,\n          type: 'boolean',\n        },\n        reset: {\n          default: optionDefaults.reset,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = Object.assign({}, optionDefaults, context.options[0]);\n\n    function reportMissing(node) {\n      report(context, messages.missingType, 'missingType', {\n        node,\n      });\n    }\n\n    function reportComplex(node) {\n      report(context, messages.complexType, 'complexType', {\n        node,\n      });\n    }\n\n    function checkValue(node, value) {\n      if (!(value in configuration)) {\n        report(context, messages.invalidValue, 'invalidValue', {\n          node,\n          data: {\n            value,\n          },\n        });\n      } else if (!configuration[value]) {\n        report(context, messages.forbiddenValue, 'forbiddenValue', {\n          node,\n          data: {\n            value,\n          },\n        });\n      }\n    }\n\n    function checkExpression(node, expression) {\n      switch (expression.type) {\n        case 'Literal':\n          checkValue(node, expression.value);\n          return;\n        case 'TemplateLiteral':\n          if (expression.expressions.length === 0) {\n            checkValue(node, expression.quasis[0].value.raw);\n          } else {\n            reportComplex(expression);\n          }\n          return;\n        case 'ConditionalExpression':\n          checkExpression(node, expression.consequent);\n          checkExpression(node, expression.alternate);\n          return;\n        default:\n          reportComplex(expression);\n      }\n    }\n\n    return {\n      JSXElement(node) {\n        if (node.openingElement.name.name !== 'button') {\n          return;\n        }\n\n        const typeProp = getProp(node.openingElement.attributes, 'type');\n\n        if (!typeProp) {\n          reportMissing(node);\n          return;\n        }\n\n        if (typeProp.value && typeProp.value.type === 'JSXExpressionContainer') {\n          checkExpression(node, typeProp.value.expression);\n          return;\n        }\n\n        const propValue = getLiteralPropValue(typeProp);\n        checkValue(node, propValue);\n      },\n      CallExpression(node) {\n        if (!isCreateElement(context, node) || node.arguments.length < 1) {\n          return;\n        }\n\n        if (node.arguments[0].type !== 'Literal' || node.arguments[0].value !== 'button') {\n          return;\n        }\n\n        if (!node.arguments[1] || node.arguments[1].type !== 'ObjectExpression') {\n          reportMissing(node);\n          return;\n        }\n\n        const props = node.arguments[1].properties;\n        const typeProp = props.find((prop) => (\n          'key' in prop\n          && prop.key\n          && 'name' in prop.key\n          && prop.key.name === 'type'\n        ));\n\n        if (!typeProp) {\n          reportMissing(node);\n          return;\n        }\n\n        checkExpression(node, 'value' in typeProp ? typeProp.value : undefined);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce the use of the 'onChange' or 'readonly' attribute when 'checked' is used'\n * @author Jaesoekjjang\n */\n\n'use strict';\n\nconst ASTUtils = require('jsx-ast-utils');\nconst flatMap = require('array.prototype.flatmap');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\nconst docsUrl = require('../util/docsUrl');\n\nconst messages = {\n  missingProperty: '`checked` should be used with either `onChange` or `readOnly`.',\n  exclusiveCheckedAttribute: 'Use either `checked` or `defaultChecked`, but not both.',\n};\n\nconst targetPropSet = new Set(['checked', 'onChange', 'readOnly', 'defaultChecked']);\n\nconst defaultOptions = {\n  ignoreMissingProperties: false,\n  ignoreExclusiveCheckedAttribute: false,\n};\n\n/**\n * @param {object[]} properties\n * @param {string} keyName\n * @returns {Set<string>}\n */\nfunction extractTargetProps(properties, keyName) {\n  return new Set(\n    flatMap(\n      properties,\n      (prop) => (\n        prop[keyName] && targetPropSet.has(prop[keyName].name)\n          ? [prop[keyName].name]\n          : []\n      )\n    )\n  );\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce using `onChange` or `readonly` attribute when `checked` is used',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('checked-requires-onchange-or-readonly'),\n    },\n    messages,\n    schema: [{\n      additionalProperties: false,\n      properties: {\n        ignoreMissingProperties: {\n          type: 'boolean',\n        },\n        ignoreExclusiveCheckedAttribute: {\n          type: 'boolean',\n        },\n      },\n    }],\n  },\n  create(context) {\n    const options = Object.assign({}, defaultOptions, context.options[0]);\n\n    function reportMissingProperty(node) {\n      report(\n        context,\n        messages.missingProperty,\n        'missingProperty',\n        { node }\n      );\n    }\n\n    function reportExclusiveCheckedAttribute(node) {\n      report(\n        context,\n        messages.exclusiveCheckedAttribute,\n        'exclusiveCheckedAttribute',\n        { node }\n      );\n    }\n\n    /**\n     * @param {ASTNode} node\n     * @param {Set<string>} propSet\n     * @returns {void}\n     */\n    const checkAttributesAndReport = (node, propSet) => {\n      if (!propSet.has('checked')) {\n        return;\n      }\n\n      if (!options.ignoreExclusiveCheckedAttribute && propSet.has('defaultChecked')) {\n        reportExclusiveCheckedAttribute(node);\n      }\n\n      if (\n        !options.ignoreMissingProperties\n        && !(propSet.has('onChange') || propSet.has('readOnly'))\n      ) {\n        reportMissingProperty(node);\n      }\n    };\n\n    return {\n      JSXOpeningElement(node) {\n        if (ASTUtils.elementType(node) !== 'input') {\n          return;\n        }\n\n        const propSet = extractTargetProps(node.attributes, 'name');\n        checkAttributesAndReport(node, propSet);\n      },\n      CallExpression(node) {\n        if (!isCreateElement(context, node)) {\n          return;\n        }\n\n        const firstArg = node.arguments[0];\n        const secondArg = node.arguments[1];\n        if (\n          !firstArg\n          || firstArg.type !== 'Literal'\n          || firstArg.value !== 'input'\n        ) {\n          return;\n        }\n\n        if (!secondArg || secondArg.type !== 'ObjectExpression') {\n          return;\n        }\n\n        const propSet = extractTargetProps(secondArg.properties, 'key');\n        checkAttributesAndReport(node, propSet);\n      },\n    };\n  },\n};\n", "/**\n * @fileOverview Enforce all defaultProps are defined in propTypes\n * @author Vitor Balocco\n * @author Roy Sutton\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  requiredHasDefault: 'defaultProp \"{{name}}\" defined for isRequired propType.',\n  defaultHasNoType: 'defaultProp \"{{name}}\" has no corresponding propTypes declaration.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce all defaultProps have a corresponding non-required PropType',\n      category: 'Best Practices',\n      url: docsUrl('default-props-match-prop-types'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowRequiredDefaults: {\n          default: false,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    const allowRequiredDefaults = configuration.allowRequiredDefaults || false;\n\n    /**\n     * Reports all defaultProps passed in that don't have an appropriate propTypes counterpart.\n     * @param  {Object[]} propTypes    Array of propTypes to check.\n     * @param  {Object}   defaultProps Object of defaultProps to check. Keys are the props names.\n     * @return {void}\n     */\n    function reportInvalidDefaultProps(propTypes, defaultProps) {\n      // If this defaultProps is \"unresolved\" or the propTypes is undefined, then we should ignore\n      // this component and not report any errors for it, to avoid false-positives with e.g.\n      // external defaultProps/propTypes declarations or spread operators.\n      if (defaultProps === 'unresolved' || !propTypes || Object.keys(propTypes).length === 0) {\n        return;\n      }\n\n      Object.keys(defaultProps).forEach((defaultPropName) => {\n        const defaultProp = defaultProps[defaultPropName];\n        const prop = propTypes[defaultPropName];\n\n        if (prop && (allowRequiredDefaults || !prop.isRequired)) {\n          return;\n        }\n\n        if (prop) {\n          report(context, messages.requiredHasDefault, 'requiredHasDefault', {\n            node: defaultProp.node,\n            data: {\n              name: defaultPropName,\n            },\n          });\n        } else {\n          report(context, messages.defaultHasNoType, 'defaultHasNoType', {\n            node: defaultProp.node,\n            data: {\n              name: defaultPropName,\n            },\n          });\n        }\n      });\n    }\n\n    // --------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------\n\n    return {\n      'Program:exit'() {\n        // If no defaultProps could be found, we don't report anything.\n        values(components.list())\n          .filter((component) => component.defaultProps)\n          .forEach((component) => {\n            reportInvalidDefaultProps(\n              component.declaredPropTypes,\n              component.defaultProps || {}\n            );\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Enforce consistent usage of destructuring assignment of props, state, and context.\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst eslintUtil = require('../util/eslint');\nconst isAssignmentLHS = require('../util/ast').isAssignmentLHS;\nconst report = require('../util/report');\n\nconst getScope = eslintUtil.getScope;\nconst getText = eslintUtil.getText;\n\nconst DEFAULT_OPTION = 'always';\n\nfunction createSFCParams() {\n  const queue = [];\n\n  return {\n    push(params) {\n      queue.unshift(params);\n    },\n    pop() {\n      queue.shift();\n    },\n    propsName() {\n      const found = queue.find((params) => {\n        const props = params[0];\n        return props && !props.destructuring && props.name;\n      });\n      return found && found[0] && found[0].name;\n    },\n    contextName() {\n      const found = queue.find((params) => {\n        const context = params[1];\n        return context && !context.destructuring && context.name;\n      });\n      return found && found[1] && found[1].name;\n    },\n  };\n}\n\nfunction evalParams(params) {\n  return params.map((param) => ({\n    destructuring: param.type === 'ObjectPattern',\n    name: param.type === 'Identifier' && param.name,\n  }));\n}\n\nconst messages = {\n  noDestructPropsInSFCArg: 'Must never use destructuring props assignment in SFC argument',\n  noDestructContextInSFCArg: 'Must never use destructuring context assignment in SFC argument',\n  noDestructAssignment: 'Must never use destructuring {{type}} assignment',\n  useDestructAssignment: 'Must use destructuring {{type}} assignment',\n  destructureInSignature: 'Must destructure props in the function signature.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce consistent usage of destructuring assignment of props, state, and context',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('destructuring-assignment'),\n    },\n    fixable: 'code',\n    messages,\n\n    schema: [{\n      type: 'string',\n      enum: [\n        'always',\n        'never',\n      ],\n    }, {\n      type: 'object',\n      properties: {\n        ignoreClassFields: {\n          type: 'boolean',\n        },\n        destructureInSignature: {\n          type: 'string',\n          enum: [\n            'always',\n            'ignore',\n          ],\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const configuration = context.options[0] || DEFAULT_OPTION;\n    const ignoreClassFields = (context.options[1] && (context.options[1].ignoreClassFields === true)) || false;\n    const destructureInSignature = (context.options[1] && context.options[1].destructureInSignature) || 'ignore';\n    const sfcParams = createSFCParams();\n\n    /**\n     * @param {ASTNode} node We expect either an ArrowFunctionExpression,\n     *   FunctionDeclaration, or FunctionExpression\n     */\n    function handleStatelessComponent(node) {\n      const params = evalParams(node.params);\n\n      const SFCComponent = components.get(getScope(context, node).block);\n      if (!SFCComponent) {\n        return;\n      }\n      sfcParams.push(params);\n\n      if (params[0] && params[0].destructuring && components.get(node) && configuration === 'never') {\n        report(context, messages.noDestructPropsInSFCArg, 'noDestructPropsInSFCArg', {\n          node,\n        });\n      } else if (params[1] && params[1].destructuring && components.get(node) && configuration === 'never') {\n        report(context, messages.noDestructContextInSFCArg, 'noDestructContextInSFCArg', {\n          node,\n        });\n      }\n    }\n\n    function handleStatelessComponentExit(node) {\n      const SFCComponent = components.get(getScope(context, node).block);\n      if (SFCComponent) {\n        sfcParams.pop();\n      }\n    }\n\n    function handleSFCUsage(node) {\n      const propsName = sfcParams.propsName();\n      const contextName = sfcParams.contextName();\n      // props.aProp || context.aProp\n      const isPropUsed = (\n        (propsName && node.object.name === propsName)\n          || (contextName && node.object.name === contextName)\n      )\n        && !isAssignmentLHS(node);\n      if (isPropUsed && configuration === 'always' && !node.optional) {\n        report(context, messages.useDestructAssignment, 'useDestructAssignment', {\n          node,\n          data: {\n            type: node.object.name,\n          },\n        });\n      }\n    }\n\n    function isInClassProperty(node) {\n      let curNode = node.parent;\n      while (curNode) {\n        if (curNode.type === 'ClassProperty' || curNode.type === 'PropertyDefinition') {\n          return true;\n        }\n        curNode = curNode.parent;\n      }\n      return false;\n    }\n\n    function handleClassUsage(node) {\n      // this.props.Aprop || this.context.aProp || this.state.aState\n      const isPropUsed = (\n        node.object.type === 'MemberExpression' && node.object.object.type === 'ThisExpression'\n        && (node.object.property.name === 'props' || node.object.property.name === 'context' || node.object.property.name === 'state')\n        && !isAssignmentLHS(node)\n      );\n\n      if (\n        isPropUsed && configuration === 'always'\n        && !(ignoreClassFields && isInClassProperty(node))\n      ) {\n        report(context, messages.useDestructAssignment, 'useDestructAssignment', {\n          node,\n          data: {\n            type: node.object.property.name,\n          },\n        });\n      }\n    }\n\n    return {\n\n      FunctionDeclaration: handleStatelessComponent,\n\n      ArrowFunctionExpression: handleStatelessComponent,\n\n      FunctionExpression: handleStatelessComponent,\n\n      'FunctionDeclaration:exit': handleStatelessComponentExit,\n\n      'ArrowFunctionExpression:exit': handleStatelessComponentExit,\n\n      'FunctionExpression:exit': handleStatelessComponentExit,\n\n      MemberExpression(node) {\n        let scope = getScope(context, node);\n        let SFCComponent = components.get(scope.block);\n        while (!SFCComponent && scope.upper && scope.upper !== scope) {\n          SFCComponent = components.get(scope.upper.block);\n          scope = scope.upper;\n        }\n        if (SFCComponent) {\n          handleSFCUsage(node);\n        }\n\n        const classComponent = utils.getParentComponent(node);\n        if (classComponent) {\n          handleClassUsage(node);\n        }\n      },\n\n      VariableDeclarator(node) {\n        const classComponent = utils.getParentComponent(node);\n        const SFCComponent = components.get(getScope(context, node).block);\n\n        const destructuring = (node.init && node.id && node.id.type === 'ObjectPattern');\n        // let {foo} = props;\n        const destructuringSFC = destructuring && (node.init.name === 'props' || node.init.name === 'context');\n        // let {foo} = this.props;\n        const destructuringClass = destructuring && node.init.object && node.init.object.type === 'ThisExpression' && (\n          node.init.property.name === 'props' || node.init.property.name === 'context' || node.init.property.name === 'state'\n        );\n\n        if (SFCComponent && destructuringSFC && configuration === 'never') {\n          report(context, messages.noDestructAssignment, 'noDestructAssignment', {\n            node,\n            data: {\n              type: node.init.name,\n            },\n          });\n        }\n\n        if (\n          classComponent && destructuringClass && configuration === 'never'\n          && !(ignoreClassFields && (node.parent.type === 'ClassProperty' || node.parent.type === 'PropertyDefinition'))\n        ) {\n          report(context, messages.noDestructAssignment, 'noDestructAssignment', {\n            node,\n            data: {\n              type: node.init.property.name,\n            },\n          });\n        }\n\n        if (\n          SFCComponent\n          && destructuringSFC\n          && configuration === 'always'\n          && destructureInSignature === 'always'\n          && node.init.name === 'props'\n        ) {\n          const scopeSetProps = getScope(context, node).set.get('props');\n          const propsRefs = scopeSetProps && scopeSetProps.references;\n          if (!propsRefs) {\n            return;\n          }\n          // Skip if props is used elsewhere\n          if (propsRefs.length > 1) {\n            return;\n          }\n          report(context, messages.destructureInSignature, 'destructureInSignature', {\n            node,\n            fix(fixer) {\n              const param = SFCComponent.node.params[0];\n              if (!param) {\n                return;\n              }\n              const replaceRange = [\n                param.range[0],\n                param.typeAnnotation ? param.typeAnnotation.range[0] : param.range[1],\n              ];\n              return [\n                fixer.replaceTextRange(replaceRange, getText(context, node.id)),\n                fixer.remove(node.parent),\n              ];\n            },\n          });\n        }\n      },\n    };\n  }),\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('es-abstract/2024/Call');\nvar GetIteratorDirect = require('../aos/GetIteratorDirect');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar IteratorClose = require('es-abstract/2024/IteratorClose');\nvar IteratorStepValue = require('es-abstract/2024/IteratorStepValue');\nvar ThrowCompletion = require('es-abstract/2024/ThrowCompletion');\nvar Type = require('es-abstract/2024/Type');\n\nmodule.exports = function forEach(fn) {\n\tif (this instanceof forEach) {\n\t\tthrow new $TypeError('`forEach` is not a constructor');\n\t}\n\n\tvar O = this; // step 1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('`this` value must be an Object'); // step 2\n\t}\n\n\tif (!IsCallable(fn)) {\n\t\tthrow new $TypeError('`fn` must be a function'); // step 3\n\t}\n\n\tvar iterated = GetIteratorDirect(O); // step 4\n\n\tvar counter = 0; // step 5\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) { // step 6\n\t\tvar value = IteratorStepValue(iterated); // step 6.a\n\t\tif (iterated['[[Done]]']) {\n\t\t\treturn void undefined; // step 6.b\n\t\t}\n\t\ttry {\n\t\t\tCall(fn, void undefined, [value, counter]); // step 6.c\n\t\t} catch (e) {\n\t\t\tIteratorClose(\n\t\t\t\titerated,\n\t\t\t\tThrowCompletion(e)\n\t\t\t); // steps 6.d\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tcounter += 1; // step 6.e\n\t\t}\n\t}\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Iterator === 'function' && typeof Iterator.prototype.forEach === 'function'\n\t\t? Iterator.prototype.forEach\n\t\t: implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nvar $IteratorPrototype = require('../Iterator.prototype/implementation');\n\nmodule.exports = function shimIteratorPrototypeForEach() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\t$IteratorPrototype,\n\t\t{ forEach: polyfill },\n\t\t{ forEach: function () { return $IteratorPrototype.forEach !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill());\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "'use strict';\n\nconst astUtil = require('./ast');\n\n/**\n * Checks if the node is a React.createContext call\n * @param {ASTNode} node - The AST node being checked.\n * @returns {boolean} - True if node is a React.createContext call, false if not.\n */\nmodule.exports = function isCreateContext(node) {\n  if (\n    node.init\n    && node.init.callee\n  ) {\n    if (\n      astUtil.isCallExpression(node.init)\n      && node.init.callee.name === 'createContext'\n    ) {\n      return true;\n    }\n\n    if (\n      node.init.callee.type === 'MemberExpression'\n      && node.init.callee.property\n      && node.init.callee.property.name === 'createContext'\n    ) {\n      return true;\n    }\n  }\n\n  if (\n    node.expression\n    && node.expression.type === 'AssignmentExpression'\n    && node.expression.operator === '='\n    && astUtil.isCallExpression(node.expression.right)\n    && node.expression.right.callee\n  ) {\n    const right = node.expression.right;\n\n    if (right.callee.name === 'createContext') {\n      return true;\n    }\n\n    if (\n      right.callee.type === 'MemberExpression'\n      && right.callee.property\n      && right.callee.property.name === 'createContext'\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n};\n", "/**\n * @fileoverview Prevent missing displayName in a React component definition\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst values = require('object.values');\nconst filter = require('es-iterator-helpers/Iterator.prototype.filter');\nconst forEach = require('es-iterator-helpers/Iterator.prototype.forEach');\n\nconst Components = require('../util/Components');\nconst isCreateContext = require('../util/isCreateContext');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst testReactVersion = require('../util/version').testReactVersion;\nconst propsUtil = require('../util/props');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noDisplayName: 'Component definition is missing display name',\n  noContextDisplayName: 'Context definition is missing display name',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow missing displayName in a React component definition',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('display-name'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignoreTranspilerName: {\n          type: 'boolean',\n        },\n        checkContextObjects: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const config = context.options[0] || {};\n    const ignoreTranspilerName = config.ignoreTranspilerName || false;\n    const checkContextObjects = (config.checkContextObjects || false) && testReactVersion(context, '>= 16.3.0');\n\n    const contextObjects = new Map();\n\n    /**\n     * Mark a prop type as declared\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markDisplayNameAsDeclared(node) {\n      components.set(node, {\n        hasDisplayName: true,\n      });\n    }\n\n    /**\n     * Checks if React.forwardRef is nested inside React.memo\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if React.forwardRef is nested inside React.memo, false if not.\n     */\n    function isNestedMemo(node) {\n      return astUtil.isCallExpression(node)\n        && node.arguments\n        && astUtil.isCallExpression(node.arguments[0])\n        && utils.isPragmaComponentWrapper(node);\n    }\n\n    /**\n     * Reports missing display name for a given component\n     * @param {Object} component The component to process\n     */\n    function reportMissingDisplayName(component) {\n      if (\n        testReactVersion(context, '^0.14.10 || ^15.7.0 || >= 16.12.0')\n        && isNestedMemo(component.node)\n      ) {\n        return;\n      }\n\n      report(context, messages.noDisplayName, 'noDisplayName', {\n        node: component.node,\n      });\n    }\n\n    /**\n     * Reports missing display name for a given context object\n     * @param {Object} contextObj The context object to process\n     */\n    function reportMissingContextDisplayName(contextObj) {\n      report(context, messages.noContextDisplayName, 'noContextDisplayName', {\n        node: contextObj.node,\n      });\n    }\n\n    /**\n     * Checks if the component have a name set by the transpiler\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if component has a name, false if not.\n     */\n    function hasTranspilerName(node) {\n      const namedObjectAssignment = (\n        node.type === 'ObjectExpression'\n        && node.parent\n        && node.parent.parent\n        && node.parent.parent.type === 'AssignmentExpression'\n        && (\n          !node.parent.parent.left.object\n          || node.parent.parent.left.object.name !== 'module'\n          || node.parent.parent.left.property.name !== 'exports'\n        )\n      );\n      const namedObjectDeclaration = (\n        node.type === 'ObjectExpression'\n        && node.parent\n        && node.parent.parent\n        && node.parent.parent.type === 'VariableDeclarator'\n      );\n      const namedClass = (\n        (node.type === 'ClassDeclaration' || node.type === 'ClassExpression')\n        && node.id\n        && !!node.id.name\n      );\n\n      const namedFunctionDeclaration = (\n        (node.type === 'FunctionDeclaration' || node.type === 'FunctionExpression')\n        && node.id\n        && !!node.id.name\n      );\n\n      const namedFunctionExpression = (\n        astUtil.isFunctionLikeExpression(node)\n        && node.parent\n        && (node.parent.type === 'VariableDeclarator' || node.parent.type === 'Property' || node.parent.method === true)\n        && (!node.parent.parent || !componentUtil.isES5Component(node.parent.parent, context))\n      );\n\n      if (\n        namedObjectAssignment || namedObjectDeclaration\n        || namedClass\n        || namedFunctionDeclaration || namedFunctionExpression\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      ExpressionStatement(node) {\n        if (checkContextObjects && isCreateContext(node)) {\n          contextObjects.set(node.expression.left.name, { node, hasDisplayName: false });\n        }\n      },\n      VariableDeclarator(node) {\n        if (checkContextObjects && isCreateContext(node)) {\n          contextObjects.set(node.id.name, { node, hasDisplayName: false });\n        }\n      },\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!propsUtil.isDisplayNameDeclaration(node)) {\n          return;\n        }\n        markDisplayNameAsDeclared(node);\n      },\n\n      MemberExpression(node) {\n        if (!propsUtil.isDisplayNameDeclaration(node.property)) {\n          return;\n        }\n        if (\n          checkContextObjects\n          && node.object\n          && node.object.name\n          && contextObjects.has(node.object.name)\n        ) {\n          contextObjects.get(node.object.name).hasDisplayName = true;\n        }\n        const component = utils.getRelatedComponent(node);\n        if (!component) {\n          return;\n        }\n        markDisplayNameAsDeclared(astUtil.unwrapTSAsExpression(component.node));\n      },\n\n      'FunctionExpression, FunctionDeclaration, ArrowFunctionExpression'(node) {\n        if (ignoreTranspilerName || !hasTranspilerName(node)) {\n          return;\n        }\n        if (components.get(node)) {\n          markDisplayNameAsDeclared(node);\n        }\n      },\n\n      MethodDefinition(node) {\n        if (!propsUtil.isDisplayNameDeclaration(node.key)) {\n          return;\n        }\n        markDisplayNameAsDeclared(node);\n      },\n\n      'ClassExpression, ClassDeclaration'(node) {\n        if (ignoreTranspilerName || !hasTranspilerName(node)) {\n          return;\n        }\n        markDisplayNameAsDeclared(node);\n      },\n\n      ObjectExpression(node) {\n        if (!componentUtil.isES5Component(node, context)) {\n          return;\n        }\n        if (ignoreTranspilerName || !hasTranspilerName(node)) {\n          // Search for the displayName declaration\n          node.properties.forEach((property) => {\n            if (!property.key || !propsUtil.isDisplayNameDeclaration(property.key)) {\n              return;\n            }\n            markDisplayNameAsDeclared(node);\n          });\n          return;\n        }\n        markDisplayNameAsDeclared(node);\n      },\n\n      CallExpression(node) {\n        if (!utils.isPragmaComponentWrapper(node)) {\n          return;\n        }\n\n        if (node.arguments.length > 0 && astUtil.isFunctionLikeExpression(node.arguments[0])) {\n          // Skip over React.forwardRef declarations that are embedded within\n          // a React.memo i.e. React.memo(React.forwardRef(/* ... */))\n          // This means that we raise a single error for the call to React.memo\n          // instead of one for React.memo and one for React.forwardRef\n          const isWrappedInAnotherPragma = utils.getPragmaComponentWrapper(node);\n          if (\n            !isWrappedInAnotherPragma\n            && (ignoreTranspilerName || !hasTranspilerName(node.arguments[0]))\n          ) {\n            return;\n          }\n\n          if (components.get(node)) {\n            markDisplayNameAsDeclared(node);\n          }\n        }\n      },\n\n      'Program:exit'() {\n        const list = components.list();\n        // Report missing display name for all components\n        values(list).filter((component) => !component.hasDisplayName).forEach((component) => {\n          reportMissingDisplayName(component);\n        });\n        if (checkContextObjects) {\n          // Report missing display name for all context objects\n          forEach(\n            filter(contextObjects.values(), (v) => !v.hasDisplayName),\n            (contextObj) => reportMissingContextDisplayName(contextObj)\n          );\n        }\n      },\n    };\n  }),\n};\n", "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n", "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n", "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n", "/**\n * @fileoverview Forbid certain props on components\n * @author Joe Lencioni\n */\n\n'use strict';\n\nconst minimatch = require('minimatch');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DEFAULTS = ['className', 'style'];\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  propIsForbidden: 'Prop \"{{prop}}\" is forbidden on Components',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow certain props on components',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('forbid-component-props'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        forbid: {\n          type: 'array',\n          items: {\n            anyOf: [\n              { type: 'string' },\n              {\n                type: 'object',\n                properties: {\n                  propName: { type: 'string' },\n                  allowedFor: {\n                    type: 'array',\n                    uniqueItems: true,\n                    items: { type: 'string' },\n                  },\n                  allowedForPatterns: {\n                    type: 'array',\n                    uniqueItems: true,\n                    items: { type: 'string' },\n                  },\n                  message: { type: 'string' },\n                },\n                additionalProperties: false,\n              },\n              {\n                type: 'object',\n                properties: {\n                  propName: { type: 'string' },\n                  disallowedFor: {\n                    type: 'array',\n                    uniqueItems: true,\n                    minItems: 1,\n                    items: { type: 'string' },\n                  },\n                  disallowedForPatterns: {\n                    type: 'array',\n                    uniqueItems: true,\n                    minItems: 1,\n                    items: { type: 'string' },\n                  },\n                  message: { type: 'string' },\n                },\n                anyOf: [\n                  { required: ['disallowedFor'] },\n                  { required: ['disallowedForPatterns'] },\n                ],\n                additionalProperties: false,\n              },\n              {\n                type: 'object',\n                properties: {\n                  propNamePattern: { type: 'string' },\n                  allowedFor: {\n                    type: 'array',\n                    uniqueItems: true,\n                    items: { type: 'string' },\n                  },\n                  allowedForPatterns: {\n                    type: 'array',\n                    uniqueItems: true,\n                    items: { type: 'string' },\n                  },\n                  message: { type: 'string' },\n                },\n                additionalProperties: false,\n              },\n              {\n                type: 'object',\n                properties: {\n                  propNamePattern: { type: 'string' },\n                  disallowedFor: {\n                    type: 'array',\n                    uniqueItems: true,\n                    minItems: 1,\n                    items: { type: 'string' },\n                  },\n                  disallowedForPatterns: {\n                    type: 'array',\n                    uniqueItems: true,\n                    minItems: 1,\n                    items: { type: 'string' },\n                  },\n                  message: { type: 'string' },\n                },\n                anyOf: [\n                  { required: ['disallowedFor'] },\n                  { required: ['disallowedForPatterns'] },\n                ],\n                additionalProperties: false,\n              },\n            ],\n          },\n        },\n      },\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const forbid = new Map((configuration.forbid || DEFAULTS).map((value) => {\n      const propName = typeof value === 'string' ? value : value.propName;\n      const propPattern = value.propNamePattern;\n      const prop = propName || propPattern;\n      const options = {\n        allowList: [].concat(value.allowedFor || []),\n        allowPatternList: [].concat(value.allowedForPatterns || []),\n        disallowList: [].concat(value.disallowedFor || []),\n        disallowPatternList: [].concat(value.disallowedForPatterns || []),\n        message: typeof value === 'string' ? null : value.message,\n        isPattern: !!value.propNamePattern,\n      };\n      return [prop, options];\n    }));\n\n    function getPropOptions(prop) {\n      // Get config options having pattern\n      const propNamePatternArray = Array.from(forbid.entries()).filter((propEntry) => propEntry[1].isPattern);\n      // Match current prop with pattern options, return if matched\n      const propNamePattern = propNamePatternArray.find((propPatternVal) => minimatch(prop, propPatternVal[0]));\n      // Get options for matched propNamePattern\n      const propNamePatternOptions = propNamePattern && propNamePattern[1];\n\n      const options = forbid.get(prop) || propNamePatternOptions;\n      return options;\n    }\n\n    function isForbidden(prop, tagName) {\n      const options = getPropOptions(prop);\n      if (!options) {\n        return false;\n      }\n\n      function checkIsTagForbiddenByAllowOptions() {\n        if (options.allowList.indexOf(tagName) !== -1) {\n          return false;\n        }\n\n        if (options.allowPatternList.length === 0) {\n          return true;\n        }\n\n        return options.allowPatternList.every(\n          (pattern) => !minimatch(tagName, pattern)\n        );\n      }\n\n      function checkIsTagForbiddenByDisallowOptions() {\n        if (options.disallowList.indexOf(tagName) !== -1) {\n          return true;\n        }\n\n        if (options.disallowPatternList.length === 0) {\n          return false;\n        }\n\n        return options.disallowPatternList.some(\n          (pattern) => minimatch(tagName, pattern)\n        );\n      }\n\n      const hasDisallowOptions = options.disallowList.length > 0 || options.disallowPatternList.length > 0;\n\n      // disallowList should have a least one item (schema configuration)\n      const isTagForbidden = hasDisallowOptions\n        ? checkIsTagForbiddenByDisallowOptions()\n        : checkIsTagForbiddenByAllowOptions();\n\n      // if the tagName is undefined (`<this.something>`), we assume it's a forbidden element\n      return typeof tagName === 'undefined' || isTagForbidden;\n    }\n\n    return {\n      JSXAttribute(node) {\n        const parentName = node.parent.name;\n        // Extract a component name when using a \"namespace\", e.g. `<AntdLayout.Content />`.\n        const tag = parentName.name || `${parentName.object.name}.${parentName.property.name}`;\n        const componentName = parentName.name || parentName.property.name;\n        if (componentName && typeof componentName[0] === 'string' && componentName[0] !== componentName[0].toUpperCase()) {\n          // This is a DOM node, not a Component, so exit.\n          return;\n        }\n\n        const prop = node.name.name;\n\n        if (!isForbidden(prop, tag)) {\n          return;\n        }\n\n        const customMessage = getPropOptions(prop).message;\n\n        report(context, customMessage || messages.propIsForbidden, !customMessage && 'propIsForbidden', {\n          node,\n          data: {\n            prop,\n          },\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Forbid certain props on DOM Nodes\n * @author David Vázquez\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DEFAULTS = [];\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n/**\n * @param {Map<string, object>} forbidMap // { disallowList: null | string[], message: null | string }\n * @param {string} prop\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction isForbidden(forbidMap, prop, tagName) {\n  const options = forbidMap.get(prop);\n  return options && (\n    typeof tagName === 'undefined'\n    || !options.disallowList\n    || options.disallowList.indexOf(tagName) !== -1\n  );\n}\n\nconst messages = {\n  propIsForbidden: 'Prop \"{{prop}}\" is forbidden on DOM Nodes',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow certain props on DOM Nodes',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('forbid-dom-props'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        forbid: {\n          type: 'array',\n          items: {\n            anyOf: [{\n              type: 'string',\n            }, {\n              type: 'object',\n              properties: {\n                propName: {\n                  type: 'string',\n                },\n                disallowedFor: {\n                  type: 'array',\n                  uniqueItems: true,\n                  items: {\n                    type: 'string',\n                  },\n                },\n                message: {\n                  type: 'string',\n                },\n              },\n            }],\n            minLength: 1,\n          },\n          uniqueItems: true,\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const forbid = new Map((configuration.forbid || DEFAULTS).map((value) => {\n      const propName = typeof value === 'string' ? value : value.propName;\n      return [propName, {\n        disallowList: typeof value === 'string' ? null : (value.disallowedFor || null),\n        message: typeof value === 'string' ? null : value.message,\n      }];\n    }));\n\n    return {\n      JSXAttribute(node) {\n        const tag = node.parent.name.name;\n        if (!(tag && typeof tag === 'string' && tag[0] !== tag[0].toUpperCase())) {\n          // This is a Component, not a DOM node, so exit.\n          return;\n        }\n\n        const prop = node.name.name;\n\n        if (!isForbidden(forbid, prop, tag)) {\n          return;\n        }\n\n        const customMessage = forbid.get(prop).message;\n\n        report(context, customMessage || messages.propIsForbidden, !customMessage && 'propIsForbidden', {\n          node,\n          data: {\n            prop,\n          },\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Forbid certain elements\n * @author Kenneth Chung\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst docsUrl = require('../util/docsUrl');\nconst getText = require('../util/eslint').getText;\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  forbiddenElement: '<{{element}}> is forbidden',\n  forbiddenElement_message: '<{{element}}> is forbidden, {{message}}',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow certain elements',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('forbid-elements'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        forbid: {\n          type: 'array',\n          items: {\n            anyOf: [\n              { type: 'string' },\n              {\n                type: 'object',\n                properties: {\n                  element: { type: 'string' },\n                  message: { type: 'string' },\n                },\n                required: ['element'],\n                additionalProperties: false,\n              },\n            ],\n          },\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const forbidConfiguration = configuration.forbid || [];\n\n    /** @type {Record<string, { element: string, message?: string }>} */\n    const indexedForbidConfigs = {};\n\n    forbidConfiguration.forEach((item) => {\n      if (typeof item === 'string') {\n        indexedForbidConfigs[item] = { element: item };\n      } else {\n        indexedForbidConfigs[item.element] = item;\n      }\n    });\n\n    function reportIfForbidden(element, node) {\n      if (has(indexedForbidConfigs, element)) {\n        const message = indexedForbidConfigs[element].message;\n\n        report(\n          context,\n          message ? messages.forbiddenElement_message : messages.forbiddenElement,\n          message ? 'forbiddenElement_message' : 'forbiddenElement',\n          {\n            node,\n            data: {\n              element,\n              message,\n            },\n          }\n        );\n      }\n    }\n\n    return {\n      JSXOpeningElement(node) {\n        reportIfForbidden(getText(context, node.name), node.name);\n      },\n\n      CallExpression(node) {\n        if (!isCreateElement(context, node)) {\n          return;\n        }\n\n        const argument = node.arguments[0];\n        if (!argument) {\n          return;\n        }\n\n        if (argument.type === 'Identifier' && /^[A-Z_]/.test(argument.name)) {\n          reportIfForbidden(argument.name, argument);\n        } else if (argument.type === 'Literal' && /^[a-z][^.]*$/.test(String(argument.value))) {\n          reportIfForbidden(argument.value, argument);\n        } else if (argument.type === 'MemberExpression') {\n          reportIfForbidden(getText(context, argument), argument);\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Forbid using another component's propTypes\n * @author Ian Christian Myers\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst ast = require('../util/ast');\nconst report = require('../util/report');\n\nconst messages = {\n  forbiddenPropType: 'Using propTypes from another component is not safe because they may be removed in production builds',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow using another component\\'s propTypes',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('forbid-foreign-prop-types'),\n    },\n\n    messages,\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          allowInPropTypes: {\n            type: 'boolean',\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const config = context.options[0] || {};\n    const allowInPropTypes = config.allowInPropTypes || false;\n\n    // --------------------------------------------------------------------------\n    // Helpers\n    // --------------------------------------------------------------------------\n\n    function findParentAssignmentExpression(node) {\n      let parent = node.parent;\n\n      while (parent && parent.type !== 'Program') {\n        if (parent.type === 'AssignmentExpression') {\n          return parent;\n        }\n        parent = parent.parent;\n      }\n      return null;\n    }\n\n    function findParentClassProperty(node) {\n      let parent = node.parent;\n\n      while (parent && parent.type !== 'Program') {\n        if (parent.type === 'ClassProperty' || parent.type === 'PropertyDefinition') {\n          return parent;\n        }\n        parent = parent.parent;\n      }\n      return null;\n    }\n\n    function isAllowedAssignment(node) {\n      if (!allowInPropTypes) {\n        return false;\n      }\n\n      const assignmentExpression = findParentAssignmentExpression(node);\n\n      if (\n        assignmentExpression\n        && assignmentExpression.left\n        && assignmentExpression.left.property\n        && assignmentExpression.left.property.name === 'propTypes'\n      ) {\n        return true;\n      }\n\n      const classProperty = findParentClassProperty(node);\n\n      if (\n        classProperty\n        && classProperty.key\n        && classProperty.key.name === 'propTypes'\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    return {\n      MemberExpression(node) {\n        if (\n          (node.property\n          && (\n            !node.computed\n            && node.property.type === 'Identifier'\n            && node.property.name === 'propTypes'\n            && !ast.isAssignmentLHS(node)\n            && !isAllowedAssignment(node)\n          )) || (\n            // @ts-expect-error The JSXText type is not present in the estree type definitions\n            (node.property.type === 'Literal' || node.property.type === 'JSXText')\n            && 'value' in node.property\n            && node.property.value === 'propTypes'\n            && !ast.isAssignmentLHS(node)\n            && !isAllowedAssignment(node)\n          )\n        ) {\n          report(context, messages.forbiddenPropType, 'forbiddenPropType', {\n            node: node.property,\n          });\n        }\n      },\n\n      ObjectPattern(node) {\n        const propTypesNode = node.properties.find((property) => (\n          property.type === 'Property'\n          && 'name' in property.key\n          && property.key.name === 'propTypes'\n        ));\n\n        if (propTypesNode) {\n          report(context, messages.forbiddenPropType, 'forbiddenPropType', {\n            node: propTypesNode,\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Forbid certain propTypes\n */\n\n'use strict';\n\nconst variableUtil = require('../util/variable');\nconst propsUtil = require('../util/props');\nconst astUtil = require('../util/ast');\nconst docsUrl = require('../util/docsUrl');\nconst propWrapperUtil = require('../util/propWrapper');\nconst report = require('../util/report');\nconst getText = require('../util/eslint').getText;\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DEFAULTS = ['any', 'array', 'object'];\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  forbiddenPropType: 'Prop type \"{{target}}\" is forbidden',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow certain propTypes',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('forbid-prop-types'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        forbid: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        checkContextTypes: {\n          type: 'boolean',\n        },\n        checkChildContextTypes: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: true,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const checkContextTypes = configuration.checkContextTypes || false;\n    const checkChildContextTypes = configuration.checkChildContextTypes || false;\n    let propTypesPackageName = null;\n    let reactPackageName = null;\n    let isForeignPropTypesPackage = false;\n\n    function isPropTypesPackage(node) {\n      return (\n        node.type === 'Identifier'\n        && (\n          node.name === null\n          || node.name === propTypesPackageName\n          || !isForeignPropTypesPackage\n        )\n      ) || (\n        node.type === 'MemberExpression'\n        && (\n          node.object.name === null\n          || node.object.name === reactPackageName\n          || !isForeignPropTypesPackage\n        )\n      );\n    }\n\n    function isForbidden(type) {\n      const forbid = configuration.forbid || DEFAULTS;\n      return forbid.indexOf(type) >= 0;\n    }\n\n    function reportIfForbidden(type, declaration, target) {\n      if (isForbidden(type)) {\n        report(context, messages.forbiddenPropType, 'forbiddenPropType', {\n          node: declaration,\n          data: {\n            target,\n          },\n        });\n      }\n    }\n\n    function shouldCheckContextTypes(node) {\n      if (checkContextTypes && propsUtil.isContextTypesDeclaration(node)) {\n        return true;\n      }\n      return false;\n    }\n\n    function shouldCheckChildContextTypes(node) {\n      if (checkChildContextTypes && propsUtil.isChildContextTypesDeclaration(node)) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Checks if propTypes declarations are forbidden\n     * @param {Array} declarations The array of AST nodes being checked.\n     * @returns {void}\n     */\n    function checkProperties(declarations) {\n      if (declarations) {\n        declarations.forEach((declaration) => {\n          if (declaration.type !== 'Property') {\n            return;\n          }\n          let target;\n          let value = declaration.value;\n          if (\n            value.type === 'MemberExpression'\n            && value.property\n            && value.property.name\n            && value.property.name === 'isRequired'\n          ) {\n            value = value.object;\n          }\n          if (astUtil.isCallExpression(value)) {\n            if (!isPropTypesPackage(value.callee)) {\n              return;\n            }\n            value.arguments.forEach((arg) => {\n              const name = arg.type === 'MemberExpression' ? arg.property.name : arg.name;\n              reportIfForbidden(name, declaration, name);\n            });\n            value = value.callee;\n          }\n          if (!isPropTypesPackage(value)) {\n            return;\n          }\n          if (value.property) {\n            target = value.property.name;\n          } else if (value.type === 'Identifier') {\n            target = value.name;\n          }\n          reportIfForbidden(target, declaration, target);\n        });\n      }\n    }\n\n    function checkNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.type === 'ObjectExpression') {\n        checkProperties(node.properties);\n      } else if (node.type === 'Identifier') {\n        const propTypesObject = variableUtil.findVariableByName(context, node, node.name);\n        if (propTypesObject && propTypesObject.properties) {\n          checkProperties(propTypesObject.properties);\n        }\n      } else if (astUtil.isCallExpression(node)) {\n        const innerNode = node.arguments && node.arguments[0];\n        if (\n          propWrapperUtil.isPropWrapperFunction(context, getText(context, node.callee))\n            && innerNode\n        ) {\n          checkNode(innerNode);\n        }\n      }\n    }\n\n    return {\n      ImportDeclaration(node) {\n        if (node.source && node.source.value === 'prop-types') { // import PropType from \"prop-types\"\n          if (node.specifiers.length > 0) {\n            propTypesPackageName = node.specifiers[0].local.name;\n          }\n        } else if (node.source && node.source.value === 'react') { // import { PropTypes } from \"react\"\n          if (node.specifiers.length > 0) {\n            reactPackageName = node.specifiers[0].local.name; // guard against accidental anonymous `import \"react\"`\n          }\n          if (node.specifiers.length >= 1) {\n            const propTypesSpecifier = node.specifiers.find((specifier) => (\n              'imported' in specifier\n              && specifier.imported\n              && specifier.imported.name === 'PropTypes'\n            ));\n            if (propTypesSpecifier) {\n              propTypesPackageName = propTypesSpecifier.local.name;\n            }\n          }\n        } else { // package is not imported from \"react\" or \"prop-types\"\n          // eslint-disable-next-line no-lonely-if\n          if (node.specifiers.some((x) => x.local.name === 'PropTypes')) { // assert: node.specifiers.length > 1\n            isForeignPropTypesPackage = true;\n          }\n        }\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (\n          !propsUtil.isPropTypesDeclaration(node)\n          && !isPropTypesPackage(node)\n          && !shouldCheckContextTypes(node)\n          && !shouldCheckChildContextTypes(node)\n        ) {\n          return;\n        }\n        checkNode(node.value);\n      },\n\n      MemberExpression(node) {\n        if (\n          !propsUtil.isPropTypesDeclaration(node)\n          && !isPropTypesPackage(node)\n          && !shouldCheckContextTypes(node)\n          && !shouldCheckChildContextTypes(node)\n        ) {\n          return;\n        }\n\n        checkNode('right' in node.parent && node.parent.right);\n      },\n\n      CallExpression(node) {\n        if (\n          node.callee.type === 'MemberExpression'\n          && node.callee.object\n          && !isPropTypesPackage(node.callee.object)\n          && !propsUtil.isPropTypesDeclaration(node.callee)\n        ) {\n          return;\n        }\n\n        if (\n          node.arguments.length > 0\n          && (\n            ('name' in node.callee && node.callee.name === 'shape')\n            || astUtil.getPropertyName(node.callee) === 'shape'\n          )\n        ) {\n          checkProperties('properties' in node.arguments[0] && node.arguments[0].properties);\n        }\n      },\n\n      MethodDefinition(node) {\n        if (\n          !propsUtil.isPropTypesDeclaration(node)\n          && !isPropTypesPackage(node)\n          && !shouldCheckContextTypes(node)\n          && !shouldCheckChildContextTypes(node)\n        ) {\n          return;\n        }\n\n        const returnStatement = astUtil.findReturnStatement(node);\n\n        if (returnStatement && returnStatement.argument) {\n          checkNode(returnStatement.argument);\n        }\n      },\n\n      ObjectExpression(node) {\n        node.properties.forEach((property) => {\n          if (!('key' in property) || !property.key) {\n            return;\n          }\n\n          if (\n            !propsUtil.isPropTypesDeclaration(property)\n            && !isPropTypesPackage(property)\n            && !shouldCheckContextTypes(property)\n            && !shouldCheckChildContextTypes(property)\n          ) {\n            return;\n          }\n          if (property.value.type === 'ObjectExpression') {\n            checkProperties(property.value.properties);\n          }\n        });\n      },\n\n    };\n  },\n};\n", "/**\n * @fileoverview Require all forwardRef components include a ref parameter\n */\n\n'use strict';\n\nconst isParenthesized = require('../util/ast').isParenthesized;\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst getMessageData = require('../util/message');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n/**\n * @param {ASTNode} node\n * @returns {boolean} If the node represents the identifier `forwardRef`.\n */\nfunction isForwardRefIdentifier(node) {\n  return node.type === 'Identifier' && node.name === 'forwardRef';\n}\n\n/**\n * @param {ASTNode} node\n * @returns {boolean} If the node represents a function call `forwardRef()` or `React.forwardRef()`.\n */\nfunction isForwardRefCall(node) {\n  return (\n    node.type === 'CallExpression'\n    && (\n      isForwardRefIdentifier(node.callee)\n      || (node.callee.type === 'MemberExpression' && isForwardRefIdentifier(node.callee.property))\n    )\n  );\n}\n\nconst messages = {\n  missingRefParameter: 'forwardRef is used with this component but no ref parameter is set',\n  addRefParameter: 'Add a ref parameter',\n  removeForwardRef: 'Remove forwardRef wrapper',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Require all forwardRef components include a ref parameter',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('forward-ref-uses-ref'),\n    },\n    messages,\n    schema: [],\n    type: 'suggestion',\n    hasSuggestions: true,\n  },\n\n  create(context) {\n    const sourceCode = context.getSourceCode();\n\n    return {\n      'FunctionExpression, ArrowFunctionExpression'(node) {\n        if (!isForwardRefCall(node.parent)) {\n          return;\n        }\n\n        if (node.params.length === 1) {\n          report(context, messages.missingRefParameter, 'missingRefParameter', {\n            node,\n            suggest: [\n              Object.assign(\n                getMessageData('addRefParameter', messages.addRefParameter),\n                {\n                  fix(fixer) {\n                    const param = node.params[0];\n                    // If using shorthand arrow function syntax, add parentheses around the new parameter pair\n                    const shouldAddParentheses = node.type === 'ArrowFunctionExpression' && !isParenthesized(context, param);\n                    return [].concat(\n                      shouldAddParentheses ? fixer.insertTextBefore(param, '(') : [],\n                      fixer.insertTextAfter(param, `, ref${shouldAddParentheses ? ')' : ''}`)\n                    );\n                  },\n                }\n              ),\n              Object.assign(\n                getMessageData('removeForwardRef', messages.removeForwardRef),\n                {\n                  fix(fixer) {\n                    return fixer.replaceText(node.parent, sourceCode.getText(node));\n                  },\n                }\n              ),\n            ],\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Standardize the way function component get defined\n * @author Stefan Wullems\n */\n\n'use strict';\n\nconst arrayIncludes = require('array-includes');\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst reportC = require('../util/report');\nconst getText = require('../util/eslint').getText;\nconst propsUtil = require('../util/props');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction buildFunction(template, parts) {\n  return Object.keys(parts).reduce(\n    (acc, key) => acc.replace(`{${key}}`, () => parts[key] || ''),\n    template\n  );\n}\n\nconst NAMED_FUNCTION_TEMPLATES = {\n  'function-declaration': 'function {name}{typeParams}({params}){returnType} {body}',\n  'arrow-function': '{varType} {name}{typeAnnotation} = {typeParams}({params}){returnType} => {body}',\n  'function-expression': '{varType} {name}{typeAnnotation} = function{typeParams}({params}){returnType} {body}',\n};\n\nconst UNNAMED_FUNCTION_TEMPLATES = {\n  'function-expression': 'function{typeParams}({params}){returnType} {body}',\n  'arrow-function': '{typeParams}({params}){returnType} => {body}',\n};\n\nfunction hasOneUnconstrainedTypeParam(node) {\n  const nodeTypeArguments = propsUtil.getTypeArguments(node);\n\n  return nodeTypeArguments\n    && nodeTypeArguments.params\n    && nodeTypeArguments.params.length === 1\n    && !nodeTypeArguments.params[0].constraint;\n}\n\nfunction hasName(node) {\n  return (\n    node.type === 'FunctionDeclaration'\n    || node.parent.type === 'VariableDeclarator'\n  );\n}\n\nfunction getNodeText(prop, source) {\n  if (!prop) return null;\n  return source.slice(prop.range[0], prop.range[1]);\n}\n\nfunction getName(node) {\n  if (node.type === 'FunctionDeclaration') {\n    return node.id.name;\n  }\n\n  if (\n    node.type === 'ArrowFunctionExpression'\n    || node.type === 'FunctionExpression'\n  ) {\n    return hasName(node) && node.parent.id.name;\n  }\n}\n\nfunction getParams(node, source) {\n  if (node.params.length === 0) return null;\n  return source.slice(\n    node.params[0].range[0],\n    node.params[node.params.length - 1].range[1]\n  );\n}\n\nfunction getBody(node, source) {\n  const range = node.body.range;\n\n  if (node.body.type !== 'BlockStatement') {\n    return ['{', `  return ${source.slice(range[0], range[1])}`, '}'].join('\\n');\n  }\n\n  return source.slice(range[0], range[1]);\n}\n\nfunction getTypeAnnotation(node, source) {\n  if (!hasName(node) || node.type === 'FunctionDeclaration') return;\n\n  if (\n    node.type === 'ArrowFunctionExpression'\n    || node.type === 'FunctionExpression'\n  ) {\n    return getNodeText(node.parent.id.typeAnnotation, source);\n  }\n}\n\nfunction isUnfixableBecauseOfExport(node) {\n  return (\n    node.type === 'FunctionDeclaration'\n    && node.parent\n    && node.parent.type === 'ExportDefaultDeclaration'\n  );\n}\n\nfunction isFunctionExpressionWithName(node) {\n  return node.type === 'FunctionExpression' && node.id && node.id.name;\n}\n\nconst messages = {\n  'function-declaration': 'Function component is not a function declaration',\n  'function-expression': 'Function component is not a function expression',\n  'arrow-function': 'Function component is not an arrow function',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce a specific function type for function components',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('function-component-definition'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          namedComponents: {\n            anyOf: [\n              {\n                enum: [\n                  'function-declaration',\n                  'arrow-function',\n                  'function-expression',\n                ],\n              },\n              {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  enum: [\n                    'function-declaration',\n                    'arrow-function',\n                    'function-expression',\n                  ],\n                },\n              },\n            ],\n          },\n          unnamedComponents: {\n            anyOf: [\n              { enum: ['arrow-function', 'function-expression'] },\n              {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  enum: ['arrow-function', 'function-expression'],\n                },\n              },\n            ],\n          },\n        },\n      },\n    ],\n  },\n\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    let fileVarType = 'var';\n\n    const namedConfig = [].concat(\n      configuration.namedComponents || 'function-declaration'\n    );\n    const unnamedConfig = [].concat(\n      configuration.unnamedComponents || 'function-expression'\n    );\n\n    function getFixer(node, options) {\n      const source = getText(context);\n\n      const typeAnnotation = getTypeAnnotation(node, source);\n\n      if (options.type === 'function-declaration' && typeAnnotation) {\n        return;\n      }\n      if (options.type === 'arrow-function' && hasOneUnconstrainedTypeParam(node)) {\n        return;\n      }\n      if (isUnfixableBecauseOfExport(node)) return;\n      if (isFunctionExpressionWithName(node)) return;\n      let varType = fileVarType;\n      if (\n        (node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression')\n        && node.parent.type === 'VariableDeclarator'\n      ) {\n        varType = node.parent.parent.kind;\n      }\n\n      const nodeTypeArguments = propsUtil.getTypeArguments(node);\n      return (fixer) => fixer.replaceTextRange(\n        options.range,\n        buildFunction(options.template, {\n          typeAnnotation,\n          typeParams: getNodeText(nodeTypeArguments, source),\n          params: getParams(node, source),\n          returnType: getNodeText(node.returnType, source),\n          body: getBody(node, source),\n          name: getName(node),\n          varType,\n        })\n      );\n    }\n\n    function report(node, options) {\n      reportC(context, messages[options.messageId], options.messageId, {\n        node,\n        fix: getFixer(node, options.fixerOptions),\n      });\n    }\n\n    function validate(node, functionType) {\n      if (!components.get(node)) return;\n\n      if (node.parent && node.parent.type === 'Property') return;\n\n      if (hasName(node) && !arrayIncludes(namedConfig, functionType)) {\n        report(node, {\n          messageId: namedConfig[0],\n          fixerOptions: {\n            type: namedConfig[0],\n            template: NAMED_FUNCTION_TEMPLATES[namedConfig[0]],\n            range:\n              node.type === 'FunctionDeclaration'\n                ? node.range\n                : node.parent.parent.range,\n          },\n        });\n      }\n      if (!hasName(node) && !arrayIncludes(unnamedConfig, functionType)) {\n        report(node, {\n          messageId: unnamedConfig[0],\n          fixerOptions: {\n            type: unnamedConfig[0],\n            template: UNNAMED_FUNCTION_TEMPLATES[unnamedConfig[0]],\n            range: node.range,\n          },\n        });\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n    const validatePairs = [];\n    let hasES6OrJsx = false;\n    return {\n      FunctionDeclaration(node) {\n        validatePairs.push([node, 'function-declaration']);\n      },\n      ArrowFunctionExpression(node) {\n        validatePairs.push([node, 'arrow-function']);\n      },\n      FunctionExpression(node) {\n        validatePairs.push([node, 'function-expression']);\n      },\n      VariableDeclaration(node) {\n        hasES6OrJsx = hasES6OrJsx || node.kind === 'const' || node.kind === 'let';\n      },\n      'Program:exit'() {\n        if (hasES6OrJsx) fileVarType = 'const';\n        validatePairs.forEach((pair) => validate(pair[0], pair[1]));\n      },\n      'ImportDeclaration, ExportNamedDeclaration, ExportDefaultDeclaration, ExportAllDeclaration, ExportSpecifier, ExportDefaultSpecifier, JSXElement, TSExportAssignment, TSImportEqualsDeclaration'() {\n        hasES6OrJsx = true;\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Ensure symmetric naming of useState hook value and setter variables\n * @author Duncan Beevers\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst getMessageData = require('../util/message');\nconst getText = require('../util/eslint').getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction isNodeDestructuring(node) {\n  return node && (node.type === 'ArrayPattern' || node.type === 'ObjectPattern');\n}\n\nconst messages = {\n  useStateErrorMessage: 'useState call is not destructured into value + setter pair',\n  useStateErrorMessageOrAddOption: 'useState call is not destructured into value + setter pair (you can allow destructuring by enabling \"allowDestructuredState\" option)',\n  suggestPair: 'Destructure useState call into value + setter pair',\n  suggestMemo: 'Replace useState call with useMemo',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Ensure destructuring and symmetric naming of useState hook value and setter variables',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('hook-use-state'),\n    },\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        allowDestructuredState: {\n          default: false,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n    type: 'suggestion',\n    hasSuggestions: true,\n  },\n\n  create: Components.detect((context, components, util) => {\n    const configuration = context.options[0] || {};\n    const allowDestructuredState = configuration.allowDestructuredState || false;\n\n    return {\n      CallExpression(node) {\n        const isImmediateReturn = node.parent\n          && node.parent.type === 'ReturnStatement';\n\n        if (isImmediateReturn || !util.isReactHookCall(node, ['useState'])) {\n          return;\n        }\n\n        const isDestructuringDeclarator = node.parent\n          && node.parent.type === 'VariableDeclarator'\n          && node.parent.id.type === 'ArrayPattern';\n\n        if (!isDestructuringDeclarator) {\n          report(\n            context,\n            messages.useStateErrorMessage,\n            'useStateErrorMessage',\n            {\n              node,\n              suggest: false,\n            }\n          );\n          return;\n        }\n\n        const variableNodes = node.parent.id.elements;\n        const valueVariable = variableNodes[0];\n        const setterVariable = variableNodes[1];\n        const isOnlyValueDestructuring = isNodeDestructuring(valueVariable) && !isNodeDestructuring(setterVariable);\n\n        if (allowDestructuredState && isOnlyValueDestructuring) {\n          return;\n        }\n\n        const valueVariableName = valueVariable\n          ? valueVariable.name\n          : undefined;\n\n        const setterVariableName = setterVariable\n          ? setterVariable.name\n          : undefined;\n\n        const caseCandidateMatch = valueVariableName ? valueVariableName.match(/(^[a-z]+)(.*)/) : undefined;\n        const upperCaseCandidatePrefix = caseCandidateMatch ? caseCandidateMatch[1] : undefined;\n        const caseCandidateSuffix = caseCandidateMatch ? caseCandidateMatch[2] : undefined;\n        const expectedSetterVariableNames = upperCaseCandidatePrefix ? [\n          `set${upperCaseCandidatePrefix.charAt(0).toUpperCase()}${upperCaseCandidatePrefix.slice(1)}${caseCandidateSuffix}`,\n          `set${upperCaseCandidatePrefix.toUpperCase()}${caseCandidateSuffix}`,\n        ] : [];\n\n        const isSymmetricGetterSetterPair = valueVariable\n          && setterVariable\n          && expectedSetterVariableNames.indexOf(setterVariableName) !== -1\n          && variableNodes.length === 2;\n\n        if (!isSymmetricGetterSetterPair) {\n          const suggestions = [\n            Object.assign(\n              getMessageData('suggestPair', messages.suggestPair),\n              {\n                fix(fixer) {\n                  if (expectedSetterVariableNames.length > 0) {\n                    return fixer.replaceTextRange(\n                      node.parent.id.range,\n                      `[${valueVariableName}, ${expectedSetterVariableNames[0]}]`\n                    );\n                  }\n                },\n              }\n            ),\n          ];\n\n          const defaultReactImports = components.getDefaultReactImports();\n          const defaultReactImportSpecifier = defaultReactImports\n            ? defaultReactImports[0]\n            : undefined;\n\n          const defaultReactImportName = defaultReactImportSpecifier\n            ? defaultReactImportSpecifier.local.name\n            : undefined;\n\n          const namedReactImports = components.getNamedReactImports();\n          const useStateReactImportSpecifier = namedReactImports\n            ? namedReactImports.find((specifier) => specifier.imported.name === 'useState')\n            : undefined;\n\n          const isSingleGetter = valueVariable && variableNodes.length === 1;\n          const isUseStateCalledWithSingleArgument = node.arguments.length === 1;\n          if (isSingleGetter && isUseStateCalledWithSingleArgument) {\n            const useMemoReactImportSpecifier = namedReactImports\n              && namedReactImports.find((specifier) => specifier.imported.name === 'useMemo');\n\n            let useMemoCode;\n            if (useMemoReactImportSpecifier) {\n              useMemoCode = useMemoReactImportSpecifier.local.name;\n            } else if (defaultReactImportName) {\n              useMemoCode = `${defaultReactImportName}.useMemo`;\n            } else {\n              useMemoCode = 'useMemo';\n            }\n\n            suggestions.unshift(Object.assign(\n              getMessageData('suggestMemo', messages.suggestMemo),\n              {\n                fix: (fixer) => [\n                  // Add useMemo import, if necessary\n                  useStateReactImportSpecifier\n                    && (!useMemoReactImportSpecifier || defaultReactImportName)\n                    && fixer.insertTextAfter(useStateReactImportSpecifier, ', useMemo'),\n                  // Convert single-value destructure to simple assignment\n                  fixer.replaceTextRange(node.parent.id.range, valueVariableName),\n                  // Convert useState call to useMemo + arrow function + dependency array\n                  fixer.replaceTextRange(\n                    node.range,\n                    `${useMemoCode}(() => ${getText(context, node.arguments[0])}, [])`\n                  ),\n                ].filter(Boolean),\n              }\n            ));\n          }\n\n          if (isOnlyValueDestructuring) {\n            report(\n              context,\n              messages.useStateErrorMessageOrAddOption,\n              'useStateErrorMessageOrAddOption',\n              {\n                node: node.parent.id,\n                suggest: false,\n              }\n            );\n            return;\n          }\n\n          report(\n            context,\n            messages.useStateErrorMessage,\n            'useStateErrorMessage',\n            {\n              node: node.parent.id,\n              suggest: suggestions,\n            }\n          );\n        }\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview TBD\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\nconst messages = {\n  attributeMissing: 'An iframe element is missing a sandbox attribute',\n  invalidValue: 'An iframe element defines a sandbox attribute with invalid value \"{{ value }}\"',\n  invalidCombination: 'An iframe element defines a sandbox attribute with both allow-scripts and allow-same-origin which is invalid',\n};\n\nconst ALLOWED_VALUES = [\n  // From https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n  '',\n  'allow-downloads-without-user-activation',\n  'allow-downloads',\n  'allow-forms',\n  'allow-modals',\n  'allow-orientation-lock',\n  'allow-pointer-lock',\n  'allow-popups',\n  'allow-popups-to-escape-sandbox',\n  'allow-presentation',\n  'allow-same-origin',\n  'allow-scripts',\n  'allow-storage-access-by-user-activation',\n  'allow-top-navigation',\n  'allow-top-navigation-by-user-activation',\n];\n\nfunction validateSandboxAttribute(context, node, attribute) {\n  if (typeof attribute !== 'string') {\n    // Only string literals are supported for now\n    return;\n  }\n  const values = attribute.split(' ');\n  let allowScripts = false;\n  let allowSameOrigin = false;\n  values.forEach((attributeValue) => {\n    const trimmedAttributeValue = attributeValue.trim();\n    if (ALLOWED_VALUES.indexOf(trimmedAttributeValue) === -1) {\n      report(context, messages.invalidValue, 'invalidValue', {\n        node,\n        data: {\n          value: trimmedAttributeValue,\n        },\n      });\n    }\n    if (trimmedAttributeValue === 'allow-scripts') {\n      allowScripts = true;\n    }\n    if (trimmedAttributeValue === 'allow-same-origin') {\n      allowSameOrigin = true;\n    }\n  });\n  if (allowScripts && allowSameOrigin) {\n    report(context, messages.invalidCombination, 'invalidCombination', {\n      node,\n    });\n  }\n}\n\nfunction checkAttributes(context, node) {\n  let sandboxAttributeFound = false;\n  node.attributes.forEach((attribute) => {\n    if (attribute.type === 'JSXAttribute'\n        && attribute.name\n        && attribute.name.type === 'JSXIdentifier'\n        && attribute.name.name === 'sandbox'\n    ) {\n      sandboxAttributeFound = true;\n      if (\n        attribute.value\n        && attribute.value.type === 'Literal'\n        && attribute.value.value\n      ) {\n        validateSandboxAttribute(context, node, attribute.value.value);\n      }\n    }\n  });\n  if (!sandboxAttributeFound) {\n    report(context, messages.attributeMissing, 'attributeMissing', {\n      node,\n    });\n  }\n}\n\nfunction checkProps(context, node) {\n  let sandboxAttributeFound = false;\n  if (node.arguments.length > 1) {\n    const props = node.arguments[1];\n    const sandboxProp = props.properties && props.properties.find((x) => x.type === 'Property' && x.key.name === 'sandbox');\n    if (sandboxProp) {\n      sandboxAttributeFound = true;\n      if (sandboxProp.value && sandboxProp.value.type === 'Literal' && sandboxProp.value.value) {\n        validateSandboxAttribute(context, node, sandboxProp.value.value);\n      }\n    }\n  }\n  if (!sandboxAttributeFound) {\n    report(context, messages.attributeMissing, 'attributeMissing', {\n      node,\n    });\n  }\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce sandbox attribute on iframe elements',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('iframe-missing-sandbox'),\n    },\n\n    schema: [],\n\n    messages,\n  },\n\n  create(context) {\n    return {\n      'JSXOpeningElement[name.name=\"iframe\"]'(node) {\n        checkAttributes(context, node);\n      },\n\n      CallExpression(node) {\n        if (isCreateElement(context, node) && node.arguments && node.arguments.length > 0) {\n          const tag = node.arguments[0];\n          if (tag.type === 'Literal' && tag.value === 'iframe') {\n            checkProps(context, node);\n          }\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce boolean attributes notation in JSX\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst exceptionsSchema = {\n  type: 'array',\n  items: { type: 'string', minLength: 1 },\n  uniqueItems: true,\n};\n\nconst ALWAYS = 'always';\nconst NEVER = 'never';\n\n/**\n * @param {string} configuration\n * @param {Set<string>} exceptions\n * @param {string} propName\n * @returns {boolean} propName\n */\nfunction isAlways(configuration, exceptions, propName) {\n  const isException = exceptions.has(propName);\n  if (configuration === ALWAYS) {\n    return !isException;\n  }\n  return isException;\n}\n/**\n * @param {string} configuration\n * @param {Set<string>} exceptions\n * @param {string} propName\n * @returns {boolean} propName\n */\nfunction isNever(configuration, exceptions, propName) {\n  const isException = exceptions.has(propName);\n  if (configuration === NEVER) {\n    return !isException;\n  }\n  return isException;\n}\n\nconst messages = {\n  omitBoolean: 'Value must be omitted for boolean attribute `{{propName}}`',\n  setBoolean: 'Value must be set for boolean attribute `{{propName}}`',\n  omitPropAndBoolean: 'Value must be omitted for `false` attribute: `{{propName}}`',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce boolean attributes notation in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-boolean-value'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: {\n      anyOf: [{\n        type: 'array',\n        items: [{ enum: [ALWAYS, NEVER] }],\n        additionalItems: false,\n      }, {\n        type: 'array',\n        items: [{\n          enum: [ALWAYS],\n        }, {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            [NEVER]: exceptionsSchema,\n            assumeUndefinedIsFalse: {\n              type: 'boolean',\n            },\n          },\n        }],\n        additionalItems: false,\n      }, {\n        type: 'array',\n        items: [{\n          enum: [NEVER],\n        }, {\n          type: 'object',\n          additionalProperties: false,\n          properties: {\n            [ALWAYS]: exceptionsSchema,\n            assumeUndefinedIsFalse: {\n              type: 'boolean',\n            },\n          },\n        }],\n        additionalItems: false,\n      }],\n    },\n  },\n\n  create(context) {\n    const configuration = context.options[0] || NEVER;\n    const configObject = context.options[1] || {};\n    const exceptions = new Set((configuration === ALWAYS ? configObject[NEVER] : configObject[ALWAYS]) || []);\n\n    return {\n      JSXAttribute(node) {\n        const propName = node.name && node.name.name;\n        const value = node.value;\n\n        if (\n          isAlways(configuration, exceptions, propName)\n          && value === null\n        ) {\n          const messageId = 'setBoolean';\n          const data = { propName };\n          report(context, messages[messageId], messageId, {\n            node,\n            data,\n            fix(fixer) {\n              return fixer.insertTextAfter(node, '={true}');\n            },\n          });\n        }\n        if (\n          isNever(configuration, exceptions, propName)\n          && value\n          && value.type === 'JSXExpressionContainer'\n          && value.expression.value === true\n        ) {\n          const messageId = 'omitBoolean';\n          const data = { propName };\n          report(context, messages[messageId], messageId, {\n            node,\n            data,\n            fix(fixer) {\n              return fixer.removeRange([node.name.range[1], value.range[1]]);\n            },\n          });\n        }\n        if (\n          isNever(configuration, exceptions, propName)\n          && configObject.assumeUndefinedIsFalse\n          && value\n          && value.type === 'JSXExpressionContainer'\n          && value.expression.value === false\n        ) {\n          const messageId = 'omitPropAndBoolean';\n          const data = { propName };\n          report(context, messages[messageId], messageId, {\n            node,\n            data,\n            fix(fixer) {\n              return fixer.removeRange([node.name.range[0], value.range[1]]);\n            },\n          });\n        }\n      },\n    };\n  },\n};\n", "'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// This list is taken from https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\n\n// Note: 'br' is not included because whitespace around br tags is inconsequential to the rendered output\nconst INLINE_ELEMENTS = new Set([\n  'a',\n  'abbr',\n  'acronym',\n  'b',\n  'bdo',\n  'big',\n  'button',\n  'cite',\n  'code',\n  'dfn',\n  'em',\n  'i',\n  'img',\n  'input',\n  'kbd',\n  'label',\n  'map',\n  'object',\n  'q',\n  'samp',\n  'script',\n  'select',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'sup',\n  'textarea',\n  'tt',\n  'var',\n]);\n\nconst messages = {\n  spacingAfterPrev: 'Ambiguous spacing after previous element {{element}}',\n  spacingBeforeNext: 'Ambiguous spacing before next element {{element}}',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce or disallow spaces inside of curly braces in JSX attributes and expressions',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-child-element-spacing'),\n    },\n    fixable: null,\n\n    messages,\n\n    schema: [],\n  },\n  create(context) {\n    const TEXT_FOLLOWING_ELEMENT_PATTERN = /^\\s*\\n\\s*\\S/;\n    const TEXT_PRECEDING_ELEMENT_PATTERN = /\\S\\s*\\n\\s*$/;\n\n    const elementName = (node) => (\n      node.openingElement\n      && node.openingElement.name\n      && node.openingElement.name.type === 'JSXIdentifier'\n      && node.openingElement.name.name\n    );\n\n    const isInlineElement = (node) => (\n      node.type === 'JSXElement'\n      && INLINE_ELEMENTS.has(elementName(node))\n    );\n\n    const handleJSX = (node) => {\n      let lastChild = null;\n      let child = null;\n      (node.children.concat([null])).forEach((nextChild) => {\n        if (\n          (lastChild || nextChild)\n          && (!lastChild || isInlineElement(lastChild))\n          && (child && (child.type === 'Literal' || child.type === 'JSXText'))\n          && (!nextChild || isInlineElement(nextChild))\n          && true\n        ) {\n          if (lastChild && child.value.match(TEXT_FOLLOWING_ELEMENT_PATTERN)) {\n            report(context, messages.spacingAfterPrev, 'spacingAfterPrev', {\n              node: lastChild,\n              loc: lastChild.loc.end,\n              data: {\n                element: elementName(lastChild),\n              },\n            });\n          } else if (nextChild && child.value.match(TEXT_PRECEDING_ELEMENT_PATTERN)) {\n            report(context, messages.spacingBeforeNext, 'spacingBeforeNext', {\n              node: nextChild,\n              loc: nextChild.loc.start,\n              data: {\n                element: elementName(nextChild),\n              },\n            });\n          }\n        }\n        lastChild = child;\n        child = nextChild;\n      });\n    };\n\n    return {\n      JSXElement: handleJSX,\n      JSXFragment: handleJSX,\n    };\n  },\n};\n", "'use strict';\n\n// TODO; semver-major: remove\n\nmodule.exports = require('call-bind');\n", "'use strict';\n\nmodule.exports = require('es-object-atoms/RequireObjectCoercible');\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/6.0/#sec-tostring\n\nmodule.exports = function ToString(argument) {\n\tif (typeof argument === 'symbol') {\n\t\tthrow new $TypeError('Cannot convert a Symbol value to a string');\n\t}\n\treturn $String(argument);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $abs = GetIntrinsic('%Math.abs%');\n\n// http://262.ecma-international.org/5.1/#sec-5.2\n\nmodule.exports = function abs(x) {\n\treturn $abs(x);\n};\n", "'use strict';\n\n// var modulo = require('./modulo');\nvar $floor = Math.floor;\n\n// http://262.ecma-international.org/5.1/#sec-5.2\n\nmodule.exports = function floor(x) {\n\t// return x - modulo(x, 1);\n\treturn $floor(x);\n};\n", "'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n", "'use strict';\n\n// http://262.ecma-international.org/5.1/#sec-9.1\n\nmodule.exports = require('es-to-primitive/es5');\n", "'use strict';\n\nvar ToPrimitive = require('./ToPrimitive');\n\nvar callBound = require('call-bind/callBound');\n\nvar $replace = callBound('String.prototype.replace');\n\nvar safeRegexTester = require('safe-regex-test');\n\nvar isNonDecimal = safeRegexTester(/^0[ob]|^[+-]0x/);\n\n// http://262.ecma-international.org/5.1/#sec-9.3\n\nmodule.exports = function ToNumber(value) {\n\tvar prim = ToPrimitive(value, Number);\n\tif (typeof prim !== 'string') {\n\t\treturn +prim; // eslint-disable-line no-implicit-coercion\n\t}\n\n\tvar trimmed = $replace(\n\t\tprim,\n\t\t// eslint-disable-next-line no-control-regex\n\t\t/^[ \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u0085]+|[ \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u0085]+$/g,\n\t\t''\n\t);\n\tif (isNonDecimal(trimmed)) {\n\t\treturn NaN;\n\t}\n\n\treturn +trimmed; // eslint-disable-line no-implicit-coercion\n};\n", "'use strict';\n\nmodule.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n", "'use strict';\n\nvar abs = require('./abs');\nvar floor = require('./floor');\nvar ToNumber = require('./ToNumber');\n\nvar $isNaN = require('../helpers/isNaN');\nvar $isFinite = require('../helpers/isFinite');\nvar $sign = require('../helpers/sign');\n\n// http://262.ecma-international.org/5.1/#sec-9.4\n\nmodule.exports = function ToInteger(value) {\n\tvar number = ToNumber(value);\n\tif ($isNaN(number)) { return 0; }\n\tif (number === 0 || !$isFinite(number)) { return number; }\n\treturn $sign(number) * floor(abs(number));\n};\n", "'use strict';\n\nvar toPrimitive = require('es-to-primitive/es2015');\n\n// https://262.ecma-international.org/6.0/#sec-toprimitive\n\nmodule.exports = function ToPrimitive(input) {\n\tif (arguments.length > 1) {\n\t\treturn toPrimitive(input, arguments[1]);\n\t}\n\treturn toPrimitive(input);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = require('es-errors/type');\nvar $Number = GetIntrinsic('%Number%');\nvar $RegExp = GetIntrinsic('%RegExp%');\nvar $parseInteger = GetIntrinsic('%parseInt%');\n\nvar callBound = require('call-bind/callBound');\nvar regexTester = require('safe-regex-test');\nvar isPrimitive = require('../helpers/isPrimitive');\n\nvar $strSlice = callBound('String.prototype.slice');\nvar isBinary = regexTester(/^0b[01]+$/i);\nvar isOctal = regexTester(/^0o[0-7]+$/i);\nvar isInvalidHexLiteral = regexTester(/^[-+]0x[0-9a-f]+$/i);\nvar nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = regexTester(nonWSregex);\n\nvar $trim = require('string.prototype.trim');\n\nvar ToPrimitive = require('./ToPrimitive');\n\n// https://262.ecma-international.org/6.0/#sec-tonumber\n\nmodule.exports = function ToNumber(argument) {\n\tvar value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);\n\tif (typeof value === 'symbol') {\n\t\tthrow new $TypeError('Cannot convert a Symbol value to a number');\n\t}\n\tif (typeof value === 'string') {\n\t\tif (isBinary(value)) {\n\t\t\treturn ToNumber($parseInteger($strSlice(value, 2), 2));\n\t\t} else if (isOctal(value)) {\n\t\t\treturn ToNumber($parseInteger($strSlice(value, 2), 8));\n\t\t} else if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n\t\t\treturn NaN;\n\t\t}\n\t\tvar trimmed = $trim(value);\n\t\tif (trimmed !== value) {\n\t\t\treturn ToNumber(trimmed);\n\t\t}\n\n\t}\n\treturn $Number(value);\n};\n", "'use strict';\n\nvar ES5ToInteger = require('../5/ToInteger');\n\nvar ToNumber = require('./ToNumber');\n\n// https://262.ecma-international.org/6.0/#sec-tointeger\n\nmodule.exports = function ToInteger(value) {\n\tvar number = ToNumber(value);\n\treturn ES5ToInteger(number);\n};\n", "/*! https://mths.be/repeat v1.0.0 by @mathias */\n\n'use strict';\n\nvar RequireObjectCoercible = require('es-abstract/2019/RequireObjectCoercible');\nvar ToString = require('es-abstract/2019/ToString');\nvar ToInteger = require('es-abstract/2019/ToInteger');\n\nmodule.exports = function repeat(count) {\n\tvar O = RequireObjectCoercible(this);\n\tvar string = ToString(O);\n\tvar n = ToInteger(count);\n\t// Account for out-of-bounds indices\n\tif (n < 0 || n == Infinity) {\n\t\tthrow RangeError('String.prototype.repeat argument must be greater than or equal to 0 and not be Infinity');\n\t}\n\n\tvar result = '';\n\twhile (n) {\n\t\tif (n % 2 == 1) {\n\t\t\tresult += string;\n\t\t}\n\t\tif (n > 1) {\n\t\t\tstring += string;\n\t\t}\n\t\tn >>= 1;\n\t}\n\treturn result;\n};\n", "/*! https://mths.be/repeat v1.0.0 by @mathias */\n\n'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn String.prototype.repeat || implementation;\n};\n", "/*! https://mths.be/repeat v1.0.0 by @mathias */\n\n'use strict';\n\nvar define = require('define-properties');\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimRepeat() {\n\tvar polyfill = getPolyfill();\n\n\tif (String.prototype.repeat !== polyfill) {\n\t\tdefine(String.prototype, { repeat: polyfill });\n\t}\n\n\treturn polyfill;\n};\n", "/*! https://mths.be/repeat v1.0.0 by @mathias */\n\n'use strict';\n\nvar callBind = require('es-abstract/helpers/callBind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundRepeat = callBind(getPolyfill());\n\ndefine(boundRepeat, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundRepeat;\n", "/**\n * @fileoverview Validate closing bracket location in JSX\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst repeat = require('string.prototype.repeat');\n\nconst docsUrl = require('../util/docsUrl');\nconst getSourceCode = require('../util/eslint').getSourceCode;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  bracketLocation: 'The closing bracket must be {{location}}{{details}}',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce closing bracket location in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-closing-bracket-location'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      anyOf: [\n        {\n          enum: ['after-props', 'props-aligned', 'tag-aligned', 'line-aligned'],\n        },\n        {\n          type: 'object',\n          properties: {\n            location: {\n              enum: ['after-props', 'props-aligned', 'tag-aligned', 'line-aligned'],\n            },\n          },\n          additionalProperties: false,\n        }, {\n          type: 'object',\n          properties: {\n            nonEmpty: {\n              enum: ['after-props', 'props-aligned', 'tag-aligned', 'line-aligned', false],\n            },\n            selfClosing: {\n              enum: ['after-props', 'props-aligned', 'tag-aligned', 'line-aligned', false],\n            },\n          },\n          additionalProperties: false,\n        },\n      ],\n    }],\n  },\n\n  create(context) {\n    const MESSAGE_LOCATION = {\n      'after-props': 'placed after the last prop',\n      'after-tag': 'placed after the opening tag',\n      'props-aligned': 'aligned with the last prop',\n      'tag-aligned': 'aligned with the opening tag',\n      'line-aligned': 'aligned with the line containing the opening tag',\n    };\n    const DEFAULT_LOCATION = 'tag-aligned';\n\n    const config = context.options[0];\n    const options = {\n      nonEmpty: DEFAULT_LOCATION,\n      selfClosing: DEFAULT_LOCATION,\n    };\n\n    if (typeof config === 'string') {\n      // simple shorthand [1, 'something']\n      options.nonEmpty = config;\n      options.selfClosing = config;\n    } else if (typeof config === 'object') {\n      // [1, {location: 'something'}] (back-compat)\n      if (has(config, 'location')) {\n        options.nonEmpty = config.location;\n        options.selfClosing = config.location;\n      }\n      // [1, {nonEmpty: 'something'}]\n      if (has(config, 'nonEmpty')) {\n        options.nonEmpty = config.nonEmpty;\n      }\n      // [1, {selfClosing: 'something'}]\n      if (has(config, 'selfClosing')) {\n        options.selfClosing = config.selfClosing;\n      }\n    }\n\n    /**\n     * Get expected location for the closing bracket\n     * @param {Object} tokens Locations of the opening bracket, closing bracket and last prop\n     * @return {string} Expected location for the closing bracket\n     */\n    function getExpectedLocation(tokens) {\n      let location;\n      // Is always after the opening tag if there is no props\n      if (typeof tokens.lastProp === 'undefined') {\n        location = 'after-tag';\n      // Is always after the last prop if this one is on the same line as the opening bracket\n      } else if (tokens.opening.line === tokens.lastProp.lastLine) {\n        location = 'after-props';\n      // Else use configuration dependent on selfClosing property\n      } else {\n        location = tokens.selfClosing ? options.selfClosing : options.nonEmpty;\n      }\n      return location;\n    }\n\n    /**\n     * Get the correct 0-indexed column for the closing bracket, given the\n     * expected location.\n     * @param {Object} tokens Locations of the opening bracket, closing bracket and last prop\n     * @param {string} expectedLocation Expected location for the closing bracket\n     * @return {?Number} The correct column for the closing bracket, or null\n     */\n    function getCorrectColumn(tokens, expectedLocation) {\n      switch (expectedLocation) {\n        case 'props-aligned':\n          return tokens.lastProp.column;\n        case 'tag-aligned':\n          return tokens.opening.column;\n        case 'line-aligned':\n          return tokens.openingStartOfLine.column;\n        default:\n          return null;\n      }\n    }\n\n    /**\n     * Check if the closing bracket is correctly located\n     * @param {Object} tokens Locations of the opening bracket, closing bracket and last prop\n     * @param {string} expectedLocation Expected location for the closing bracket\n     * @return {boolean} True if the closing bracket is correctly located, false if not\n     */\n    function hasCorrectLocation(tokens, expectedLocation) {\n      switch (expectedLocation) {\n        case 'after-tag':\n          return tokens.tag.line === tokens.closing.line;\n        case 'after-props':\n          return tokens.lastProp.lastLine === tokens.closing.line;\n        case 'props-aligned':\n        case 'tag-aligned':\n        case 'line-aligned': {\n          const correctColumn = getCorrectColumn(tokens, expectedLocation);\n          return correctColumn === tokens.closing.column;\n        }\n        default:\n          return true;\n      }\n    }\n\n    /**\n     * Get the characters used for indentation on the line to be matched\n     * @param {Object} tokens Locations of the opening bracket, closing bracket and last prop\n     * @param {string} expectedLocation Expected location for the closing bracket\n     * @param {number} [correctColumn] Expected column for the closing bracket. Default to 0\n     * @return {string} The characters used for indentation\n     */\n    function getIndentation(tokens, expectedLocation, correctColumn) {\n      const newColumn = correctColumn || 0;\n      let indentation;\n      let spaces = '';\n      switch (expectedLocation) {\n        case 'props-aligned':\n          indentation = /^\\s*/.exec(getSourceCode(context).lines[tokens.lastProp.firstLine - 1])[0];\n          break;\n        case 'tag-aligned':\n        case 'line-aligned':\n          indentation = /^\\s*/.exec(getSourceCode(context).lines[tokens.opening.line - 1])[0];\n          break;\n        default:\n          indentation = '';\n      }\n      if (indentation.length + 1 < newColumn) {\n        // Non-whitespace characters were included in the column offset\n        spaces = repeat(' ', +correctColumn - indentation.length);\n      }\n      return indentation + spaces;\n    }\n\n    /**\n     * Get the locations of the opening bracket, closing bracket, last prop, and\n     * start of opening line.\n     * @param {ASTNode} node The node to check\n     * @return {Object} Locations of the opening bracket, closing bracket, last\n     * prop and start of opening line.\n     */\n    function getTokensLocations(node) {\n      const sourceCode = getSourceCode(context);\n      const opening = sourceCode.getFirstToken(node).loc.start;\n      const closing = sourceCode.getLastTokens(node, node.selfClosing ? 2 : 1)[0].loc.start;\n      const tag = sourceCode.getFirstToken(node.name).loc.start;\n      let lastProp;\n      if (node.attributes.length) {\n        lastProp = node.attributes[node.attributes.length - 1];\n        lastProp = {\n          column: sourceCode.getFirstToken(lastProp).loc.start.column,\n          firstLine: sourceCode.getFirstToken(lastProp).loc.start.line,\n          lastLine: sourceCode.getLastToken(lastProp).loc.end.line,\n        };\n      }\n      const openingLine = sourceCode.lines[opening.line - 1];\n      const closingLine = sourceCode.lines[closing.line - 1];\n      const isTab = {\n        openTab: /^\\t/.test(openingLine),\n        closeTab: /^\\t/.test(closingLine),\n      };\n      const openingStartOfLine = {\n        column: /^\\s*/.exec(openingLine)[0].length,\n        line: opening.line,\n      };\n      return {\n        isTab,\n        tag,\n        opening,\n        closing,\n        lastProp,\n        selfClosing: node.selfClosing,\n        openingStartOfLine,\n      };\n    }\n\n    /**\n     * Get an unique ID for a given JSXOpeningElement\n     *\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {string} Unique ID (based on its range)\n     */\n    function getOpeningElementId(node) {\n      return node.range.join(':');\n    }\n\n    const lastAttributeNode = {};\n\n    return {\n      JSXAttribute(node) {\n        lastAttributeNode[getOpeningElementId(node.parent)] = node;\n      },\n\n      JSXSpreadAttribute(node) {\n        lastAttributeNode[getOpeningElementId(node.parent)] = node;\n      },\n\n      'JSXOpeningElement:exit'(node) {\n        const attributeNode = lastAttributeNode[getOpeningElementId(node)];\n        const cachedLastAttributeEndPos = attributeNode ? attributeNode.range[1] : null;\n\n        let expectedNextLine;\n        const tokens = getTokensLocations(node);\n        const expectedLocation = getExpectedLocation(tokens);\n        let usingSameIndentation = true;\n\n        if (expectedLocation === 'tag-aligned') {\n          usingSameIndentation = tokens.isTab.openTab === tokens.isTab.closeTab;\n        }\n\n        if (hasCorrectLocation(tokens, expectedLocation) && usingSameIndentation) {\n          return;\n        }\n\n        const data = {\n          location: MESSAGE_LOCATION[expectedLocation],\n          details: '',\n        };\n        const correctColumn = getCorrectColumn(tokens, expectedLocation);\n\n        if (correctColumn !== null) {\n          expectedNextLine = tokens.lastProp\n            && (tokens.lastProp.lastLine === tokens.closing.line);\n          data.details = ` (expected column ${correctColumn + 1}${expectedNextLine ? ' on the next line)' : ')'}`;\n        }\n\n        report(context, messages.bracketLocation, 'bracketLocation', {\n          node,\n          loc: tokens.closing,\n          data,\n          fix(fixer) {\n            const closingTag = tokens.selfClosing ? '/>' : '>';\n            switch (expectedLocation) {\n              case 'after-tag':\n                if (cachedLastAttributeEndPos) {\n                  return fixer.replaceTextRange([cachedLastAttributeEndPos, node.range[1]],\n                    (expectedNextLine ? '\\n' : '') + closingTag);\n                }\n                return fixer.replaceTextRange([node.name.range[1], node.range[1]],\n                  (expectedNextLine ? '\\n' : ' ') + closingTag);\n              case 'after-props':\n                return fixer.replaceTextRange([cachedLastAttributeEndPos, node.range[1]],\n                  (expectedNextLine ? '\\n' : '') + closingTag);\n              case 'props-aligned':\n              case 'tag-aligned':\n              case 'line-aligned':\n                return fixer.replaceTextRange([cachedLastAttributeEndPos, node.range[1]],\n                  `\\n${getIndentation(tokens, expectedLocation, correctColumn)}${closingTag}`);\n              default:\n                return true;\n            }\n          },\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Validate closing tag location in JSX\n * @author Ross Solomon\n */\n\n'use strict';\n\nconst repeat = require('string.prototype.repeat');\nconst has = require('hasown');\n\nconst astUtil = require('../util/ast');\nconst docsUrl = require('../util/docsUrl');\nconst getSourceCode = require('../util/eslint').getSourceCode;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  onOwnLine: 'Closing tag of a multiline JSX expression must be on its own line.',\n  matchIndent: 'Expected closing tag to match indentation of opening.',\n  alignWithOpening: 'Expected closing tag to be aligned with the line containing the opening tag',\n};\n\nconst defaultOption = 'tag-aligned';\n\nconst optionMessageMap = {\n  'tag-aligned': 'matchIndent',\n  'line-aligned': 'alignWithOpening',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce closing tag location for multiline JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-closing-tag-location'),\n    },\n    fixable: 'whitespace',\n    messages,\n    schema: [{\n      anyOf: [\n        {\n          enum: ['tag-aligned', 'line-aligned'],\n        },\n        {\n          type: 'object',\n          properties: {\n            location: {\n              enum: ['tag-aligned', 'line-aligned'],\n            },\n          },\n          additionalProperties: false,\n        },\n      ],\n    }],\n  },\n\n  create(context) {\n    const config = context.options[0];\n    let option = defaultOption;\n\n    if (typeof config === 'string') {\n      option = config;\n    } else if (typeof config === 'object') {\n      if (has(config, 'location')) {\n        option = config.location;\n      }\n    }\n\n    function getIndentation(openingStartOfLine, opening) {\n      if (option === 'line-aligned') return openingStartOfLine.column;\n      if (option === 'tag-aligned') return opening.loc.start.column;\n    }\n\n    function handleClosingElement(node) {\n      if (!node.parent) {\n        return;\n      }\n      const sourceCode = getSourceCode(context);\n\n      const opening = node.parent.openingElement || node.parent.openingFragment;\n      const openingLoc = sourceCode.getFirstToken(opening).loc.start;\n      const openingLine = sourceCode.lines[openingLoc.line - 1];\n\n      const openingStartOfLine = {\n        column: /^\\s*/.exec(openingLine)[0].length,\n        line: openingLoc.line,\n      };\n\n      if (opening.loc.start.line === node.loc.start.line) {\n        return;\n      }\n\n      if (\n        opening.loc.start.column === node.loc.start.column\n        && option === 'tag-aligned'\n      ) {\n        return;\n      }\n\n      if (\n        openingStartOfLine.column === node.loc.start.column\n        && option === 'line-aligned'\n      ) {\n        return;\n      }\n\n      const messageId = astUtil.isNodeFirstInLine(context, node)\n        ? optionMessageMap[option]\n        : 'onOwnLine';\n\n      report(context, messages[messageId], messageId, {\n        node,\n        loc: node.loc,\n        fix(fixer) {\n          const indent = repeat(\n            ' ',\n            getIndentation(openingStartOfLine, opening)\n          );\n\n          if (astUtil.isNodeFirstInLine(context, node)) {\n            return fixer.replaceTextRange(\n              [node.range[0] - node.loc.start.column, node.range[0]],\n              indent\n            );\n          }\n\n          return fixer.insertTextBefore(node, `\\n${indent}`);\n        },\n      });\n    }\n\n    return {\n      JSXClosingElement: handleClosingElement,\n      JSXClosingFragment: handleClosingElement,\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce or disallow spaces inside of curly braces in JSX attributes.\n * @author Jamund Ferguson\n * @author Brandyn Bennett\n * @author Michael Ficarra\n * @author Vignesh Anand\n * @author Jamund Ferguson\n * @author Yannick Croissant\n * @author Erik Wendel\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst docsUrl = require('../util/docsUrl');\nconst getSourceCode = require('../util/eslint').getSourceCode;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst SPACING = {\n  always: 'always',\n  never: 'never',\n};\nconst SPACING_VALUES = [SPACING.always, SPACING.never];\n\nconst messages = {\n  noNewlineAfter: 'There should be no newline after \\'{{token}}\\'',\n  noNewlineBefore: 'There should be no newline before \\'{{token}}\\'',\n  noSpaceAfter: 'There should be no space after \\'{{token}}\\'',\n  noSpaceBefore: 'There should be no space before \\'{{token}}\\'',\n  spaceNeededAfter: 'A space is required after \\'{{token}}\\'',\n  spaceNeededBefore: 'A space is required before \\'{{token}}\\'',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce or disallow spaces inside of curly braces in JSX attributes and expressions',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-curly-spacing'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: {\n      definitions: {\n        basicConfig: {\n          type: 'object',\n          properties: {\n            when: {\n              enum: SPACING_VALUES,\n            },\n            allowMultiline: {\n              type: 'boolean',\n            },\n            spacing: {\n              type: 'object',\n              properties: {\n                objectLiterals: {\n                  enum: SPACING_VALUES,\n                },\n              },\n            },\n          },\n        },\n        basicConfigOrBoolean: {\n          anyOf: [{\n            $ref: '#/definitions/basicConfig',\n          }, {\n            type: 'boolean',\n          }],\n        },\n      },\n      type: 'array',\n      items: [{\n        anyOf: [{\n          allOf: [{\n            $ref: '#/definitions/basicConfig',\n          }, {\n            type: 'object',\n            properties: {\n              attributes: {\n                $ref: '#/definitions/basicConfigOrBoolean',\n              },\n              children: {\n                $ref: '#/definitions/basicConfigOrBoolean',\n              },\n            },\n          }],\n        }, {\n          enum: SPACING_VALUES,\n        }],\n      }, {\n        type: 'object',\n        properties: {\n          allowMultiline: {\n            type: 'boolean',\n          },\n          spacing: {\n            type: 'object',\n            properties: {\n              objectLiterals: {\n                enum: SPACING_VALUES,\n              },\n            },\n          },\n        },\n        additionalProperties: false,\n      }],\n    },\n  },\n\n  create(context) {\n    function normalizeConfig(configOrTrue, defaults, lastPass) {\n      const config = configOrTrue === true ? {} : configOrTrue;\n      const when = config.when || defaults.when;\n      const allowMultiline = has(config, 'allowMultiline') ? config.allowMultiline : defaults.allowMultiline;\n      const spacing = config.spacing || {};\n      let objectLiteralSpaces = spacing.objectLiterals || defaults.objectLiteralSpaces;\n      if (lastPass) {\n        // On the final pass assign the values that should be derived from others if they are still undefined\n        objectLiteralSpaces = objectLiteralSpaces || when;\n      }\n\n      return {\n        when,\n        allowMultiline,\n        objectLiteralSpaces,\n      };\n    }\n\n    const DEFAULT_WHEN = SPACING.never;\n    const DEFAULT_ALLOW_MULTILINE = true;\n    const DEFAULT_ATTRIBUTES = true;\n    const DEFAULT_CHILDREN = false;\n\n    let originalConfig = context.options[0] || {};\n    if (SPACING_VALUES.indexOf(originalConfig) !== -1) {\n      originalConfig = Object.assign({ when: context.options[0] }, context.options[1]);\n    }\n    const defaultConfig = normalizeConfig(originalConfig, {\n      when: DEFAULT_WHEN,\n      allowMultiline: DEFAULT_ALLOW_MULTILINE,\n    });\n    const attributes = has(originalConfig, 'attributes') ? originalConfig.attributes : DEFAULT_ATTRIBUTES;\n    const attributesConfig = attributes ? normalizeConfig(attributes, defaultConfig, true) : null;\n    const children = has(originalConfig, 'children') ? originalConfig.children : DEFAULT_CHILDREN;\n    const childrenConfig = children ? normalizeConfig(children, defaultConfig, true) : null;\n\n    // --------------------------------------------------------------------------\n    // Helpers\n    // --------------------------------------------------------------------------\n\n    /**\n     * Determines whether two adjacent tokens have a newline between them.\n     * @param {Object} left - The left token object.\n     * @param {Object} right - The right token object.\n     * @returns {boolean} Whether or not there is a newline between the tokens.\n     */\n    function isMultiline(left, right) {\n      return left.loc.end.line !== right.loc.start.line;\n    }\n\n    /**\n     * Trims text of whitespace between two ranges\n     * @param {Fixer} fixer - the eslint fixer object\n     * @param {number} fromLoc - the start location\n     * @param {number} toLoc - the end location\n     * @param {string} mode - either 'start' or 'end'\n     * @param {string=} spacing - a spacing value that will optionally add a space to the removed text\n     * @returns {Object|*|{range, text}}\n     */\n    function fixByTrimmingWhitespace(fixer, fromLoc, toLoc, mode, spacing) {\n      let replacementText = getSourceCode(context).text.slice(fromLoc, toLoc);\n      if (mode === 'start') {\n        replacementText = replacementText.replace(/^\\s+/gm, '');\n      } else {\n        replacementText = replacementText.replace(/\\s+$/gm, '');\n      }\n      if (spacing === SPACING.always) {\n        if (mode === 'start') {\n          replacementText += ' ';\n        } else {\n          replacementText = ` ${replacementText}`;\n        }\n      }\n      return fixer.replaceTextRange([fromLoc, toLoc], replacementText);\n    }\n\n    /**\n    * Reports that there shouldn't be a newline after the first token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @param {string} spacing\n    * @returns {void}\n    */\n    function reportNoBeginningNewline(node, token, spacing) {\n      report(context, messages.noNewlineAfter, 'noNewlineAfter', {\n        node,\n        loc: token.loc.start,\n        data: {\n          token: token.value,\n        },\n        fix(fixer) {\n          const nextToken = getSourceCode(context).getTokenAfter(token);\n          return fixByTrimmingWhitespace(fixer, token.range[1], nextToken.range[0], 'start', spacing);\n        },\n      });\n    }\n\n    /**\n    * Reports that there shouldn't be a newline before the last token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @param {string} spacing\n    * @returns {void}\n    */\n    function reportNoEndingNewline(node, token, spacing) {\n      report(context, messages.noNewlineBefore, 'noNewlineBefore', {\n        node,\n        loc: token.loc.start,\n        data: {\n          token: token.value,\n        },\n        fix(fixer) {\n          const previousToken = getSourceCode(context).getTokenBefore(token);\n          return fixByTrimmingWhitespace(fixer, previousToken.range[1], token.range[0], 'end', spacing);\n        },\n      });\n    }\n\n    /**\n    * Reports that there shouldn't be a space after the first token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @returns {void}\n    */\n    function reportNoBeginningSpace(node, token) {\n      report(context, messages.noSpaceAfter, 'noSpaceAfter', {\n        node,\n        loc: token.loc.start,\n        data: {\n          token: token.value,\n        },\n        fix(fixer) {\n          const sourceCode = getSourceCode(context);\n          const nextToken = sourceCode.getTokenAfter(token);\n          let nextComment;\n\n          // eslint >=4.x\n          if (sourceCode.getCommentsAfter) {\n            nextComment = sourceCode.getCommentsAfter(token);\n          // eslint 3.x\n          } else {\n            const potentialComment = sourceCode.getTokenAfter(token, { includeComments: true });\n            nextComment = nextToken === potentialComment ? [] : [potentialComment];\n          }\n\n          // Take comments into consideration to narrow the fix range to what is actually affected. (See #1414)\n          if (nextComment.length > 0) {\n            return fixByTrimmingWhitespace(fixer, token.range[1], Math.min(nextToken.range[0], nextComment[0].range[0]), 'start');\n          }\n\n          return fixByTrimmingWhitespace(fixer, token.range[1], nextToken.range[0], 'start');\n        },\n      });\n    }\n\n    /**\n    * Reports that there shouldn't be a space before the last token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @returns {void}\n    */\n    function reportNoEndingSpace(node, token) {\n      report(context, messages.noSpaceBefore, 'noSpaceBefore', {\n        node,\n        loc: token.loc.start,\n        data: {\n          token: token.value,\n        },\n        fix(fixer) {\n          const sourceCode = getSourceCode(context);\n          const previousToken = sourceCode.getTokenBefore(token);\n          let previousComment;\n\n          // eslint >=4.x\n          if (sourceCode.getCommentsBefore) {\n            previousComment = sourceCode.getCommentsBefore(token);\n          // eslint 3.x\n          } else {\n            const potentialComment = sourceCode.getTokenBefore(token, { includeComments: true });\n            previousComment = previousToken === potentialComment ? [] : [potentialComment];\n          }\n\n          // Take comments into consideration to narrow the fix range to what is actually affected. (See #1414)\n          if (previousComment.length > 0) {\n            return fixByTrimmingWhitespace(fixer, Math.max(previousToken.range[1], previousComment[0].range[1]), token.range[0], 'end');\n          }\n\n          return fixByTrimmingWhitespace(fixer, previousToken.range[1], token.range[0], 'end');\n        },\n      });\n    }\n\n    /**\n    * Reports that there should be a space after the first token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @returns {void}\n    */\n    function reportRequiredBeginningSpace(node, token) {\n      report(context, messages.spaceNeededAfter, 'spaceNeededAfter', {\n        node,\n        loc: token.loc.start,\n        data: {\n          token: token.value,\n        },\n        fix(fixer) {\n          return fixer.insertTextAfter(token, ' ');\n        },\n      });\n    }\n\n    /**\n    * Reports that there should be a space before the last token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @returns {void}\n    */\n    function reportRequiredEndingSpace(node, token) {\n      report(context, messages.spaceNeededBefore, 'spaceNeededBefore', {\n        node,\n        loc: token.loc.start,\n        data: {\n          token: token.value,\n        },\n        fix(fixer) {\n          return fixer.insertTextBefore(token, ' ');\n        },\n      });\n    }\n\n    /**\n     * Determines if spacing in curly braces is valid.\n     * @param {ASTNode} node The AST node to check.\n     * @returns {void}\n     */\n    function validateBraceSpacing(node) {\n      let config;\n      switch (node.parent.type) {\n        case 'JSXAttribute':\n        case 'JSXOpeningElement':\n          config = attributesConfig;\n          break;\n\n        case 'JSXElement':\n        case 'JSXFragment':\n          config = childrenConfig;\n          break;\n\n        default:\n          return;\n      }\n      if (config === null) {\n        return;\n      }\n\n      const sourceCode = getSourceCode(context);\n      const first = sourceCode.getFirstToken(node);\n      const last = sourceCode.getLastToken(node);\n      let second = sourceCode.getTokenAfter(first, { includeComments: true });\n      let penultimate = sourceCode.getTokenBefore(last, { includeComments: true });\n\n      if (!second) {\n        second = sourceCode.getTokenAfter(first);\n        const leadingComments = sourceCode.getNodeByRangeIndex(second.range[0]).leadingComments;\n        second = leadingComments ? leadingComments[0] : second;\n      }\n      if (!penultimate) {\n        penultimate = sourceCode.getTokenBefore(last);\n        const trailingComments = sourceCode.getNodeByRangeIndex(penultimate.range[0]).trailingComments;\n        penultimate = trailingComments ? trailingComments[trailingComments.length - 1] : penultimate;\n      }\n\n      const isObjectLiteral = first.value === second.value;\n      const spacing = isObjectLiteral ? config.objectLiteralSpaces : config.when;\n      if (spacing === SPACING.always) {\n        if (!sourceCode.isSpaceBetweenTokens(first, second)) {\n          reportRequiredBeginningSpace(node, first);\n        } else if (!config.allowMultiline && isMultiline(first, second)) {\n          reportNoBeginningNewline(node, first, spacing);\n        }\n        if (!sourceCode.isSpaceBetweenTokens(penultimate, last)) {\n          reportRequiredEndingSpace(node, last);\n        } else if (!config.allowMultiline && isMultiline(penultimate, last)) {\n          reportNoEndingNewline(node, last, spacing);\n        }\n      } else if (spacing === SPACING.never) {\n        if (isMultiline(first, second)) {\n          if (!config.allowMultiline) {\n            reportNoBeginningNewline(node, first, spacing);\n          }\n        } else if (sourceCode.isSpaceBetweenTokens(first, second)) {\n          reportNoBeginningSpace(node, first);\n        }\n        if (isMultiline(penultimate, last)) {\n          if (!config.allowMultiline) {\n            reportNoEndingNewline(node, last, spacing);\n          }\n        } else if (sourceCode.isSpaceBetweenTokens(penultimate, last)) {\n          reportNoEndingSpace(node, last);\n        }\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXExpressionContainer: validateBraceSpacing,\n      JSXSpreadAttribute: validateBraceSpacing,\n    };\n  },\n};\n", "/**\n * @fileoverview enforce consistent line breaks inside jsx curly\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst eslintUtil = require('../util/eslint');\nconst report = require('../util/report');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction getNormalizedOption(context) {\n  const rawOption = context.options[0] || 'consistent';\n\n  if (rawOption === 'consistent') {\n    return {\n      multiline: 'consistent',\n      singleline: 'consistent',\n    };\n  }\n\n  if (rawOption === 'never') {\n    return {\n      multiline: 'forbid',\n      singleline: 'forbid',\n    };\n  }\n\n  return {\n    multiline: rawOption.multiline || 'consistent',\n    singleline: rawOption.singleline || 'consistent',\n  };\n}\n\nconst messages = {\n  expectedBefore: 'Expected newline before \\'}\\'.',\n  expectedAfter: 'Expected newline after \\'{\\'.',\n  unexpectedBefore: 'Unexpected newline before \\'}\\'.',\n  unexpectedAfter: 'Unexpected newline after \\'{\\'.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    type: 'layout',\n\n    docs: {\n      description: 'Enforce consistent linebreaks in curly braces in JSX attributes and expressions',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-curly-newline'),\n    },\n\n    fixable: 'whitespace',\n\n    schema: [\n      {\n        anyOf: [\n          {\n            enum: ['consistent', 'never'],\n          },\n          {\n            type: 'object',\n            properties: {\n              singleline: { enum: ['consistent', 'require', 'forbid'] },\n              multiline: { enum: ['consistent', 'require', 'forbid'] },\n            },\n            additionalProperties: false,\n          },\n        ],\n      },\n    ],\n\n    messages,\n  },\n\n  create(context) {\n    const sourceCode = getSourceCode(context);\n    const option = getNormalizedOption(context);\n\n    // ----------------------------------------------------------------------\n    // Helpers\n    // ----------------------------------------------------------------------\n\n    /**\n     * Determines whether two adjacent tokens are on the same line.\n     * @param {Object} left - The left token object.\n     * @param {Object} right - The right token object.\n     * @returns {boolean} Whether or not the tokens are on the same line.\n     */\n    function isTokenOnSameLine(left, right) {\n      return left.loc.end.line === right.loc.start.line;\n    }\n\n    /**\n     * Determines whether there should be newlines inside curlys\n     * @param {ASTNode} expression The expression contained in the curlys\n     * @param {boolean} hasLeftNewline `true` if the left curly has a newline in the current code.\n     * @returns {boolean} `true` if there should be newlines inside the function curlys\n     */\n    function shouldHaveNewlines(expression, hasLeftNewline) {\n      const isMultiline = expression.loc.start.line !== expression.loc.end.line;\n\n      switch (isMultiline ? option.multiline : option.singleline) {\n        case 'forbid': return false;\n        case 'require': return true;\n        case 'consistent':\n        default: return hasLeftNewline;\n      }\n    }\n\n    /**\n     * Validates curlys\n     * @param {Object} curlys An object with keys `leftParen` for the left paren token, and `rightParen` for the right paren token\n     * @param {ASTNode} expression The expression inside the curly\n     * @returns {void}\n     */\n    function validateCurlys(curlys, expression) {\n      const leftCurly = curlys.leftCurly;\n      const rightCurly = curlys.rightCurly;\n      const tokenAfterLeftCurly = sourceCode.getTokenAfter(leftCurly);\n      const tokenBeforeRightCurly = sourceCode.getTokenBefore(rightCurly);\n      const hasLeftNewline = !isTokenOnSameLine(leftCurly, tokenAfterLeftCurly);\n      const hasRightNewline = !isTokenOnSameLine(tokenBeforeRightCurly, rightCurly);\n      const needsNewlines = shouldHaveNewlines(expression, hasLeftNewline);\n\n      if (hasLeftNewline && !needsNewlines) {\n        report(context, messages.unexpectedAfter, 'unexpectedAfter', {\n          node: leftCurly,\n          fix(fixer) {\n            return getText(context)\n              .slice(leftCurly.range[1], tokenAfterLeftCurly.range[0])\n              .trim()\n              ? null // If there is a comment between the { and the first element, don't do a fix.\n              : fixer.removeRange([leftCurly.range[1], tokenAfterLeftCurly.range[0]]);\n          },\n        });\n      } else if (!hasLeftNewline && needsNewlines) {\n        report(context, messages.expectedAfter, 'expectedAfter', {\n          node: leftCurly,\n          fix: (fixer) => fixer.insertTextAfter(leftCurly, '\\n'),\n        });\n      }\n\n      if (hasRightNewline && !needsNewlines) {\n        report(context, messages.unexpectedBefore, 'unexpectedBefore', {\n          node: rightCurly,\n          fix(fixer) {\n            return getText(context)\n              .slice(tokenBeforeRightCurly.range[1], rightCurly.range[0])\n              .trim()\n              ? null // If there is a comment between the last element and the }, don't do a fix.\n              : fixer.removeRange([\n                tokenBeforeRightCurly.range[1],\n                rightCurly.range[0],\n              ]);\n          },\n        });\n      } else if (!hasRightNewline && needsNewlines) {\n        report(context, messages.expectedBefore, 'expectedBefore', {\n          node: rightCurly,\n          fix: (fixer) => fixer.insertTextBefore(rightCurly, '\\n'),\n        });\n      }\n    }\n\n    // ----------------------------------------------------------------------\n    // Public\n    // ----------------------------------------------------------------------\n\n    return {\n      JSXExpressionContainer(node) {\n        const curlyTokens = {\n          leftCurly: sourceCode.getFirstToken(node),\n          rightCurly: sourceCode.getLastToken(node),\n        };\n        validateCurlys(curlyTokens, node.expression);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Disallow or enforce spaces around equal signs in JSX attributes.\n * @author ryym\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst getSourceCode = require('../util/eslint').getSourceCode;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noSpaceBefore: 'There should be no space before \\'=\\'',\n  noSpaceAfter: 'There should be no space after \\'=\\'',\n  needSpaceBefore: 'A space is required before \\'=\\'',\n  needSpaceAfter: 'A space is required after \\'=\\'',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce or disallow spaces around equal signs in JSX attributes',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-equals-spacing'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const config = context.options[0] || 'never';\n\n    /**\n     * Determines a given attribute node has an equal sign.\n     * @param {ASTNode} attrNode - The attribute node.\n     * @returns {boolean} Whether or not the attriute node has an equal sign.\n     */\n    function hasEqual(attrNode) {\n      return attrNode.type !== 'JSXSpreadAttribute' && attrNode.value !== null;\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXOpeningElement(node) {\n        node.attributes.forEach((attrNode) => {\n          if (!hasEqual(attrNode)) {\n            return;\n          }\n\n          const sourceCode = getSourceCode(context);\n          const equalToken = sourceCode.getTokenAfter(attrNode.name);\n          const spacedBefore = sourceCode.isSpaceBetweenTokens(attrNode.name, equalToken);\n          const spacedAfter = sourceCode.isSpaceBetweenTokens(equalToken, attrNode.value);\n\n          if (config === 'never') {\n            if (spacedBefore) {\n              report(context, messages.noSpaceBefore, 'noSpaceBefore', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n                fix(fixer) {\n                  return fixer.removeRange([attrNode.name.range[1], equalToken.range[0]]);\n                },\n              });\n            }\n            if (spacedAfter) {\n              report(context, messages.noSpaceAfter, 'noSpaceAfter', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n                fix(fixer) {\n                  return fixer.removeRange([equalToken.range[1], attrNode.value.range[0]]);\n                },\n              });\n            }\n          } else if (config === 'always') {\n            if (!spacedBefore) {\n              report(context, messages.needSpaceBefore, 'needSpaceBefore', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n                fix(fixer) {\n                  return fixer.insertTextBefore(equalToken, ' ');\n                },\n              });\n            }\n            if (!spacedAfter) {\n              report(context, messages.needSpaceAfter, 'needSpaceAfter', {\n                node: attrNode,\n                loc: equalToken.loc.start,\n                fix(fixer) {\n                  return fixer.insertTextAfter(equalToken, ' ');\n                },\n              });\n            }\n          }\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Restrict file extensions that may contain JSX\n * @author Joe Lencioni\n */\n\n'use strict';\n\nconst path = require('path');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DEFAULTS = {\n  allow: 'always',\n  extensions: ['.jsx'],\n  ignoreFilesWithoutCode: false,\n};\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noJSXWithExtension: 'JSX not allowed in files with extension \\'{{ext}}\\'',\n  extensionOnlyForJSX: 'Only files containing JSX may use the extension \\'{{ext}}\\'',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow file extensions that may contain JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-filename-extension'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allow: {\n          enum: ['always', 'as-needed'],\n        },\n        extensions: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        ignoreFilesWithoutCode: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const filename = context.getFilename();\n\n    let jsxNode;\n\n    if (filename === '<text>') {\n      // No need to traverse any nodes.\n      return {};\n    }\n\n    const allow = (context.options[0] && context.options[0].allow) || DEFAULTS.allow;\n    const allowedExtensions = (context.options[0] && context.options[0].extensions) || DEFAULTS.extensions;\n    const ignoreFilesWithoutCode = (context.options[0] && context.options[0].ignoreFilesWithoutCode)\n      || DEFAULTS.ignoreFilesWithoutCode;\n    const isAllowedExtension = allowedExtensions.some((extension) => filename.slice(-extension.length) === extension);\n\n    function handleJSX(node) {\n      if (!jsxNode) {\n        jsxNode = node;\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXElement: handleJSX,\n      JSXFragment: handleJSX,\n\n      'Program:exit'(node) {\n        if (jsxNode) {\n          if (!isAllowedExtension) {\n            report(context, messages.noJSXWithExtension, 'noJSXWithExtension', {\n              node: jsxNode,\n              data: {\n                ext: path.extname(filename),\n              },\n            });\n          }\n          return;\n        }\n\n        if (isAllowedExtension && allow === 'as-needed') {\n          if (ignoreFilesWithoutCode && node.body.length === 0) {\n            return;\n          }\n          report(context, messages.extensionOnlyForJSX, 'extensionOnlyForJSX', {\n            node,\n            data: {\n              ext: path.extname(filename),\n            },\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Ensure proper position of the first property in JSX\n * @author Joachim Seminck\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst propsUtil = require('../util/props');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  propOnNewLine: 'Property should be placed on a new line',\n  propOnSameLine: 'Property should be placed on the same line as the component declaration',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce proper position of the first property in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-first-prop-new-line'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never', 'multiline', 'multiline-multiprop', 'multiprop'],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || 'multiline-multiprop';\n\n    function isMultilineJSX(jsxNode) {\n      return jsxNode.loc.start.line < jsxNode.loc.end.line;\n    }\n\n    return {\n      JSXOpeningElement(node) {\n        if (\n          (configuration === 'multiline' && isMultilineJSX(node))\n          || (configuration === 'multiline-multiprop' && isMultilineJSX(node) && node.attributes.length > 1)\n          || (configuration === 'multiprop' && node.attributes.length > 1)\n          || (configuration === 'always')\n        ) {\n          node.attributes.some((decl) => {\n            if (decl.loc.start.line === node.loc.start.line) {\n              report(context, messages.propOnNewLine, 'propOnNewLine', {\n                node: decl,\n                fix(fixer) {\n                  const nodeTypeArguments = propsUtil.getTypeArguments(node);\n                  return fixer.replaceTextRange([(nodeTypeArguments || node.name).range[1], decl.range[0]], '\\n');\n                },\n              });\n            }\n            return true;\n          });\n        } else if (\n          (configuration === 'never' && node.attributes.length > 0)\n          || (configuration === 'multiprop' && isMultilineJSX(node) && node.attributes.length <= 1)\n        ) {\n          const firstNode = node.attributes[0];\n          if (node.loc.start.line < firstNode.loc.start.line) {\n            report(context, messages.propOnSameLine, 'propOnSameLine', {\n              node: firstNode,\n              fix(fixer) {\n                return fixer.replaceTextRange([node.name.range[1], firstNode.range[0]], ' ');\n              },\n            });\n          }\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce event handler naming conventions in JSX\n * @author Jake Marsh\n */\n\n'use strict';\n\nconst minimatch = require('minimatch');\nconst docsUrl = require('../util/docsUrl');\nconst getText = require('../util/eslint').getText;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  badHandlerName: 'Handler function for {{propKey}} prop key must be a camelCase name beginning with \\'{{handlerPrefix}}\\' only',\n  badPropKey: 'Prop key for {{propValue}} must begin with \\'{{handlerPropPrefix}}\\'',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce event handler naming conventions in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-handler-names'),\n    },\n\n    messages,\n\n    schema: [{\n      anyOf: [\n        {\n          type: 'object',\n          properties: {\n            eventHandlerPrefix: { type: 'string' },\n            eventHandlerPropPrefix: { type: 'string' },\n            checkLocalVariables: { type: 'boolean' },\n            checkInlineFunction: { type: 'boolean' },\n            ignoreComponentNames: {\n              type: 'array',\n              uniqueItems: true,\n              items: { type: 'string' },\n            },\n          },\n          additionalProperties: false,\n        }, {\n          type: 'object',\n          properties: {\n            eventHandlerPrefix: { type: 'string' },\n            eventHandlerPropPrefix: {\n              type: 'boolean',\n              enum: [false],\n            },\n            checkLocalVariables: { type: 'boolean' },\n            checkInlineFunction: { type: 'boolean' },\n            ignoreComponentNames: {\n              type: 'array',\n              uniqueItems: true,\n              items: { type: 'string' },\n            },\n          },\n          additionalProperties: false,\n        }, {\n          type: 'object',\n          properties: {\n            eventHandlerPrefix: {\n              type: 'boolean',\n              enum: [false],\n            },\n            eventHandlerPropPrefix: { type: 'string' },\n            checkLocalVariables: { type: 'boolean' },\n            checkInlineFunction: { type: 'boolean' },\n            ignoreComponentNames: {\n              type: 'array',\n              uniqueItems: true,\n              items: { type: 'string' },\n            },\n          },\n          additionalProperties: false,\n        }, {\n          type: 'object',\n          properties: {\n            checkLocalVariables: { type: 'boolean' },\n          },\n          additionalProperties: false,\n        }, {\n          type: 'object',\n          properties: {\n            checkInlineFunction: { type: 'boolean' },\n          },\n          additionalProperties: false,\n        },\n        {\n          type: 'object',\n          properties: {\n            ignoreComponentNames: {\n              type: 'array',\n              uniqueItems: true,\n              items: { type: 'string' },\n            },\n          },\n        },\n      ],\n    }],\n  },\n\n  create(context) {\n    function isPrefixDisabled(prefix) {\n      return prefix === false;\n    }\n\n    function isInlineHandler(node) {\n      return node.value.expression.type === 'ArrowFunctionExpression';\n    }\n\n    const configuration = context.options[0] || {};\n\n    const eventHandlerPrefix = isPrefixDisabled(configuration.eventHandlerPrefix)\n      ? null\n      : configuration.eventHandlerPrefix || 'handle';\n    const eventHandlerPropPrefix = isPrefixDisabled(configuration.eventHandlerPropPrefix)\n      ? null\n      : configuration.eventHandlerPropPrefix || 'on';\n\n    const EVENT_HANDLER_REGEX = !eventHandlerPrefix\n      ? null\n      : new RegExp(`^((props\\\\.${eventHandlerPropPrefix || ''})|((.*\\\\.)?${eventHandlerPrefix}))[0-9]*[A-Z].*$`);\n    const PROP_EVENT_HANDLER_REGEX = !eventHandlerPropPrefix\n      ? null\n      : new RegExp(`^(${eventHandlerPropPrefix}[A-Z].*|ref)$`);\n\n    const checkLocal = !!configuration.checkLocalVariables;\n\n    const checkInlineFunction = !!configuration.checkInlineFunction;\n\n    const ignoreComponentNames = configuration.ignoreComponentNames || [];\n\n    return {\n      JSXAttribute(node) {\n        const componentName = node.parent.name.name;\n\n        const isComponentNameIgnored = ignoreComponentNames.some((ignoredComponentNamePattern) => {\n          const isIgnored = minimatch(componentName, ignoredComponentNamePattern);\n          return isIgnored;\n        });\n\n        if (\n          !node.value\n          || !node.value.expression\n          || (!checkInlineFunction && isInlineHandler(node))\n          || (\n            !checkLocal\n            && (isInlineHandler(node)\n              ? !node.value.expression.body.callee || !node.value.expression.body.callee.object\n              : !node.value.expression.object\n            )\n          )\n          || isComponentNameIgnored\n        ) {\n          return;\n        }\n\n        const propKey = typeof node.name === 'object' ? node.name.name : node.name;\n        const expression = node.value.expression;\n        const propValue = getText(\n          context,\n          checkInlineFunction && isInlineHandler(node) ? expression.body.callee : expression\n        ).replace(/\\s*/g, '').replace(/^this\\.|.*::/, '');\n\n        if (propKey === 'ref') {\n          return;\n        }\n\n        const propIsEventHandler = PROP_EVENT_HANDLER_REGEX && PROP_EVENT_HANDLER_REGEX.test(propKey);\n        const propFnIsNamedCorrectly = EVENT_HANDLER_REGEX && EVENT_HANDLER_REGEX.test(propValue);\n\n        if (\n          propIsEventHandler\n          && propFnIsNamedCorrectly !== null\n          && !propFnIsNamedCorrectly\n        ) {\n          report(context, messages.badHandlerName, 'badHandlerName', {\n            node,\n            data: {\n              propKey,\n              handlerPrefix: eventHandlerPrefix,\n            },\n          });\n        } else if (\n          propFnIsNamedCorrectly\n          && propIsEventHandler !== null\n          && !propIsEventHandler\n        ) {\n          report(context, messages.badPropKey, 'badPropKey', {\n            node,\n            data: {\n              propValue,\n              handlerPropPrefix: eventHandlerPropPrefix,\n            },\n          });\n        }\n      },\n    };\n  },\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $match = GetIntrinsic('%Symbol.match%', true);\n\nvar hasRegExpMatcher = require('is-regex');\n\nvar ToBoolean = require('./ToBoolean');\n\n// https://262.ecma-international.org/6.0/#sec-isregexp\n\nmodule.exports = function IsRegExp(argument) {\n\tif (!argument || typeof argument !== 'object') {\n\t\treturn false;\n\t}\n\tif ($match) {\n\t\tvar isRegExp = argument[$match];\n\t\tif (typeof isRegExp !== 'undefined') {\n\t\t\treturn ToBoolean(isRegExp);\n\t\t}\n\t}\n\treturn hasRegExpMatcher(argument);\n};\n", "'use strict';\n\nvar setFunctionName = require('set-function-name');\nvar $TypeError = require('es-errors/type');\n\nvar $Object = Object;\n\nmodule.exports = setFunctionName(function flags() {\n\tif (this == null || this !== $Object(this)) {\n\t\tthrow new $TypeError('RegExp.prototype.flags getter called on non-object');\n\t}\n\tvar result = '';\n\tif (this.hasIndices) {\n\t\tresult += 'd';\n\t}\n\tif (this.global) {\n\t\tresult += 'g';\n\t}\n\tif (this.ignoreCase) {\n\t\tresult += 'i';\n\t}\n\tif (this.multiline) {\n\t\tresult += 'm';\n\t}\n\tif (this.dotAll) {\n\t\tresult += 's';\n\t}\n\tif (this.unicode) {\n\t\tresult += 'u';\n\t}\n\tif (this.unicodeSets) {\n\t\tresult += 'v';\n\t}\n\tif (this.sticky) {\n\t\tresult += 'y';\n\t}\n\treturn result;\n}, 'get flags', true);\n\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar $gOPD = Object.getOwnPropertyDescriptor;\n\nmodule.exports = function getPolyfill() {\n\tif (supportsDescriptors && (/a/mig).flags === 'gim') {\n\t\tvar descriptor = $gOPD(RegExp.prototype, 'flags');\n\t\tif (\n\t\t\tdescriptor\n\t\t\t&& typeof descriptor.get === 'function'\n\t\t\t&& 'dotAll' in RegExp.prototype\n\t\t\t&& 'hasIndices' in RegExp.prototype\n\t\t) {\n\t\t\t/* eslint getter-return: 0 */\n\t\t\tvar calls = '';\n\t\t\tvar o = {};\n\t\t\tObject.defineProperty(o, 'hasIndices', {\n\t\t\t\tget: function () {\n\t\t\t\t\tcalls += 'd';\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.defineProperty(o, 'sticky', {\n\t\t\t\tget: function () {\n\t\t\t\t\tcalls += 'y';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdescriptor.get.call(o);\n\n\t\t\tif (calls === 'dy') {\n\t\t\t\treturn descriptor.get;\n\t\t\t}\n\t\t}\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar supportsDescriptors = require('define-properties').supportsDescriptors;\nvar getPolyfill = require('./polyfill');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar defineProperty = Object.defineProperty;\nvar TypeErr = TypeError;\nvar getProto = Object.getPrototypeOf;\nvar regex = /a/;\n\nmodule.exports = function shimFlags() {\n\tif (!supportsDescriptors || !getProto) {\n\t\tthrow new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');\n\t}\n\tvar polyfill = getPolyfill();\n\tvar proto = getProto(regex);\n\tvar descriptor = gOPD(proto, 'flags');\n\tif (!descriptor || descriptor.get !== polyfill) {\n\t\tdefineProperty(proto, 'flags', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: polyfill\n\t\t});\n\t}\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar flagsBound = callBind(getPolyfill());\n\ndefine(flagsBound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = flagsBound;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-definepropertyorthrow\n\nmodule.exports = function DefinePropertyOrThrow(O, P, desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\n\tvar Desc = isPropertyDescriptor(desc) ? desc : ToPropertyDescriptor(desc);\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n\t}\n\n\treturn DefineOwnProperty(\n\t\tIsDataDescriptor,\n\t\tSameValue,\n\t\tFromPropertyDescriptor,\n\t\tO,\n\t\tP,\n\t\tDesc\n\t);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\nvar IsExtensible = require('./IsExtensible');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/13.0/#sec-definemethodproperty\n\nmodule.exports = function DefineMethodProperty(homeObject, key, closure, enumerable) {\n\tif (Type(homeObject) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `homeObject` is not an Object');\n\t}\n\tif (!IsPropertyKey(key)) {\n\t\tthrow new $TypeError('Assertion failed: `key` is not a Property Key or a Private Name');\n\t}\n\tif (typeof closure !== 'function') {\n\t\tthrow new $TypeError('Assertion failed: `closure` is not a function');\n\t}\n\tif (typeof enumerable !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: `enumerable` is not a Boolean');\n\t}\n\n\t// 1. Assert: homeObject is an ordinary, extensible object with no non-configurable properties.\n\tif (!IsExtensible(homeObject)) {\n\t\tthrow new $TypeError('Assertion failed: `homeObject` is not an ordinary, extensible object, with no non-configurable properties');\n\t}\n\n\t// 2. If key is a Private Name, then\n\t//  a. Return PrivateElement { [[Key]]: key, [[Kind]]: method, [[Value]]: closure }.\n\t// 3. Else,\n\tvar desc = { // step 3.a\n\t\t'[[Value]]': closure,\n\t\t'[[Writable]]': true,\n\t\t'[[Enumerable]]': enumerable,\n\t\t'[[Configurable]]': true\n\t};\n\tDefinePropertyOrThrow(homeObject, key, desc); // step 3.b\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar regexExec = require('call-bind/callBound')('RegExp.prototype.exec');\n\nvar Call = require('./Call');\nvar Get = require('./Get');\nvar IsCallable = require('./IsCallable');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-regexpexec\n\nmodule.exports = function RegExpExec(R, S) {\n\tif (Type(R) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `R` must be an Object');\n\t}\n\tif (typeof S !== 'string') {\n\t\tthrow new $TypeError('Assertion failed: `S` must be a String');\n\t}\n\tvar exec = Get(R, 'exec');\n\tif (IsCallable(exec)) {\n\t\tvar result = Call(exec, R, [S]);\n\t\tif (typeof result === 'object') {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new $TypeError('\"exec\" method must return `null` or an Object');\n\t}\n\treturn regexExec(R, S);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\n\n// IE 9 does not throw in strict mode when writability/configurability/extensibility is violated\nvar noThrowOnStrictViolation = (function () {\n\ttry {\n\t\tdelete [].length;\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}());\n\n// https://262.ecma-international.org/6.0/#sec-set-o-p-v-throw\n\nmodule.exports = function Set(O, P, V, Throw) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `O` must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: `P` must be a Property Key');\n\t}\n\tif (typeof Throw !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: `Throw` must be a Boolean');\n\t}\n\tif (Throw) {\n\t\tO[P] = V; // eslint-disable-line no-param-reassign\n\t\tif (noThrowOnStrictViolation && !SameValue(O[P], V)) {\n\t\t\tthrow new $TypeError('Attempted to assign to readonly property.');\n\t\t}\n\t\treturn true;\n\t}\n\ttry {\n\t\tO[P] = V; // eslint-disable-line no-param-reassign\n\t\treturn noThrowOnStrictViolation ? SameValue(O[P], V) : true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar hasSymbols = require('has-symbols')();\n\nvar $TypeError = require('es-errors/type');\nvar IteratorPrototype = GetIntrinsic('%IteratorPrototype%', true);\n\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\nvar CreateIterResultObject = require('./CreateIterResultObject');\nvar DefineMethodProperty = require('./DefineMethodProperty');\nvar Get = require('./Get');\nvar OrdinaryObjectCreate = require('./OrdinaryObjectCreate');\nvar RegExpExec = require('./RegExpExec');\nvar Set = require('./Set');\nvar ToLength = require('./ToLength');\nvar ToString = require('./ToString');\nvar Type = require('./Type');\n\nvar SLOT = require('internal-slot');\nvar setToStringTag = require('es-set-tostringtag');\n\nvar RegExpStringIterator = function RegExpStringIterator(R, S, global, fullUnicode) {\n\tif (typeof S !== 'string') {\n\t\tthrow new $TypeError('`S` must be a string');\n\t}\n\tif (typeof global !== 'boolean') {\n\t\tthrow new $TypeError('`global` must be a boolean');\n\t}\n\tif (typeof fullUnicode !== 'boolean') {\n\t\tthrow new $TypeError('`fullUnicode` must be a boolean');\n\t}\n\tSLOT.set(this, '[[IteratingRegExp]]', R);\n\tSLOT.set(this, '[[IteratedString]]', S);\n\tSLOT.set(this, '[[Global]]', global);\n\tSLOT.set(this, '[[Unicode]]', fullUnicode);\n\tSLOT.set(this, '[[Done]]', false);\n};\n\nif (IteratorPrototype) {\n\tRegExpStringIterator.prototype = OrdinaryObjectCreate(IteratorPrototype);\n}\n\nvar RegExpStringIteratorNext = function next() {\n\tvar O = this; // eslint-disable-line no-invalid-this\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('receiver must be an object');\n\t}\n\tif (\n\t\t!(O instanceof RegExpStringIterator)\n\t\t|| !SLOT.has(O, '[[IteratingRegExp]]')\n\t\t|| !SLOT.has(O, '[[IteratedString]]')\n\t\t|| !SLOT.has(O, '[[Global]]')\n\t\t|| !SLOT.has(O, '[[Unicode]]')\n\t\t|| !SLOT.has(O, '[[Done]]')\n\t) {\n\t\tthrow new $TypeError('\"this\" value must be a RegExpStringIterator instance');\n\t}\n\tif (SLOT.get(O, '[[Done]]')) {\n\t\treturn CreateIterResultObject(undefined, true);\n\t}\n\tvar R = SLOT.get(O, '[[IteratingRegExp]]');\n\tvar S = SLOT.get(O, '[[IteratedString]]');\n\tvar global = SLOT.get(O, '[[Global]]');\n\tvar fullUnicode = SLOT.get(O, '[[Unicode]]');\n\tvar match = RegExpExec(R, S);\n\tif (match === null) {\n\t\tSLOT.set(O, '[[Done]]', true);\n\t\treturn CreateIterResultObject(undefined, true);\n\t}\n\tif (global) {\n\t\tvar matchStr = ToString(Get(match, '0'));\n\t\tif (matchStr === '') {\n\t\t\tvar thisIndex = ToLength(Get(R, 'lastIndex'));\n\t\t\tvar nextIndex = AdvanceStringIndex(S, thisIndex, fullUnicode);\n\t\t\tSet(R, 'lastIndex', nextIndex, true);\n\t\t}\n\t\treturn CreateIterResultObject(match, false);\n\t}\n\tSLOT.set(O, '[[Done]]', true);\n\treturn CreateIterResultObject(match, false);\n};\nDefineMethodProperty(RegExpStringIterator.prototype, 'next', RegExpStringIteratorNext, false);\n\nif (hasSymbols) {\n\tsetToStringTag(RegExpStringIterator.prototype, 'RegExp String Iterator');\n\n\tif (Symbol.iterator && typeof RegExpStringIterator.prototype[Symbol.iterator] !== 'function') {\n\t\tvar iteratorFn = function SymbolIterator() {\n\t\t\treturn this;\n\t\t};\n\t\tDefineMethodProperty(RegExpStringIterator.prototype, Symbol.iterator, iteratorFn, false);\n\t}\n}\n\n// https://262.ecma-international.org/16.0/#sec-createregexpstringiterator\n\nmodule.exports = function CreateRegExpStringIterator(R, S, global, fullUnicode) {\n\t// assert R.global === global && R.unicode === fullUnicode?\n\treturn new RegExpStringIterator(R, S, global, fullUnicode);\n};\n", "'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic.js');\n\nvar $construct = GetIntrinsic('%Reflect.construct%', true);\n\nvar DefinePropertyOrThrow = require('./DefinePropertyOrThrow');\ntry {\n\tDefinePropertyOrThrow({}, '', { '[[Get]]': function () {} });\n} catch (e) {\n\t// Accessor properties aren't supported\n\tDefinePropertyOrThrow = null;\n}\n\n// https://262.ecma-international.org/6.0/#sec-isconstructor\n\nif (DefinePropertyOrThrow && $construct) {\n\tvar isConstructorMarker = {};\n\tvar badArrayLike = {};\n\tDefinePropertyOrThrow(badArrayLike, 'length', {\n\t\t'[[Get]]': function () {\n\t\t\tthrow isConstructorMarker;\n\t\t},\n\t\t'[[Enumerable]]': true\n\t});\n\n\tmodule.exports = function IsConstructor(argument) {\n\t\ttry {\n\t\t\t// `Reflect.construct` invokes `IsConstructor(target)` before `Get(args, 'length')`:\n\t\t\t$construct(argument, badArrayLike);\n\t\t} catch (err) {\n\t\t\treturn err === isConstructorMarker;\n\t\t}\n\t};\n} else {\n\tmodule.exports = function IsConstructor(argument) {\n\t\t// unfortunately there's no way to truly check this without try/catch `new argument` in old environments\n\t\treturn typeof argument === 'function' && !!argument.prototype;\n\t};\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $species = GetIntrinsic('%Symbol.species%', true);\nvar $TypeError = require('es-errors/type');\n\nvar IsConstructor = require('./IsConstructor');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-speciesconstructor\n\nmodule.exports = function SpeciesConstructor(O, defaultConstructor) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\tvar C = O.constructor;\n\tif (typeof C === 'undefined') {\n\t\treturn defaultConstructor;\n\t}\n\tif (Type(C) !== 'Object') {\n\t\tthrow new $TypeError('O.constructor is not an Object');\n\t}\n\tvar S = $species ? C[$species] : void 0;\n\tif (S == null) {\n\t\treturn defaultConstructor;\n\t}\n\tif (IsConstructor(S)) {\n\t\treturn S;\n\t}\n\tthrow new $TypeError('no constructor found');\n};\n", "'use strict';\n\n// var Construct = require('es-abstract/2023/Construct');\nvar CreateRegExpStringIterator = require('es-abstract/2024/CreateRegExpStringIterator');\nvar Get = require('es-abstract/2024/Get');\nvar Set = require('es-abstract/2024/Set');\nvar SpeciesConstructor = require('es-abstract/2024/SpeciesConstructor');\nvar ToLength = require('es-abstract/2024/ToLength');\nvar ToString = require('es-abstract/2024/ToString');\nvar Type = require('es-abstract/2024/Type');\nvar flagsGetter = require('regexp.prototype.flags');\nvar setFunctionName = require('set-function-name');\nvar callBound = require('call-bind/callBound');\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = require('es-errors/type');\n\nvar $indexOf = callBound('String.prototype.indexOf');\n\nvar OrigRegExp = GetIntrinsic('%RegExp%');\n\nvar supportsConstructingWithFlags = 'flags' in OrigRegExp.prototype;\n\nvar constructRegexWithFlags = function constructRegex(C, R) {\n\tvar matcher;\n\t// workaround for older engines that lack RegExp.prototype.flags\n\tvar flags = 'flags' in R ? Get(R, 'flags') : ToString(flagsGetter(R));\n\tif (supportsConstructingWithFlags && typeof flags === 'string') {\n\t\tmatcher = new C(R, flags);\n\t} else if (C === OrigRegExp) {\n\t\t// workaround for older engines that can not construct a RegExp with flags\n\t\tmatcher = new C(R.source, flags);\n\t} else {\n\t\tmatcher = new C(R, flags);\n\t}\n\treturn { flags: flags, matcher: matcher };\n};\n\nvar regexMatchAll = setFunctionName(function SymbolMatchAll(string) {\n\tvar R = this;\n\tif (Type(R) !== 'Object') {\n\t\tthrow new $TypeError('\"this\" value must be an Object');\n\t}\n\tvar S = ToString(string);\n\tvar C = SpeciesConstructor(R, OrigRegExp);\n\n\tvar tmp = constructRegexWithFlags(C, R);\n\t// var flags = ToString(Get(R, 'flags'));\n\tvar flags = tmp.flags;\n\t// var matcher = Construct(C, [R, flags]);\n\tvar matcher = tmp.matcher;\n\n\tvar lastIndex = ToLength(Get(R, 'lastIndex'));\n\tSet(matcher, 'lastIndex', lastIndex, true);\n\tvar global = $indexOf(flags, 'g') > -1;\n\tvar fullUnicode = $indexOf(flags, 'u') > -1;\n\treturn CreateRegExpStringIterator(matcher, S, global, fullUnicode);\n}, '[Symbol.matchAll]', true);\n\nmodule.exports = regexMatchAll;\n", "'use strict';\n\nvar hasSymbols = require('has-symbols')();\nvar regexpMatchAll = require('./regexp-matchall');\n\nmodule.exports = function getRegExpMatchAllPolyfill() {\n\tif (!hasSymbols || typeof Symbol.matchAll !== 'symbol' || typeof RegExp.prototype[Symbol.matchAll] !== 'function') {\n\t\treturn regexpMatchAll;\n\t}\n\treturn RegExp.prototype[Symbol.matchAll];\n};\n", "'use strict';\n\nvar Call = require('es-abstract/2024/Call');\nvar Get = require('es-abstract/2024/Get');\nvar GetMethod = require('es-abstract/2024/GetMethod');\nvar IsRegExp = require('es-abstract/2024/IsRegExp');\nvar ToString = require('es-abstract/2024/ToString');\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\nvar callBound = require('call-bind/callBound');\nvar hasSymbols = require('has-symbols')();\nvar flagsGetter = require('regexp.prototype.flags');\nvar GetIntrinsic = require('get-intrinsic');\nvar $TypeError = require('es-errors/type');\n\nvar $RegExp = GetIntrinsic('%RegExp%');\nvar $indexOf = callBound('String.prototype.indexOf');\n\nvar regexpMatchAllPolyfill = require('./polyfill-regexp-matchall');\n\nvar getMatcher = function getMatcher(regexp) { // eslint-disable-line consistent-return\n\tvar matcherPolyfill = regexpMatchAllPolyfill();\n\tif (hasSymbols && typeof Symbol.matchAll === 'symbol') {\n\t\tvar matcher = GetMethod(regexp, Symbol.matchAll);\n\t\tif (matcher === $RegExp.prototype[Symbol.matchAll] && matcher !== matcherPolyfill) {\n\t\t\treturn matcherPolyfill;\n\t\t}\n\t\treturn matcher;\n\t}\n\t// fallback for pre-Symbol.matchAll environments\n\tif (IsRegExp(regexp)) {\n\t\treturn matcherPolyfill;\n\t}\n};\n\nmodule.exports = function matchAll(regexp) {\n\tvar O = RequireObjectCoercible(this);\n\n\tif (typeof regexp !== 'undefined' && regexp !== null) {\n\t\tvar isRegExp = IsRegExp(regexp);\n\t\tif (isRegExp) {\n\t\t\t// workaround for older engines that lack RegExp.prototype.flags\n\t\t\tvar flags = 'flags' in regexp ? Get(regexp, 'flags') : flagsGetter(regexp);\n\t\t\tRequireObjectCoercible(flags);\n\t\t\tif ($indexOf(ToString(flags), 'g') < 0) {\n\t\t\t\tthrow new $TypeError('matchAll requires a global regular expression');\n\t\t\t}\n\t\t}\n\n\t\tvar matcher = getMatcher(regexp);\n\t\tif (typeof matcher !== 'undefined') {\n\t\t\treturn Call(matcher, regexp, [O]);\n\t\t}\n\t}\n\n\tvar S = ToString(O);\n\t// var rx = RegExpCreate(regexp, 'g');\n\tvar rx = new $RegExp(regexp, 'g');\n\treturn Call(getMatcher(rx), rx, [S]);\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.matchAll) {\n\t\ttry {\n\t\t\t''.matchAll(RegExp.prototype);\n\t\t} catch (e) {\n\t\t\treturn String.prototype.matchAll;\n\t\t}\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar hasSymbols = require('has-symbols')();\nvar gOPD = require('gopd');\n\nvar getPolyfill = require('./polyfill');\nvar regexpMatchAllPolyfill = require('./polyfill-regexp-matchall');\n\nvar defineP = Object.defineProperty;\n\nmodule.exports = function shimMatchAll() {\n\tvar polyfill = getPolyfill();\n\tdefine(\n\t\tString.prototype,\n\t\t{ matchAll: polyfill },\n\t\t{ matchAll: function () { return String.prototype.matchAll !== polyfill; } }\n\t);\n\tif (hasSymbols) {\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\tvar symbol = Symbol.matchAll || (Symbol['for'] ? Symbol['for']('Symbol.matchAll') : Symbol('Symbol.matchAll'));\n\t\tdefine(\n\t\t\tSymbol,\n\t\t\t{ matchAll: symbol },\n\t\t\t{ matchAll: function () { return Symbol.matchAll !== symbol; } }\n\t\t);\n\n\t\tif (defineP && gOPD) {\n\t\t\tvar desc = gOPD(Symbol, symbol);\n\t\t\tif (!desc || desc.configurable) {\n\t\t\t\tdefineP(Symbol, symbol, {\n\t\t\t\t\tconfigurable: false,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: symbol,\n\t\t\t\t\twritable: false\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar regexpMatchAll = regexpMatchAllPolyfill();\n\t\tvar func = {};\n\t\tfunc[symbol] = regexpMatchAll;\n\t\tvar predicate = {};\n\t\tpredicate[symbol] = function () {\n\t\t\treturn RegExp.prototype[symbol] !== regexpMatchAll;\n\t\t};\n\t\tdefine(RegExp.prototype, func, predicate);\n\t}\n\treturn polyfill;\n};\n", "'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundMatchAll = callBind(implementation);\n\ndefine(boundMatchAll, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundMatchAll;\n", "/**\n * @fileoverview Validate JSX indentation\n * @author Yannick Croissant\n\n * This rule has been ported and modified from eslint and nodeca.\n * @author Vitaly Puzrin\n * @author Gyandeep Singh\n * @copyright 2015 Vitaly Puzrin. All rights reserved.\n * @copyright 2015 Gyandeep Singh. All rights reserved.\n Copyright (C) 2014 by Vitaly Puzrin\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the 'Software'), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n\n'use strict';\n\nconst matchAll = require('string.prototype.matchall');\nconst repeat = require('string.prototype.repeat');\n\nconst astUtil = require('../util/ast');\nconst docsUrl = require('../util/docsUrl');\nconst reportC = require('../util/report');\nconst jsxUtil = require('../util/jsx');\nconst eslintUtil = require('../util/eslint');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  wrongIndent: 'Expected indentation of {{needed}} {{type}} {{characters}} but found {{gotten}}.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce JSX indentation',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-indent'),\n    },\n    fixable: 'whitespace',\n\n    messages,\n\n    schema: [{\n      anyOf: [{\n        enum: ['tab'],\n      }, {\n        type: 'integer',\n      }],\n    }, {\n      type: 'object',\n      properties: {\n        checkAttributes: {\n          type: 'boolean',\n        },\n        indentLogicalExpressions: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const extraColumnStart = 0;\n    let indentType = 'space';\n    let indentSize = 4;\n\n    if (context.options.length) {\n      if (context.options[0] === 'tab') {\n        indentSize = 1;\n        indentType = 'tab';\n      } else if (typeof context.options[0] === 'number') {\n        indentSize = context.options[0];\n        indentType = 'space';\n      }\n    }\n\n    const indentChar = indentType === 'space' ? ' ' : '\\t';\n    const options = context.options[1] || {};\n    const checkAttributes = options.checkAttributes || false;\n    const indentLogicalExpressions = options.indentLogicalExpressions || false;\n\n    /**\n     * Responsible for fixing the indentation issue fix\n     * @param {ASTNode} node Node violating the indent rule\n     * @param {number} needed Expected indentation character count\n     * @returns {Function} function to be executed by the fixer\n     * @private\n     */\n    function getFixerFunction(node, needed) {\n      const indent = repeat(indentChar, needed);\n\n      if (node.type === 'JSXText' || node.type === 'Literal') {\n        return function fix(fixer) {\n          const regExp = /\\n[\\t ]*(\\S)/g;\n          const fixedText = node.raw.replace(regExp, (match, p1) => `\\n${indent}${p1}`);\n          return fixer.replaceText(node, fixedText);\n        };\n      }\n\n      if (node.type === 'ReturnStatement') {\n        const raw = getText(context, node);\n        const lines = raw.split('\\n');\n        if (lines.length > 1) {\n          return function fix(fixer) {\n            const lastLineStart = raw.lastIndexOf('\\n');\n            const lastLine = raw.slice(lastLineStart).replace(/^\\n[\\t ]*(\\S)/, (match, p1) => `\\n${indent}${p1}`);\n            return fixer.replaceTextRange(\n              [node.range[0] + lastLineStart, node.range[1]],\n              lastLine\n            );\n          };\n        }\n      }\n\n      return function fix(fixer) {\n        return fixer.replaceTextRange(\n          [node.range[0] - node.loc.start.column, node.range[0]],\n          indent\n        );\n      };\n    }\n\n    /**\n     * Reports a given indent violation and properly pluralizes the message\n     * @param {ASTNode} node Node violating the indent rule\n     * @param {number} needed Expected indentation character count\n     * @param {number} gotten Indentation character count in the actual node/code\n     * @param {Object} [loc] Error line and column location\n     */\n    function report(node, needed, gotten, loc) {\n      const msgContext = {\n        needed,\n        type: indentType,\n        characters: needed === 1 ? 'character' : 'characters',\n        gotten,\n      };\n\n      reportC(context, messages.wrongIndent, 'wrongIndent', Object.assign({\n        node,\n        data: msgContext,\n        fix: getFixerFunction(node, needed),\n      }, loc && { loc }));\n    }\n\n    /**\n     * Get node indent\n     * @param {ASTNode} node Node to examine\n     * @param {boolean} [byLastLine] get indent of node's last line\n     * @param {boolean} [excludeCommas] skip comma on start of line\n     * @return {number} Indent\n     */\n    function getNodeIndent(node, byLastLine, excludeCommas) {\n      let src = getText(context, node, node.loc.start.column + extraColumnStart);\n      const lines = src.split('\\n');\n      if (byLastLine) {\n        src = lines[lines.length - 1];\n      } else {\n        src = lines[0];\n      }\n\n      const skip = excludeCommas ? ',' : '';\n\n      let regExp;\n      if (indentType === 'space') {\n        regExp = new RegExp(`^[ ${skip}]+`);\n      } else {\n        regExp = new RegExp(`^[\\t${skip}]+`);\n      }\n\n      const indent = regExp.exec(src);\n      return indent ? indent[0].length : 0;\n    }\n\n    /**\n     * Check if the node is the right member of a logical expression\n     * @param {ASTNode} node The node to check\n     * @return {boolean} true if its the case, false if not\n     */\n    function isRightInLogicalExp(node) {\n      return (\n        node.parent\n        && node.parent.parent\n        && node.parent.parent.type === 'LogicalExpression'\n        && node.parent.parent.right === node.parent\n        && !indentLogicalExpressions\n      );\n    }\n\n    /**\n     * Check if the node is the alternate member of a conditional expression\n     * @param {ASTNode} node The node to check\n     * @return {boolean} true if its the case, false if not\n     */\n    function isAlternateInConditionalExp(node) {\n      return (\n        node.parent\n        && node.parent.parent\n        && node.parent.parent.type === 'ConditionalExpression'\n        && node.parent.parent.alternate === node.parent\n        && getSourceCode(context).getTokenBefore(node).value !== '('\n      );\n    }\n\n    /**\n     * Check if the node is within a DoExpression block but not the first expression (which need to be indented)\n     * @param {ASTNode} node The node to check\n     * @return {boolean} true if its the case, false if not\n     */\n    function isSecondOrSubsequentExpWithinDoExp(node) {\n      /*\n        It returns true when node.parent.parent.parent.parent matches:\n\n        DoExpression({\n          ...,\n          body: BlockStatement({\n            ...,\n            body: [\n              ...,  // 1-n times\n              ExpressionStatement({\n                ...,\n                expression: JSXElement({\n                  ...,\n                  openingElement: JSXOpeningElement()  // the node\n                })\n              }),\n              ...  // 0-n times\n            ]\n          })\n        })\n\n        except:\n\n        DoExpression({\n          ...,\n          body: BlockStatement({\n            ...,\n            body: [\n              ExpressionStatement({\n                ...,\n                expression: JSXElement({\n                  ...,\n                  openingElement: JSXOpeningElement()  // the node\n                })\n              }),\n              ...  // 0-n times\n            ]\n          })\n        })\n      */\n      const isInExpStmt = (\n        node.parent\n        && node.parent.parent\n        && node.parent.parent.type === 'ExpressionStatement'\n      );\n      if (!isInExpStmt) {\n        return false;\n      }\n\n      const expStmt = node.parent.parent;\n      const isInBlockStmtWithinDoExp = (\n        expStmt.parent\n        && expStmt.parent.type === 'BlockStatement'\n        && expStmt.parent.parent\n        && expStmt.parent.parent.type === 'DoExpression'\n      );\n      if (!isInBlockStmtWithinDoExp) {\n        return false;\n      }\n\n      const blockStmt = expStmt.parent;\n      const blockStmtFirstExp = blockStmt.body[0];\n      return !(blockStmtFirstExp === expStmt);\n    }\n\n    /**\n     * Check indent for nodes list\n     * @param {ASTNode} node The node to check\n     * @param {number} indent needed indent\n     * @param {boolean} [excludeCommas] skip comma on start of line\n     */\n    function checkNodesIndent(node, indent, excludeCommas) {\n      const nodeIndent = getNodeIndent(node, false, excludeCommas);\n      const isCorrectRightInLogicalExp = isRightInLogicalExp(node) && (nodeIndent - indent) === indentSize;\n      const isCorrectAlternateInCondExp = isAlternateInConditionalExp(node) && (nodeIndent - indent) === 0;\n      if (\n        nodeIndent !== indent\n        && astUtil.isNodeFirstInLine(context, node)\n        && !isCorrectRightInLogicalExp\n        && !isCorrectAlternateInCondExp\n      ) {\n        report(node, indent, nodeIndent);\n      }\n    }\n\n    /**\n     * Check indent for Literal Node or JSXText Node\n     * @param {ASTNode} node The node to check\n     * @param {number} indent needed indent\n     */\n    function checkLiteralNodeIndent(node, indent) {\n      const value = node.value;\n      const regExp = indentType === 'space' ? /\\n( *)[\\t ]*\\S/g : /\\n(\\t*)[\\t ]*\\S/g;\n      const nodeIndentsPerLine = Array.from(\n        matchAll(String(value), regExp),\n        (match) => (match[1] ? match[1].length : 0)\n      );\n      const hasFirstInLineNode = nodeIndentsPerLine.length > 0;\n      if (\n        hasFirstInLineNode\n        && !nodeIndentsPerLine.every((actualIndent) => actualIndent === indent)\n      ) {\n        nodeIndentsPerLine.forEach((nodeIndent) => {\n          report(node, indent, nodeIndent);\n        });\n      }\n    }\n\n    function handleOpeningElement(node) {\n      const sourceCode = getSourceCode(context);\n      let prevToken = sourceCode.getTokenBefore(node);\n      if (!prevToken) {\n        return;\n      }\n      // Use the parent in a list or an array\n      if (prevToken.type === 'JSXText' || ((prevToken.type === 'Punctuator') && prevToken.value === ',')) {\n        prevToken = sourceCode.getNodeByRangeIndex(prevToken.range[0]);\n        prevToken = prevToken.type === 'Literal' || prevToken.type === 'JSXText' ? prevToken.parent : prevToken;\n      // Use the first non-punctuator token in a conditional expression\n      } else if (prevToken.type === 'Punctuator' && prevToken.value === ':') {\n        do {\n          prevToken = sourceCode.getTokenBefore(prevToken);\n        } while (prevToken.type === 'Punctuator' && prevToken.value !== '/');\n        prevToken = sourceCode.getNodeByRangeIndex(prevToken.range[0]);\n        while (prevToken.parent && prevToken.parent.type !== 'ConditionalExpression') {\n          prevToken = prevToken.parent;\n        }\n      }\n      prevToken = prevToken.type === 'JSXExpressionContainer' ? prevToken.expression : prevToken;\n      const parentElementIndent = getNodeIndent(prevToken);\n      const indent = (\n        prevToken.loc.start.line === node.loc.start.line\n        || isRightInLogicalExp(node)\n        || isAlternateInConditionalExp(node)\n        || isSecondOrSubsequentExpWithinDoExp(node)\n      ) ? 0 : indentSize;\n      checkNodesIndent(node, parentElementIndent + indent);\n    }\n\n    function handleClosingElement(node) {\n      if (!node.parent) {\n        return;\n      }\n      const peerElementIndent = getNodeIndent(node.parent.openingElement || node.parent.openingFragment);\n      checkNodesIndent(node, peerElementIndent);\n    }\n\n    function handleAttribute(node) {\n      if (!checkAttributes || (!node.value || node.value.type !== 'JSXExpressionContainer')) {\n        return;\n      }\n      const nameIndent = getNodeIndent(node.name);\n      const lastToken = getSourceCode(context).getLastToken(node.value);\n      const firstInLine = astUtil.getFirstNodeInLine(context, lastToken);\n      const indent = node.name.loc.start.line === firstInLine.loc.start.line ? 0 : nameIndent;\n      checkNodesIndent(firstInLine, indent);\n    }\n\n    function handleLiteral(node) {\n      if (!node.parent) {\n        return;\n      }\n      if (node.parent.type !== 'JSXElement' && node.parent.type !== 'JSXFragment') {\n        return;\n      }\n      const parentNodeIndent = getNodeIndent(node.parent);\n      checkLiteralNodeIndent(node, parentNodeIndent + indentSize);\n    }\n\n    return {\n      JSXOpeningElement: handleOpeningElement,\n      JSXOpeningFragment: handleOpeningElement,\n      JSXClosingElement: handleClosingElement,\n      JSXClosingFragment: handleClosingElement,\n      JSXAttribute: handleAttribute,\n      JSXExpressionContainer(node) {\n        if (!node.parent) {\n          return;\n        }\n        const parentNodeIndent = getNodeIndent(node.parent);\n        checkNodesIndent(node, parentNodeIndent + indentSize);\n      },\n      Literal: handleLiteral,\n      JSXText: handleLiteral,\n\n      ReturnStatement(node) {\n        if (\n          !node.parent\n          || !jsxUtil.isJSX(node.argument)\n        ) {\n          return;\n        }\n\n        let fn = node.parent;\n        while (fn && fn.type !== 'FunctionDeclaration' && fn.type !== 'FunctionExpression') {\n          fn = fn.parent;\n        }\n        if (\n          !fn\n          || !jsxUtil.isReturningJSX(context, node, true)\n        ) {\n          return;\n        }\n\n        const openingIndent = getNodeIndent(node);\n        const closingIndent = getNodeIndent(node, true);\n\n        if (openingIndent !== closingIndent) {\n          report(node, openingIndent, closingIndent);\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Validate props indentation in JSX\n * @author Yannick Croissant\n\n * This rule has been ported and modified from eslint and nodeca.\n * @author Vitaly Puzrin\n * @author Gyandeep Singh\n * @copyright 2015 Vitaly Puzrin. All rights reserved.\n * @copyright 2015 Gyandeep Singh. All rights reserved.\n Copyright (C) 2014 by Vitaly Puzrin\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the 'Software'), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n\n'use strict';\n\nconst repeat = require('string.prototype.repeat');\n\nconst astUtil = require('../util/ast');\nconst docsUrl = require('../util/docsUrl');\nconst getText = require('../util/eslint').getText;\nconst reportC = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  wrongIndent: 'Expected indentation of {{needed}} {{type}} {{characters}} but found {{gotten}}.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce props indentation in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-indent-props'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      anyOf: [{\n        enum: ['tab', 'first'],\n      }, {\n        type: 'integer',\n      }, {\n        type: 'object',\n        properties: {\n          indentMode: {\n            anyOf: [{\n              enum: ['tab', 'first'],\n            }, {\n              type: 'integer',\n            }],\n          },\n          ignoreTernaryOperator: {\n            type: 'boolean',\n          },\n        },\n      }],\n    }],\n  },\n\n  create(context) {\n    const extraColumnStart = 0;\n    let indentType = 'space';\n    /** @type {number|'first'} */\n    let indentSize = 4;\n    const line = {\n      isUsingOperator: false,\n      currentOperator: false,\n    };\n    let ignoreTernaryOperator = false;\n\n    if (context.options.length) {\n      const isConfigObject = typeof context.options[0] === 'object';\n      const indentMode = isConfigObject\n        ? context.options[0].indentMode\n        : context.options[0];\n\n      if (indentMode === 'first') {\n        indentSize = 'first';\n        indentType = 'space';\n      } else if (indentMode === 'tab') {\n        indentSize = 1;\n        indentType = 'tab';\n      } else if (typeof indentMode === 'number') {\n        indentSize = indentMode;\n        indentType = 'space';\n      }\n\n      if (isConfigObject && context.options[0].ignoreTernaryOperator) {\n        ignoreTernaryOperator = true;\n      }\n    }\n\n    /**\n     * Reports a given indent violation and properly pluralizes the message\n     * @param {ASTNode} node Node violating the indent rule\n     * @param {number} needed Expected indentation character count\n     * @param {number} gotten Indentation character count in the actual node/code\n     */\n    function report(node, needed, gotten) {\n      const msgContext = {\n        needed,\n        type: indentType,\n        characters: needed === 1 ? 'character' : 'characters',\n        gotten,\n      };\n\n      reportC(context, messages.wrongIndent, 'wrongIndent', {\n        node,\n        data: msgContext,\n        fix(fixer) {\n          return fixer.replaceTextRange([node.range[0] - node.loc.start.column, node.range[0]],\n            repeat(indentType === 'space' ? ' ' : '\\t', needed)\n          );\n        },\n      });\n    }\n\n    /**\n     * Get node indent\n     * @param {ASTNode} node Node to examine\n     * @return {number} Indent\n     */\n    function getNodeIndent(node) {\n      let src = getText(context, node, node.loc.start.column + extraColumnStart);\n      const lines = src.split('\\n');\n      src = lines[0];\n\n      let regExp;\n      if (indentType === 'space') {\n        regExp = /^[ ]+/;\n      } else {\n        regExp = /^[\\t]+/;\n      }\n\n      const indent = regExp.exec(src);\n      const useOperator = /^([ ]|[\\t])*[:]/.test(src) || /^([ ]|[\\t])*[?]/.test(src);\n      const useBracket = /[<]/.test(src);\n\n      line.currentOperator = false;\n      if (useOperator) {\n        line.isUsingOperator = true;\n        line.currentOperator = true;\n      } else if (useBracket) {\n        line.isUsingOperator = false;\n      }\n\n      return indent ? indent[0].length : 0;\n    }\n\n    /**\n     * Check indent for nodes list\n     * @param {ASTNode[]} nodes list of node objects\n     * @param {number} indent needed indent\n     */\n    function checkNodesIndent(nodes, indent) {\n      let nestedIndent = indent;\n      nodes.forEach((node) => {\n        const nodeIndent = getNodeIndent(node);\n        if (\n          line.isUsingOperator\n          && !line.currentOperator\n          && indentSize !== 'first'\n          && !ignoreTernaryOperator\n        ) {\n          nestedIndent += indentSize;\n          line.isUsingOperator = false;\n        }\n        if (\n          node.type !== 'ArrayExpression' && node.type !== 'ObjectExpression'\n          && nodeIndent !== nestedIndent && astUtil.isNodeFirstInLine(context, node)\n        ) {\n          report(node, nestedIndent, nodeIndent);\n        }\n      });\n    }\n\n    return {\n      JSXOpeningElement(node) {\n        if (!node.attributes.length) {\n          return;\n        }\n        let propIndent;\n        if (indentSize === 'first') {\n          const firstPropNode = node.attributes[0];\n          propIndent = firstPropNode.loc.start.column;\n        } else {\n          const elementIndent = getNodeIndent(node);\n          propIndent = elementIndent + indentSize;\n        }\n        checkNodesIndent(node.attributes, propIndent);\n      },\n    };\n  },\n};\n", "module.exports = require('./lib').hasProp; // eslint-disable-line import/no-unresolved\n", "module.exports = require('./lib').propName; // eslint-disable-line import/no-unresolved\n", "/**\n * @fileoverview Report missing `key` props in iterators/collection literals.\n * @author Ben Mosher\n */\n\n'use strict';\n\nconst hasProp = require('jsx-ast-utils/hasProp');\nconst propName = require('jsx-ast-utils/propName');\nconst values = require('object.values');\nconst docsUrl = require('../util/docsUrl');\nconst pragmaUtil = require('../util/pragma');\nconst report = require('../util/report');\nconst astUtil = require('../util/ast');\nconst getText = require('../util/eslint').getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst defaultOptions = {\n  checkFragmentShorthand: false,\n  checkKeyMustBeforeSpread: false,\n  warnOnDuplicates: false,\n};\n\nconst messages = {\n  missingIterKey: 'Missing \"key\" prop for element in iterator',\n  missingIterKeyUsePrag: 'Missing \"key\" prop for element in iterator. Shorthand fragment syntax does not support providing keys. Use {{reactPrag}}.{{fragPrag}} instead',\n  missingArrayKey: 'Missing \"key\" prop for element in array',\n  missingArrayKeyUsePrag: 'Missing \"key\" prop for element in array. Shorthand fragment syntax does not support providing keys. Use {{reactPrag}}.{{fragPrag}} instead',\n  keyBeforeSpread: '`key` prop must be placed before any `{...spread}, to avoid conflicting with React’s new JSX transform: https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html`',\n  nonUniqueKeys: '`key` prop must be unique',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow missing `key` props in iterators/collection literals',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('jsx-key'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        checkFragmentShorthand: {\n          type: 'boolean',\n          default: defaultOptions.checkFragmentShorthand,\n        },\n        checkKeyMustBeforeSpread: {\n          type: 'boolean',\n          default: defaultOptions.checkKeyMustBeforeSpread,\n        },\n        warnOnDuplicates: {\n          type: 'boolean',\n          default: defaultOptions.warnOnDuplicates,\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const options = Object.assign({}, defaultOptions, context.options[0]);\n    const checkFragmentShorthand = options.checkFragmentShorthand;\n    const checkKeyMustBeforeSpread = options.checkKeyMustBeforeSpread;\n    const warnOnDuplicates = options.warnOnDuplicates;\n    const reactPragma = pragmaUtil.getFromContext(context);\n    const fragmentPragma = pragmaUtil.getFragmentFromContext(context);\n\n    function isKeyAfterSpread(attributes) {\n      let hasFoundSpread = false;\n      return attributes.some((attribute) => {\n        if (attribute.type === 'JSXSpreadAttribute') {\n          hasFoundSpread = true;\n          return false;\n        }\n        if (attribute.type !== 'JSXAttribute') {\n          return false;\n        }\n        return hasFoundSpread && propName(attribute) === 'key';\n      });\n    }\n\n    function checkIteratorElement(node) {\n      if (node.type === 'JSXElement') {\n        if (!hasProp(node.openingElement.attributes, 'key')) {\n          report(context, messages.missingIterKey, 'missingIterKey', { node });\n        } else {\n          const attrs = node.openingElement.attributes;\n\n          if (checkKeyMustBeforeSpread && isKeyAfterSpread(attrs)) {\n            report(context, messages.keyBeforeSpread, 'keyBeforeSpread', { node });\n          }\n        }\n      } else if (checkFragmentShorthand && node.type === 'JSXFragment') {\n        report(context, messages.missingIterKeyUsePrag, 'missingIterKeyUsePrag', {\n          node,\n          data: {\n            reactPrag: reactPragma,\n            fragPrag: fragmentPragma,\n          },\n        });\n      }\n    }\n\n    function getReturnStatements(node) {\n      const returnStatements = arguments[1] || [];\n      if (node.type === 'IfStatement') {\n        if (node.consequent) {\n          getReturnStatements(node.consequent, returnStatements);\n        }\n        if (node.alternate) {\n          getReturnStatements(node.alternate, returnStatements);\n        }\n      } else if (node.type === 'ReturnStatement') {\n        returnStatements.push(node);\n      } else if (Array.isArray(node.body)) {\n        node.body.forEach((item) => {\n          if (item.type === 'IfStatement') {\n            getReturnStatements(item, returnStatements);\n          }\n\n          if (item.type === 'ReturnStatement') {\n            returnStatements.push(item);\n          }\n        });\n      }\n\n      return returnStatements;\n    }\n\n    /**\n     * Checks if the given node is a function expression or arrow function,\n     * and checks if there is a missing key prop in return statement's arguments\n     * @param {ASTNode} node\n     */\n    function checkFunctionsBlockStatement(node) {\n      if (astUtil.isFunctionLikeExpression(node)) {\n        if (node.body.type === 'BlockStatement') {\n          getReturnStatements(node.body)\n            .filter((returnStatement) => returnStatement && returnStatement.argument)\n            .forEach((returnStatement) => {\n              checkIteratorElement(returnStatement.argument);\n            });\n        }\n      }\n    }\n\n    /**\n     * Checks if the given node is an arrow function that has an JSX Element or JSX Fragment in its body,\n     * and the JSX is missing a key prop\n     * @param {ASTNode} node\n     */\n    function checkArrowFunctionWithJSX(node) {\n      const isArrFn = node && node.type === 'ArrowFunctionExpression';\n      const shouldCheckNode = (n) => n && (n.type === 'JSXElement' || n.type === 'JSXFragment');\n      if (isArrFn && shouldCheckNode(node.body)) {\n        checkIteratorElement(node.body);\n      }\n      if (node.body.type === 'ConditionalExpression') {\n        if (shouldCheckNode(node.body.consequent)) {\n          checkIteratorElement(node.body.consequent);\n        }\n        if (shouldCheckNode(node.body.alternate)) {\n          checkIteratorElement(node.body.alternate);\n        }\n      } else if (node.body.type === 'LogicalExpression' && shouldCheckNode(node.body.right)) {\n        checkIteratorElement(node.body.right);\n      }\n    }\n\n    const childrenToArraySelector = `:matches(\n      CallExpression\n        [callee.object.object.name=${reactPragma}]\n        [callee.object.property.name=Children]\n        [callee.property.name=toArray],\n      CallExpression\n        [callee.object.name=Children]\n        [callee.property.name=toArray]\n    )`.replace(/\\s/g, '');\n    let isWithinChildrenToArray = false;\n\n    const seen = new WeakSet();\n\n    return {\n      [childrenToArraySelector]() {\n        isWithinChildrenToArray = true;\n      },\n\n      [`${childrenToArraySelector}:exit`]() {\n        isWithinChildrenToArray = false;\n      },\n\n      'ArrayExpression, JSXElement > JSXElement'(node) {\n        if (isWithinChildrenToArray) {\n          return;\n        }\n\n        const jsx = (node.type === 'ArrayExpression' ? node.elements : node.parent.children).filter((x) => x && x.type === 'JSXElement');\n        if (jsx.length === 0) {\n          return;\n        }\n\n        const map = {};\n        jsx.forEach((element) => {\n          const attrs = element.openingElement.attributes;\n          const keys = attrs.filter((x) => x.name && x.name.name === 'key');\n\n          if (keys.length === 0) {\n            if (node.type === 'ArrayExpression') {\n              report(context, messages.missingArrayKey, 'missingArrayKey', {\n                node: element,\n              });\n            }\n          } else {\n            keys.forEach((attr) => {\n              const value = getText(context, attr.value);\n              if (!map[value]) { map[value] = []; }\n              map[value].push(attr);\n\n              if (checkKeyMustBeforeSpread && isKeyAfterSpread(attrs)) {\n                report(context, messages.keyBeforeSpread, 'keyBeforeSpread', {\n                  node: node.type === 'ArrayExpression' ? node : node.parent,\n                });\n              }\n            });\n          }\n        });\n\n        if (warnOnDuplicates) {\n          values(map).filter((v) => v.length > 1).forEach((v) => {\n            v.forEach((n) => {\n              if (!seen.has(n)) {\n                seen.add(n);\n                report(context, messages.nonUniqueKeys, 'nonUniqueKeys', {\n                  node: n,\n                });\n              }\n            });\n          });\n        }\n      },\n\n      JSXFragment(node) {\n        if (!checkFragmentShorthand || isWithinChildrenToArray) {\n          return;\n        }\n\n        if (node.parent.type === 'ArrayExpression') {\n          report(context, messages.missingArrayKeyUsePrag, 'missingArrayKeyUsePrag', {\n            node,\n            data: {\n              reactPrag: reactPragma,\n              fragPrag: fragmentPragma,\n            },\n          });\n        }\n      },\n\n      // Array.prototype.map\n      // eslint-disable-next-line no-multi-str\n      'CallExpression[callee.type=\"MemberExpression\"][callee.property.name=\"map\"],\\\n       CallExpression[callee.type=\"OptionalMemberExpression\"][callee.property.name=\"map\"],\\\n       OptionalCallExpression[callee.type=\"MemberExpression\"][callee.property.name=\"map\"],\\\n       OptionalCallExpression[callee.type=\"OptionalMemberExpression\"][callee.property.name=\"map\"]'(node) {\n        if (isWithinChildrenToArray) {\n          return;\n        }\n\n        const fn = node.arguments.length > 0 && node.arguments[0];\n        if (!fn || !astUtil.isFunctionLikeExpression(fn)) {\n          return;\n        }\n\n        checkArrowFunctionWithJSX(fn);\n\n        checkFunctionsBlockStatement(fn);\n      },\n\n      // Array.from\n      'CallExpression[callee.type=\"MemberExpression\"][callee.property.name=\"from\"]'(node) {\n        if (isWithinChildrenToArray) {\n          return;\n        }\n\n        const fn = node.arguments.length > 1 && node.arguments[1];\n        if (!astUtil.isFunctionLikeExpression(fn)) {\n          return;\n        }\n\n        checkArrowFunctionWithJSX(fn);\n\n        checkFunctionsBlockStatement(fn);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Validate JSX maximum depth\n * @author Chris<wfsr@foxmail.com>\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst includes = require('array-includes');\nconst variableUtil = require('../util/variable');\nconst jsxUtil = require('../util/jsx');\nconst docsUrl = require('../util/docsUrl');\nconst reportC = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  wrongDepth: 'Expected the depth of nested jsx elements to be <= {{needed}}, but found {{found}}.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce JSX maximum depth',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-max-depth'),\n    },\n\n    messages,\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          max: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n  create(context) {\n    const DEFAULT_DEPTH = 2;\n\n    const option = context.options[0] || {};\n    const maxDepth = has(option, 'max') ? option.max : DEFAULT_DEPTH;\n\n    function isExpression(node) {\n      return node.type === 'JSXExpressionContainer';\n    }\n\n    function hasJSX(node) {\n      return jsxUtil.isJSX(node) || (isExpression(node) && jsxUtil.isJSX(node.expression));\n    }\n\n    function isLeaf(node) {\n      const children = node.children;\n\n      return !children || children.length === 0 || !children.some(hasJSX);\n    }\n\n    function getDepth(node) {\n      let count = 0;\n\n      while (jsxUtil.isJSX(node.parent) || isExpression(node.parent)) {\n        node = node.parent;\n        if (jsxUtil.isJSX(node)) {\n          count += 1;\n        }\n      }\n\n      return count;\n    }\n\n    function report(node, depth) {\n      reportC(context, messages.wrongDepth, 'wrongDepth', {\n        node,\n        data: {\n          found: depth,\n          needed: maxDepth,\n        },\n      });\n    }\n\n    function findJSXElementOrFragment(startNode, name, previousReferences) {\n      function find(refs, prevRefs) {\n        for (let i = refs.length - 1; i >= 0; i--) {\n          if (typeof refs[i].writeExpr !== 'undefined') {\n            const writeExpr = refs[i].writeExpr;\n\n            return (jsxUtil.isJSX(writeExpr)\n              && writeExpr)\n              || ((writeExpr && writeExpr.type === 'Identifier')\n              && findJSXElementOrFragment(startNode, writeExpr.name, prevRefs));\n          }\n        }\n\n        return null;\n      }\n\n      const variable = variableUtil.getVariableFromContext(context, startNode, name);\n      if (variable && variable.references) {\n        const containDuplicates = previousReferences.some((ref) => includes(variable.references, ref));\n\n        // Prevent getting stuck in circular references\n        if (containDuplicates) {\n          return false;\n        }\n\n        return find(variable.references, previousReferences.concat(variable.references));\n      }\n\n      return false;\n    }\n\n    function checkDescendant(baseDepth, children) {\n      baseDepth += 1;\n      (children || []).filter((node) => hasJSX(node)).forEach((node) => {\n        if (baseDepth > maxDepth) {\n          report(node, baseDepth);\n        } else if (!isLeaf(node)) {\n          checkDescendant(baseDepth, node.children);\n        }\n      });\n    }\n\n    function handleJSX(node) {\n      if (!isLeaf(node)) {\n        return;\n      }\n\n      const depth = getDepth(node);\n      if (depth > maxDepth) {\n        report(node, depth);\n      }\n    }\n\n    return {\n      JSXElement: handleJSX,\n      JSXFragment: handleJSX,\n\n      JSXExpressionContainer(node) {\n        if (node.expression.type !== 'Identifier') {\n          return;\n        }\n\n        const element = findJSXElementOrFragment(node, node.expression.name, []);\n\n        if (element) {\n          const baseDepth = getDepth(node);\n          checkDescendant(baseDepth, element.children);\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Limit maximum of props on a single line in JSX\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst getText = require('../util/eslint').getText;\nconst report = require('../util/report');\n\nfunction getPropName(context, propNode) {\n  if (propNode.type === 'JSXSpreadAttribute') {\n    return getText(context, propNode.argument);\n  }\n  return propNode.name.name;\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  newLine: 'Prop `{{prop}}` must be placed on a new line',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce maximum of props on a single line in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-max-props-per-line'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      anyOf: [{\n        type: 'object',\n        properties: {\n          maximum: {\n            type: 'object',\n            properties: {\n              single: {\n                type: 'integer',\n                minimum: 1,\n              },\n              multi: {\n                type: 'integer',\n                minimum: 1,\n              },\n            },\n          },\n        },\n        additionalProperties: false,\n      }, {\n        type: 'object',\n        properties: {\n          maximum: {\n            type: 'number',\n            minimum: 1,\n          },\n          when: {\n            type: 'string',\n            enum: ['always', 'multiline'],\n          },\n        },\n        additionalProperties: false,\n      }],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const maximum = configuration.maximum || 1;\n\n    const maxConfig = typeof maximum === 'number'\n      ? {\n        single: configuration.when === 'multiline' ? Infinity : maximum,\n        multi: maximum,\n      }\n      : {\n        single: maximum.single || Infinity,\n        multi: maximum.multi || Infinity,\n      };\n\n    function generateFixFunction(line, max) {\n      const output = [];\n      const front = line[0].range[0];\n      const back = line[line.length - 1].range[1];\n\n      for (let i = 0; i < line.length; i += max) {\n        const nodes = line.slice(i, i + max);\n        output.push(nodes.reduce((prev, curr) => {\n          if (prev === '') {\n            return getText(context, curr);\n          }\n          return `${prev} ${getText(context, curr)}`;\n        }, ''));\n      }\n\n      const code = output.join('\\n');\n\n      return function fix(fixer) {\n        return fixer.replaceTextRange([front, back], code);\n      };\n    }\n\n    return {\n      JSXOpeningElement(node) {\n        if (!node.attributes.length) {\n          return;\n        }\n\n        const isSingleLineTag = node.loc.start.line === node.loc.end.line;\n\n        if ((isSingleLineTag ? maxConfig.single : maxConfig.multi) === Infinity) {\n          return;\n        }\n\n        const firstProp = node.attributes[0];\n        const linePartitionedProps = [[firstProp]];\n\n        node.attributes.reduce((last, decl) => {\n          if (last.loc.end.line === decl.loc.start.line) {\n            linePartitionedProps[linePartitionedProps.length - 1].push(decl);\n          } else {\n            linePartitionedProps.push([decl]);\n          }\n          return decl;\n        });\n\n        linePartitionedProps.forEach((propsInLine) => {\n          const maxPropsCountPerLine = isSingleLineTag && propsInLine[0].loc.start.line === node.loc.start.line\n            ? maxConfig.single\n            : maxConfig.multi;\n\n          if (propsInLine.length > maxPropsCountPerLine) {\n            const name = getPropName(context, propsInLine[maxPropsCountPerLine]);\n            report(context, messages.newLine, 'newLine', {\n              node: propsInLine[maxPropsCountPerLine],\n              data: {\n                prop: name,\n              },\n              fix: generateFixFunction(propsInLine, maxPropsCountPerLine),\n            });\n          }\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Require or prevent a new line after jsx elements and expressions.\n * @author Johnny Zabala\n * @author Joseph Stiles\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst getText = require('../util/eslint').getText;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  require: 'JSX element should start in a new line',\n  prevent: 'JSX element should not start in a new line',\n  allowMultilines: 'Multiline JSX elements should start in a new line',\n};\n\nfunction isMultilined(node) {\n  return node && node.loc.start.line !== node.loc.end.line;\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Require or prevent a new line after jsx elements and expressions.',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-newline'),\n    },\n    fixable: 'code',\n\n    messages,\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          prevent: {\n            default: false,\n            type: 'boolean',\n          },\n          allowMultilines: {\n            default: false,\n            type: 'boolean',\n          },\n        },\n        additionalProperties: false,\n        if: {\n          properties: {\n            allowMultilines: {\n              const: true,\n            },\n          },\n        },\n        then: {\n          properties: {\n            prevent: {\n              const: true,\n            },\n          },\n          required: [\n            'prevent',\n          ],\n        },\n      },\n    ],\n  },\n  create(context) {\n    const jsxElementParents = new Set();\n\n    function isBlockCommentInCurlyBraces(element) {\n      const elementRawValue = getText(context, element);\n      return /^\\s*{\\/\\*/.test(elementRawValue);\n    }\n\n    function isNonBlockComment(element) {\n      return !isBlockCommentInCurlyBraces(element) && (element.type === 'JSXElement' || element.type === 'JSXExpressionContainer');\n    }\n\n    return {\n      'Program:exit'() {\n        jsxElementParents.forEach((parent) => {\n          parent.children.forEach((element, index, elements) => {\n            if (element.type === 'JSXElement' || element.type === 'JSXExpressionContainer') {\n              const configuration = context.options[0] || {};\n              const prevent = configuration.prevent || false;\n              const allowMultilines = configuration.allowMultilines || false;\n\n              const firstAdjacentSibling = elements[index + 1];\n              const secondAdjacentSibling = elements[index + 2];\n\n              const hasSibling = firstAdjacentSibling\n              && secondAdjacentSibling\n              && (firstAdjacentSibling.type === 'Literal' || firstAdjacentSibling.type === 'JSXText');\n\n              if (!hasSibling) return;\n\n              // Check adjacent sibling has the proper amount of newlines\n              const isWithoutNewLine = !/\\n\\s*\\n/.test(firstAdjacentSibling.value);\n\n              if (isBlockCommentInCurlyBraces(element)) return;\n              if (\n                allowMultilines\n                && (\n                  isMultilined(element)\n                  || isMultilined(elements.slice(index + 2).find(isNonBlockComment))\n                )\n              ) {\n                if (!isWithoutNewLine) return;\n\n                const regex = /(\\n)(?!.*\\1)/g;\n                const replacement = '\\n\\n';\n                const messageId = 'allowMultilines';\n\n                report(context, messages[messageId], messageId, {\n                  node: secondAdjacentSibling,\n                  fix(fixer) {\n                    return fixer.replaceText(\n                      firstAdjacentSibling,\n                      getText(context, firstAdjacentSibling).replace(regex, replacement)\n                    );\n                  },\n                });\n\n                return;\n              }\n\n              if (isWithoutNewLine === prevent) return;\n\n              const messageId = prevent\n                ? 'prevent'\n                : 'require';\n\n              const regex = prevent\n                ? /(\\n\\n)(?!.*\\1)/g\n                : /(\\n)(?!.*\\1)/g;\n\n              const replacement = prevent\n                ? '\\n'\n                : '\\n\\n';\n\n              report(context, messages[messageId], messageId, {\n                node: secondAdjacentSibling,\n                fix(fixer) {\n                  return fixer.replaceText(\n                    firstAdjacentSibling,\n                    // double or remove the last newline\n                    getText(context, firstAdjacentSibling).replace(regex, replacement)\n                  );\n                },\n              });\n            }\n          });\n        });\n      },\n      ':matches(JSXElement, JSXFragment) > :matches(JSXElement, JSXExpressionContainer)': (node) => {\n        jsxElementParents.add(node.parent);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevents usage of Function.prototype.bind and arrow functions\n *               in React component props.\n * @author Daniel Lo Nigro <dan.cx>\n * @author Jacky Ho\n */\n\n'use strict';\n\nconst propName = require('jsx-ast-utils/propName');\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\nconst getAncestors = require('../util/eslint').getAncestors;\n\n// -----------------------------------------------------------------------------\n// Rule Definition\n// -----------------------------------------------------------------------------\n\nconst messages = {\n  bindCall: 'JSX props should not use .bind()',\n  arrowFunc: 'JSX props should not use arrow functions',\n  bindExpression: 'JSX props should not use ::',\n  func: 'JSX props should not use functions',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow `.bind()` or arrow functions in JSX props',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('jsx-no-bind'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowArrowFunctions: {\n          default: false,\n          type: 'boolean',\n        },\n        allowBind: {\n          default: false,\n          type: 'boolean',\n        },\n        allowFunctions: {\n          default: false,\n          type: 'boolean',\n        },\n        ignoreRefs: {\n          default: false,\n          type: 'boolean',\n        },\n        ignoreDOMComponents: {\n          default: false,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n\n    // Keep track of all the variable names pointing to a bind call,\n    // bind expression or an arrow function in different block statements\n    const blockVariableNameSets = {};\n\n    /**\n     * @param {string | number} blockStart\n     */\n    function setBlockVariableNameSet(blockStart) {\n      blockVariableNameSets[blockStart] = {\n        arrowFunc: new Set(),\n        bindCall: new Set(),\n        bindExpression: new Set(),\n        func: new Set(),\n      };\n    }\n\n    function getNodeViolationType(node) {\n      if (\n        !configuration.allowBind\n        && astUtil.isCallExpression(node)\n        && node.callee.type === 'MemberExpression'\n        && node.callee.property.type === 'Identifier'\n        && node.callee.property.name === 'bind'\n      ) {\n        return 'bindCall';\n      }\n      if (node.type === 'ConditionalExpression') {\n        return getNodeViolationType(node.test)\n               || getNodeViolationType(node.consequent)\n               || getNodeViolationType(node.alternate);\n      }\n      if (!configuration.allowArrowFunctions && node.type === 'ArrowFunctionExpression') {\n        return 'arrowFunc';\n      }\n      if (\n        !configuration.allowFunctions\n        && (node.type === 'FunctionExpression' || node.type === 'FunctionDeclaration')\n      ) {\n        return 'func';\n      }\n      if (!configuration.allowBind && node.type === 'BindExpression') {\n        return 'bindExpression';\n      }\n\n      return null;\n    }\n\n    /**\n     * @param {string | number} violationType\n     * @param {unknown} variableName\n     * @param {string | number} blockStart\n     */\n    function addVariableNameToSet(violationType, variableName, blockStart) {\n      blockVariableNameSets[blockStart][violationType].add(variableName);\n    }\n\n    function getBlockStatementAncestors(node) {\n      return getAncestors(context, node).filter(\n        (ancestor) => ancestor.type === 'BlockStatement'\n      ).reverse();\n    }\n\n    function reportVariableViolation(node, name, blockStart) {\n      const blockSets = blockVariableNameSets[blockStart];\n      const violationTypes = Object.keys(blockSets);\n\n      return violationTypes.find((type) => {\n        if (blockSets[type].has(name)) {\n          report(context, messages[type], type, {\n            node,\n          });\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    function findVariableViolation(node, name) {\n      getBlockStatementAncestors(node).find(\n        (block) => reportVariableViolation(node, name, block.range[0])\n      );\n    }\n\n    return {\n      BlockStatement(node) {\n        setBlockVariableNameSet(node.range[0]);\n      },\n\n      FunctionDeclaration(node) {\n        const blockAncestors = getBlockStatementAncestors(node);\n        const variableViolationType = getNodeViolationType(node);\n\n        if (blockAncestors.length > 0 && variableViolationType) {\n          addVariableNameToSet(variableViolationType, node.id.name, blockAncestors[0].range[0]);\n        }\n      },\n\n      VariableDeclarator(node) {\n        if (!node.init) {\n          return;\n        }\n        const blockAncestors = getBlockStatementAncestors(node);\n        const variableViolationType = getNodeViolationType(node.init);\n\n        if (\n          blockAncestors.length > 0\n          && variableViolationType\n          && 'kind' in node.parent\n          && node.parent.kind === 'const' // only support const right now\n        ) {\n          addVariableNameToSet(variableViolationType, 'name' in node.id ? node.id.name : undefined, blockAncestors[0].range[0]);\n        }\n      },\n\n      JSXAttribute(node) {\n        const isRef = configuration.ignoreRefs && propName(node) === 'ref';\n        if (isRef || !node.value || !node.value.expression) {\n          return;\n        }\n        const isDOMComponent = jsxUtil.isDOMComponent(node.parent);\n        if (configuration.ignoreDOMComponents && isDOMComponent) {\n          return;\n        }\n        const valueNode = node.value.expression;\n        const valueNodeType = valueNode.type;\n        const nodeViolationType = getNodeViolationType(valueNode);\n\n        if (valueNodeType === 'Identifier') {\n          findVariableViolation(node, valueNode.name);\n        } else if (nodeViolationType) {\n          report(context, messages[nodeViolationType], nodeViolationType, {\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Comments inside children section of tag should be placed inside braces.\n * @author Ben Vinegar\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst getText = require('../util/eslint').getText;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  putCommentInBraces: 'Comments inside children section of tag should be placed inside braces',\n};\n\n/**\n * @param {Context} context\n * @param {ASTNode} node\n * @returns {void}\n */\nfunction checkText(context, node) {\n  // since babel-eslint has the wrong node.raw, we'll get the source text\n  const rawValue = getText(context, node);\n  if (/^\\s*\\/(\\/|\\*)/m.test(rawValue)) {\n    // inside component, e.g. <div>literal</div>\n    if (\n      node.parent.type !== 'JSXAttribute'\n      && node.parent.type !== 'JSXExpressionContainer'\n      && node.parent.type.indexOf('JSX') !== -1\n    ) {\n      report(context, messages.putCommentInBraces, 'putCommentInBraces', {\n        node,\n      });\n    }\n  }\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow comments from being inserted as text nodes',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('jsx-no-comment-textnodes'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      Literal(node) {\n        checkText(context, node);\n      },\n      JSXText(node) {\n        checkText(context, node);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevents jsx context provider values from taking values that\n *               will cause needless rerenders.\n * @author Dylan Oshima\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst getScope = require('../util/eslint').getScope;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n// Recursively checks if an element is a construction.\n// A construction is a variable that changes identity every render.\nfunction isConstruction(node, callScope) {\n  switch (node.type) {\n    case 'Literal':\n      if (node.regex != null) {\n        return { type: 'regular expression', node };\n      }\n      return null;\n    case 'Identifier': {\n      const variableScoping = callScope.set.get(node.name);\n\n      if (variableScoping == null || variableScoping.defs == null) {\n        // If it's not in scope, we don't care.\n        return null; // Handled\n      }\n\n      // Gets the last variable identity\n      const variableDefs = variableScoping.defs;\n      const def = variableDefs[variableDefs.length - 1];\n      if (def != null\n        && def.type !== 'Variable'\n        && def.type !== 'FunctionName'\n      ) {\n        // Parameter or an unusual pattern. Bail out.\n        return null; // Unhandled\n      }\n\n      if (def.node.type === 'FunctionDeclaration') {\n        return { type: 'function declaration', node: def.node, usage: node };\n      }\n\n      const init = def.node.init;\n      if (init == null) {\n        return null;\n      }\n\n      const initConstruction = isConstruction(init, callScope);\n      if (initConstruction == null) {\n        return null;\n      }\n\n      return {\n        type: initConstruction.type,\n        node: initConstruction.node,\n        usage: node,\n      };\n    }\n    case 'ObjectExpression':\n      // Any object initialized inline will create a new identity\n      return { type: 'object', node };\n    case 'ArrayExpression':\n      return { type: 'array', node };\n    case 'ArrowFunctionExpression':\n    case 'FunctionExpression':\n      // Functions that are initialized inline will have a new identity\n      return { type: 'function expression', node };\n    case 'ClassExpression':\n      return { type: 'class expression', node };\n    case 'NewExpression':\n      // `const a = new SomeClass();` is a construction\n      return { type: 'new expression', node };\n    case 'ConditionalExpression':\n      return (isConstruction(node.consequent, callScope)\n        || isConstruction(node.alternate, callScope)\n      );\n    case 'LogicalExpression':\n      return (isConstruction(node.left, callScope)\n        || isConstruction(node.right, callScope)\n      );\n    case 'MemberExpression': {\n      const objConstruction = isConstruction(node.object, callScope);\n      if (objConstruction == null) {\n        return null;\n      }\n      return {\n        type: objConstruction.type,\n        node: objConstruction.node,\n        usage: node.object,\n      };\n    }\n    case 'JSXFragment':\n      return { type: 'JSX fragment', node };\n    case 'JSXElement':\n      return { type: 'JSX element', node };\n    case 'AssignmentExpression': {\n      const construct = isConstruction(node.right, callScope);\n      if (construct != null) {\n        return {\n          type: 'assignment expression',\n          node: construct.node,\n          usage: node,\n        };\n      }\n      return null;\n    }\n    case 'TypeCastExpression':\n    case 'TSAsExpression':\n      return isConstruction(node.expression, callScope);\n    default:\n      return null;\n  }\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  withIdentifierMsg: \"The '{{variableName}}' {{type}} (at line {{nodeLine}}) passed as the value prop to the Context provider (at line {{usageLine}}) changes every render. To fix this consider wrapping it in a useMemo hook.\",\n  withIdentifierMsgFunc: \"The '{{variableName}}' {{type}} (at line {{nodeLine}}) passed as the value prop to the Context provider (at line {{usageLine}}) changes every render. To fix this consider wrapping it in a useCallback hook.\",\n  defaultMsg: 'The {{type}} passed as the value prop to the Context provider (at line {{nodeLine}}) changes every render. To fix this consider wrapping it in a useMemo hook.',\n  defaultMsgFunc: 'The {{type}} passed as the value prop to the Context provider (at line {{nodeLine}}) changes every render. To fix this consider wrapping it in a useCallback hook.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallows JSX context provider values from taking values that will cause needless rerenders',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('jsx-no-constructed-context-values'),\n    },\n    messages,\n    schema: false,\n  },\n\n  // eslint-disable-next-line arrow-body-style\n  create: Components.detect((context, components, utils) => {\n    return {\n      JSXOpeningElement(node) {\n        const openingElementName = node.name;\n        if (openingElementName.type !== 'JSXMemberExpression') {\n          // Has no member\n          return;\n        }\n\n        const isJsxContext = openingElementName.property.name === 'Provider';\n        if (!isJsxContext) {\n          // Member is not Provider\n          return;\n        }\n\n        // Contexts can take in more than just a value prop\n        // so we need to iterate through all of them\n        const jsxValueAttribute = node.attributes.find(\n          (attribute) => attribute.type === 'JSXAttribute' && attribute.name.name === 'value'\n        );\n\n        if (jsxValueAttribute == null) {\n          // No value prop was passed\n          return;\n        }\n\n        const valueNode = jsxValueAttribute.value;\n        if (!valueNode) {\n          // attribute is a boolean shorthand\n          return;\n        }\n        if (valueNode.type !== 'JSXExpressionContainer') {\n          // value could be a literal\n          return;\n        }\n\n        const valueExpression = valueNode.expression;\n        const invocationScope = getScope(context, node);\n\n        // Check if the value prop is a construction\n        const constructInfo = isConstruction(valueExpression, invocationScope);\n        if (constructInfo == null) {\n          return;\n        }\n\n        if (!utils.getParentComponent(node)) {\n          return;\n        }\n\n        // Report found error\n        const constructType = constructInfo.type;\n        const constructNode = constructInfo.node;\n        const constructUsage = constructInfo.usage;\n        const data = {\n          type: constructType, nodeLine: constructNode.loc.start.line,\n        };\n        let messageId = 'defaultMsg';\n\n        // Variable passed to value prop\n        if (constructUsage != null) {\n          messageId = 'withIdentifierMsg';\n          data.usageLine = constructUsage.loc.start.line;\n          data.variableName = constructUsage.name;\n        }\n\n        // Type of expression\n        if (\n          constructType === 'function expression'\n          || constructType === 'function declaration'\n        ) {\n          messageId += 'Func';\n        }\n\n        report(context, messages[messageId], messageId, {\n          node: constructNode,\n          data,\n        });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Enforce no duplicate props\n * @author Markus Ånöstam\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noDuplicateProps: 'No duplicate props allowed',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow duplicate properties in JSX',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('jsx-no-duplicate-props'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignoreCase: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const ignoreCase = configuration.ignoreCase || false;\n\n    return {\n      JSXOpeningElement(node) {\n        const props = {};\n\n        node.attributes.forEach((decl) => {\n          if (decl.type === 'JSXSpreadAttribute') {\n            return;\n          }\n\n          let name = decl.name.name;\n\n          if (typeof name !== 'string') {\n            return;\n          }\n\n          if (ignoreCase) {\n            name = name.toLowerCase();\n          }\n\n          if (has(props, name)) {\n            report(context, messages.noDuplicateProps, 'noDuplicateProps', {\n              node: decl,\n            });\n          } else {\n            props[name] = 1;\n          }\n        });\n      },\n    };\n  },\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('es-abstract/2024/Call');\nvar GetIteratorDirect = require('../aos/GetIteratorDirect');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar IteratorClose = require('es-abstract/2024/IteratorClose');\nvar IteratorStepValue = require('es-abstract/2024/IteratorStepValue');\nvar NormalCompletion = require('es-abstract/2024/NormalCompletion');\nvar ThrowCompletion = require('es-abstract/2024/ThrowCompletion');\nvar ToBoolean = require('es-abstract/2024/ToBoolean');\nvar Type = require('es-abstract/2024/Type');\n\nmodule.exports = function find(predicate) {\n\tif (this instanceof find) {\n\t\tthrow new $TypeError('`find` is not a constructor');\n\t}\n\n\tvar O = this; // step 1\n\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('`this` value must be an Object'); // step 2\n\t}\n\n\tif (!IsCallable(predicate)) {\n\t\tthrow new $TypeError('`predicate` must be a function'); // step 3\n\t}\n\n\tvar iterated = GetIteratorDirect(O); // step 4\n\n\tvar counter = 0; // step 5\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) { // step 6\n\t\tvar value = IteratorStepValue(iterated); // step 6.a\n\t\tif (iterated['[[Done]]']) {\n\t\t\treturn void undefined; // step 6.b\n\t\t}\n\t\tvar result;\n\t\ttry {\n\t\t\tresult = Call(predicate, void undefined, [value, counter]); // step 6.c\n\t\t} catch (e) {\n\t\t\t// close iterator // step 6.d\n\t\t\tIteratorClose(\n\t\t\t\titerated,\n\t\t\t\tThrowCompletion(e)\n\t\t\t);\n\t\t} finally {\n\t\t\tcounter += 1; // step 6.f\n\t\t}\n\t\tif (ToBoolean(result)) {\n\t\t\treturn IteratorClose(\n\t\t\t\titerated,\n\t\t\t\tNormalCompletion(value)\n\t\t\t); // step 6.e\n\t\t}\n\t}\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Iterator === 'function' && typeof Iterator.prototype.find === 'function'\n\t\t? Iterator.prototype.find\n\t\t: implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nvar $IteratorPrototype = require('../Iterator.prototype/implementation');\n\nmodule.exports = function shimIteratorPrototypeFind() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\t$IteratorPrototype,\n\t\t{ find: polyfill },\n\t\t{ find: function () { return $IteratorPrototype.find !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill());\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "/**\n * @fileoverview Prevent problematic leaked values from being rendered\n * @author Mario Beltrán\n */\n\n'use strict';\n\nconst find = require('es-iterator-helpers/Iterator.prototype.find');\nconst from = require('es-iterator-helpers/Iterator.from');\n\nconst getText = require('../util/eslint').getText;\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst variableUtil = require('../util/variable');\nconst testReactVersion = require('../util/version').testReactVersion;\nconst isParenthesized = require('../util/ast').isParenthesized;\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nconst messages = {\n  noPotentialLeakedRender: 'Potential leaked value that might cause unintentionally rendered values or rendering crashes',\n};\n\nconst COERCE_STRATEGY = 'coerce';\nconst TERNARY_STRATEGY = 'ternary';\nconst DEFAULT_VALID_STRATEGIES = [TERNARY_STRATEGY, COERCE_STRATEGY];\nconst COERCE_VALID_LEFT_SIDE_EXPRESSIONS = ['UnaryExpression', 'BinaryExpression', 'CallExpression'];\nconst TERNARY_INVALID_ALTERNATE_VALUES = [undefined, null, false];\n\nfunction trimLeftNode(node) {\n  // Remove double unary expression (boolean coercion), so we avoid trimming valid negations\n  if (node.type === 'UnaryExpression' && node.argument.type === 'UnaryExpression') {\n    return trimLeftNode(node.argument.argument);\n  }\n\n  return node;\n}\n\nfunction getIsCoerceValidNestedLogicalExpression(node) {\n  if (node.type === 'LogicalExpression') {\n    return getIsCoerceValidNestedLogicalExpression(node.left) && getIsCoerceValidNestedLogicalExpression(node.right);\n  }\n\n  return COERCE_VALID_LEFT_SIDE_EXPRESSIONS.some((validExpression) => validExpression === node.type);\n}\n\nfunction extractExpressionBetweenLogicalAnds(node) {\n  if (node.type !== 'LogicalExpression') return [node];\n  if (node.operator !== '&&') return [node];\n  return [].concat(\n    extractExpressionBetweenLogicalAnds(node.left),\n    extractExpressionBetweenLogicalAnds(node.right)\n  );\n}\n\nfunction ruleFixer(context, fixStrategy, fixer, reportedNode, leftNode, rightNode) {\n  const rightSideText = getText(context, rightNode);\n\n  if (fixStrategy === COERCE_STRATEGY) {\n    const expressions = extractExpressionBetweenLogicalAnds(leftNode);\n    const newText = expressions.map((node) => {\n      let nodeText = getText(context, node);\n      if (isParenthesized(context, node)) {\n        nodeText = `(${nodeText})`;\n      }\n      if (node.parent && node.parent.type === 'ConditionalExpression' && node.parent.consequent.value === false) {\n        return `${getIsCoerceValidNestedLogicalExpression(node) ? '' : '!'}${nodeText}`;\n      }\n      return `${getIsCoerceValidNestedLogicalExpression(node) ? '' : '!!'}${nodeText}`;\n    }).join(' && ');\n\n    if (rightNode.parent && rightNode.parent.type === 'ConditionalExpression' && rightNode.parent.consequent.value === false) {\n      const consequentVal = rightNode.parent.consequent.raw || rightNode.parent.consequent.name;\n      const alternateVal = rightNode.parent.alternate.raw || rightNode.parent.alternate.name;\n      if (rightNode.parent.test && rightNode.parent.test.type === 'LogicalExpression') {\n        return fixer.replaceText(reportedNode, `${newText} ? ${consequentVal} : ${alternateVal}`);\n      }\n      return fixer.replaceText(reportedNode, `${newText} && ${alternateVal}`);\n    }\n\n    if (rightNode.type === 'ConditionalExpression' || rightNode.type === 'LogicalExpression') {\n      return fixer.replaceText(reportedNode, `${newText} && (${rightSideText})`);\n    }\n    if (rightNode.type === 'JSXElement') {\n      const rightSideTextLines = rightSideText.split('\\n');\n      if (rightSideTextLines.length > 1) {\n        const rightSideTextLastLine = rightSideTextLines[rightSideTextLines.length - 1];\n        const indentSpacesStart = ' '.repeat(rightSideTextLastLine.search(/\\S/));\n        const indentSpacesClose = ' '.repeat(rightSideTextLastLine.search(/\\S/) - 2);\n        return fixer.replaceText(reportedNode, `${newText} && (\\n${indentSpacesStart}${rightSideText}\\n${indentSpacesClose})`);\n      }\n    }\n    if (rightNode.type === 'Literal') {\n      return null;\n    }\n    return fixer.replaceText(reportedNode, `${newText} && ${rightSideText}`);\n  }\n\n  if (fixStrategy === TERNARY_STRATEGY) {\n    let leftSideText = getText(context, trimLeftNode(leftNode));\n    if (isParenthesized(context, leftNode)) {\n      leftSideText = `(${leftSideText})`;\n    }\n    return fixer.replaceText(reportedNode, `${leftSideText} ? ${rightSideText} : null`);\n  }\n\n  throw new TypeError('Invalid value for \"validStrategies\" option');\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow problematic leaked values from being rendered',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('jsx-no-leaked-render'),\n    },\n\n    messages,\n\n    fixable: 'code',\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          validStrategies: {\n            type: 'array',\n            items: {\n              enum: [\n                TERNARY_STRATEGY,\n                COERCE_STRATEGY,\n              ],\n            },\n            uniqueItems: true,\n            default: DEFAULT_VALID_STRATEGIES,\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const config = context.options[0] || {};\n    const validStrategies = new Set(config.validStrategies || DEFAULT_VALID_STRATEGIES);\n    const fixStrategy = find(from(validStrategies), () => true);\n\n    return {\n      'JSXExpressionContainer > LogicalExpression[operator=\"&&\"]'(node) {\n        const leftSide = node.left;\n\n        const isCoerceValidLeftSide = COERCE_VALID_LEFT_SIDE_EXPRESSIONS\n          .some((validExpression) => validExpression === leftSide.type);\n        if (validStrategies.has(COERCE_STRATEGY)) {\n          if (isCoerceValidLeftSide || getIsCoerceValidNestedLogicalExpression(leftSide)) {\n            return;\n          }\n          const leftSideVar = variableUtil.getVariableFromContext(context, node, leftSide.name);\n          if (leftSideVar) {\n            const leftSideValue = leftSideVar.defs\n              && leftSideVar.defs.length\n              && leftSideVar.defs[0].node.init\n              && leftSideVar.defs[0].node.init.value;\n            if (typeof leftSideValue === 'boolean') {\n              return;\n            }\n          }\n        }\n\n        if (testReactVersion(context, '>= 18') && leftSide.type === 'Literal' && leftSide.value === '') {\n          return;\n        }\n        report(context, messages.noPotentialLeakedRender, 'noPotentialLeakedRender', {\n          node,\n          fix(fixer) {\n            return ruleFixer(context, fixStrategy, fixer, node, leftSide, node.right);\n          },\n        });\n      },\n\n      'JSXExpressionContainer > ConditionalExpression'(node) {\n        if (validStrategies.has(TERNARY_STRATEGY)) {\n          return;\n        }\n\n        const isValidTernaryAlternate = TERNARY_INVALID_ALTERNATE_VALUES.indexOf(node.alternate.value) === -1;\n        const isJSXElementAlternate = node.alternate.type === 'JSXElement';\n        if (isValidTernaryAlternate || isJSXElementAlternate) {\n          return;\n        }\n\n        report(context, messages.noPotentialLeakedRender, 'noPotentialLeakedRender', {\n          node,\n          fix(fixer) {\n            return ruleFixer(context, fixStrategy, fixer, node, node.test, node.consequent);\n          },\n        });\n      },\n    };\n  },\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('es-abstract/2024/Call');\nvar CompletionRecord = require('es-abstract/2024/CompletionRecord');\nvar CreateIteratorFromClosure = require('../aos/CreateIteratorFromClosure');\nvar GetIteratorDirect = require('../aos/GetIteratorDirect');\nvar GetIteratorFlattenable = require('../aos/GetIteratorFlattenable');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar IteratorClose = require('es-abstract/2024/IteratorClose');\nvar IteratorStepValue = require('es-abstract/2024/IteratorStepValue');\nvar ThrowCompletion = require('es-abstract/2024/ThrowCompletion');\nvar Type = require('es-abstract/2024/Type');\n\nvar iterHelperProto = require('../IteratorHelperPrototype');\n\nvar SLOT = require('internal-slot');\n\nmodule.exports = function flatMap(mapper) {\n\tif (this instanceof flatMap) {\n\t\tthrow new $TypeError('`flatMap` is not a constructor');\n\t}\n\n\tvar O = this; // step 1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('`this` value must be an Object'); // step 2\n\t}\n\n\tif (!IsCallable(mapper)) {\n\t\tthrow new $TypeError('`mapper` must be a function'); // step 3\n\t}\n\n\tvar iterated = GetIteratorDirect(O); // step 4\n\n\tvar sentinel = { sentinel: true };\n\tvar innerIterator = sentinel;\n\n\tvar closeIfAbrupt = function (abruptCompletion) {\n\t\tif (!(abruptCompletion instanceof CompletionRecord)) {\n\t\t\tthrow new $TypeError('`abruptCompletion` must be a Completion Record');\n\t\t}\n\t\ttry {\n\t\t\tif (innerIterator !== sentinel) {\n\t\t\t\tIteratorClose(\n\t\t\t\t\tinnerIterator,\n\t\t\t\t\tabruptCompletion\n\t\t\t\t);\n\t\t\t}\n\t\t} finally {\n\t\t\tinnerIterator = sentinel;\n\n\t\t\tIteratorClose(\n\t\t\t\titerated,\n\t\t\t\tabruptCompletion\n\t\t\t);\n\t\t}\n\t};\n\n\tvar counter = 0; // step 5.a\n\tvar innerAlive = false;\n\tvar closure = function () {\n\t\t// while (true) { // step 5.b\n\t\tif (innerIterator === sentinel) {\n\t\t\tvar value = IteratorStepValue(iterated); // step 5.b.i\n\t\t\tif (iterated['[[Done]]']) {\n\t\t\t\tinnerAlive = false;\n\t\t\t\tinnerIterator = sentinel;\n\t\t\t\t// return void undefined; // step 5.b.ii\n\t\t\t\treturn sentinel;\n\t\t\t}\n\t\t}\n\n\t\tif (innerIterator === sentinel) {\n\t\t\tinnerAlive = true; // step 5.b.viii\n\t\t\ttry {\n\t\t\t\tvar mapped = Call(mapper, void undefined, [value, counter]); // step 5.b.iv\n\t\t\t\t// yield mapped // step 5.b.vi\n\t\t\t\tinnerIterator = GetIteratorFlattenable(mapped, 'reject-strings'); // step 5.b.vi\n\t\t\t} catch (e) {\n\t\t\t\tinnerAlive = false;\n\t\t\t\tinnerIterator = sentinel;\n\t\t\t\tcloseIfAbrupt(ThrowCompletion(e)); // steps 5.b.v, 5.b.vii\n\t\t\t} finally {\n\t\t\t\tcounter += 1; // step 5.b.x\n\t\t\t}\n\t\t}\n\t\t// while (innerAlive) { // step 5.b.ix\n\t\tif (innerAlive) {\n\t\t\t// step 5.b.ix.4\n\t\t\tvar innerValue;\n\t\t\ttry {\n\t\t\t\tinnerValue = IteratorStepValue(innerIterator); // step 5.b.ix.4.a\n\t\t\t} catch (e) {\n\t\t\t\tinnerAlive = false;\n\t\t\t\tinnerIterator = sentinel;\n\t\t\t\tcloseIfAbrupt(ThrowCompletion(e)); // step 5.b.ix.4.b\n\t\t\t}\n\t\t\tif (innerIterator['[[Done]]']) {\n\t\t\t\tinnerAlive = false;\n\t\t\t\tinnerIterator = sentinel;\n\t\t\t\treturn closure();\n\t\t\t}\n\t\t\treturn innerValue; // step 5.b.ix.4.c\n\t\t}\n\t\t// }\n\t\t// return void undefined;\n\t\treturn sentinel;\n\t};\n\tSLOT.set(closure, '[[Sentinel]]', sentinel); // for the userland implementation\n\tSLOT.set(closure, '[[CloseIfAbrupt]]', closeIfAbrupt); // for the userland implementation\n\n\tvar result = CreateIteratorFromClosure(closure, 'Iterator Helper', iterHelperProto, ['[[UnderlyingIterator]]']); // step 7\n\n\tSLOT.set(result, '[[UnderlyingIterator]]', iterated); // step 8\n\n\treturn result; // step 9\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (typeof Iterator === 'function' && typeof Iterator.prototype.flatMap === 'function') {\n\t\ttry {\n\t\t\t// https://issues.chromium.org/issues/336839115\n\t\t\tIterator.prototype.flatMap.call({ next: null }, function () {}).next();\n\t\t} catch (e) {\n\t\t\treturn Iterator.prototype.flatMap;\n\t\t}\n\t}\n\treturn implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nvar $IteratorPrototype = require('../Iterator.prototype/implementation');\n\nmodule.exports = function shimIteratorPrototypeFlatMap() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\t$IteratorPrototype,\n\t\t{ flatMap: polyfill },\n\t\t{ flatMap: function () { return $IteratorPrototype.flatMap !== polyfill; } }\n\t);\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill());\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n", "/**\n * @fileoverview Prevent using string literals in React component definition\n * @author Caleb Morris\n * @author David Buchan-Swanson\n */\n\n'use strict';\n\nconst iterFrom = require('es-iterator-helpers/Iterator.from');\nconst map = require('es-iterator-helpers/Iterator.prototype.map');\nconst some = require('es-iterator-helpers/Iterator.prototype.some');\nconst flatMap = require('es-iterator-helpers/Iterator.prototype.flatMap');\nconst fromEntries = require('object.fromentries');\nconst entries = require('object.entries');\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst getText = require('../util/eslint').getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n/**\n * @param {unknown} value\n * @returns {string | unknown}\n */\nfunction trimIfString(value) {\n  return typeof value === 'string' ? value.trim() : value;\n}\n\nconst reOverridableElement = /^[A-Z][\\w.]*$/;\nconst reIsWhiteSpace = /^[\\s]+$/;\nconst jsxElementTypes = new Set(['JSXElement', 'JSXFragment']);\nconst standardJSXNodeParentTypes = new Set(['JSXAttribute', 'JSXElement', 'JSXExpressionContainer', 'JSXFragment']);\n\nconst messages = {\n  invalidPropValue: 'Invalid prop value: \"{{text}}\"',\n  invalidPropValueInElement: 'Invalid prop value: \"{{text}}\" in {{element}}',\n  noStringsInAttributes: 'Strings not allowed in attributes: \"{{text}}\"',\n  noStringsInAttributesInElement: 'Strings not allowed in attributes: \"{{text}}\" in {{element}}',\n  noStringsInJSX: 'Strings not allowed in JSX files: \"{{text}}\"',\n  noStringsInJSXInElement: 'Strings not allowed in JSX files: \"{{text}}\" in {{element}}',\n  literalNotInJSXExpression: 'Missing JSX expression container around literal string: \"{{text}}\"',\n  literalNotInJSXExpressionInElement: 'Missing JSX expression container around literal string: \"{{text}}\" in {{element}}',\n};\n\n/** @type {Exclude<import('eslint').Rule.RuleModule['meta']['schema'], unknown[]>['properties']} */\nconst commonPropertiesSchema = {\n  noStrings: {\n    type: 'boolean',\n  },\n  allowedStrings: {\n    type: 'array',\n    uniqueItems: true,\n    items: {\n      type: 'string',\n    },\n  },\n  ignoreProps: {\n    type: 'boolean',\n  },\n  noAttributeStrings: {\n    type: 'boolean',\n  },\n};\n\n/**\n * @typedef RawElementConfigProperties\n * @property {boolean} [noStrings]\n * @property {string[]} [allowedStrings]\n * @property {boolean} [ignoreProps]\n * @property {boolean} [noAttributeStrings]\n *\n * @typedef RawOverrideConfigProperties\n * @property {boolean} [allowElement]\n * @property {boolean} [applyToNestedElements=true]\n *\n * @typedef {RawElementConfigProperties} RawElementConfig\n * @typedef {RawElementConfigProperties & RawElementConfigProperties} RawOverrideConfig\n *\n * @typedef RawElementOverrides\n * @property {Record<string, RawOverrideConfig>} [elementOverrides]\n *\n * @typedef {RawElementConfig & RawElementOverrides} RawConfig\n *\n * ----------------------------------------------------------------------\n *\n * @typedef ElementConfigType\n * @property {'element'} type\n *\n * @typedef ElementConfigProperties\n * @property {boolean} noStrings\n * @property {Set<string>} allowedStrings\n * @property {boolean} ignoreProps\n * @property {boolean} noAttributeStrings\n *\n * @typedef OverrideConfigProperties\n * @property {'override'} type\n * @property {string} name\n * @property {boolean} allowElement\n * @property {boolean} applyToNestedElements\n *\n * @typedef {ElementConfigType & ElementConfigProperties} ElementConfig\n * @typedef {OverrideConfigProperties & ElementConfigProperties} OverrideConfig\n *\n * @typedef ElementOverrides\n * @property {Record<string, OverrideConfig>} elementOverrides\n *\n * @typedef {ElementConfig & ElementOverrides} Config\n * @typedef {Config | OverrideConfig} ResolvedConfig\n */\n\n/**\n * Normalizes the element portion of the config\n * @param {RawConfig} config\n * @returns {ElementConfig}\n */\nfunction normalizeElementConfig(config) {\n  return {\n    type: 'element',\n    noStrings: !!config.noStrings,\n    allowedStrings: config.allowedStrings\n      ? new Set(map(iterFrom(config.allowedStrings), trimIfString))\n      : new Set(),\n    ignoreProps: !!config.ignoreProps,\n    noAttributeStrings: !!config.noAttributeStrings,\n  };\n}\n\n/**\n * Normalizes the config and applies default values to all config options\n * @param {RawConfig} config\n * @returns {Config}\n */\nfunction normalizeConfig(config) {\n  /** @type {Config} */\n  const normalizedConfig = Object.assign(normalizeElementConfig(config), {\n    elementOverrides: {},\n  });\n\n  if (config.elementOverrides) {\n    normalizedConfig.elementOverrides = fromEntries(\n      flatMap(\n        iterFrom(entries(config.elementOverrides)),\n        (entry) => {\n          const elementName = entry[0];\n          const rawElementConfig = entry[1];\n\n          if (!reOverridableElement.test(elementName)) {\n            return [];\n          }\n\n          return [[\n            elementName,\n            Object.assign(normalizeElementConfig(rawElementConfig), {\n              type: 'override',\n              name: elementName,\n              allowElement: !!rawElementConfig.allowElement,\n              applyToNestedElements: typeof rawElementConfig.applyToNestedElements === 'undefined' || !!rawElementConfig.applyToNestedElements,\n            }),\n          ]];\n        }\n      )\n    );\n  }\n\n  return normalizedConfig;\n}\n\nconst elementOverrides = {\n  type: 'object',\n  patternProperties: {\n    [reOverridableElement.source]: {\n      type: 'object',\n      properties: Object.assign(\n        { applyToNestedElements: { type: 'boolean' } },\n        commonPropertiesSchema\n      ),\n\n    },\n  },\n};\n\nmodule.exports = {\n  meta: /** @type {import('eslint').Rule.RuleModule[\"meta\"]} */ ({\n    docs: {\n      description: 'Disallow usage of string literals in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-no-literals'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: Object.assign(\n        { elementOverrides },\n        commonPropertiesSchema\n      ),\n      additionalProperties: false,\n    }],\n  }),\n\n  create(context) {\n    /** @type {RawConfig} */\n    const rawConfig = (context.options.length && context.options[0]) || {};\n    const config = normalizeConfig(rawConfig);\n\n    const hasElementOverrides = Object.keys(config.elementOverrides).length > 0;\n\n    /** @type {Map<string, string>} */\n    const renamedImportMap = new Map();\n\n    /**\n     * Determines if the given expression is a require statement. Supports\n     * nested MemberExpresions. ie `require('foo').nested.property`\n     * @param {ASTNode} node\n     * @returns {boolean}\n     */\n    function isRequireStatement(node) {\n      if (node.type === 'CallExpression') {\n        if (node.callee.type === 'Identifier') {\n          return node.callee.name === 'require';\n        }\n      }\n      if (node.type === 'MemberExpression') {\n        return isRequireStatement(node.object);\n      }\n\n      return false;\n    }\n\n    /** @typedef {{ name: string, compoundName?: string }} ElementNameFragment */\n\n    /**\n     * Gets the name of the given JSX element. Supports nested\n     * JSXMemeberExpressions. ie `<Namesapce.Component.SubComponent />`\n     * @param {ASTNode} node\n     * @returns {ElementNameFragment | undefined}\n     */\n    function getJSXElementName(node) {\n      if (node.openingElement.name.type === 'JSXIdentifier') {\n        const name = node.openingElement.name.name;\n        return {\n          name: renamedImportMap.get(name) || name,\n          compoundName: undefined,\n        };\n      }\n\n      /** @type {string[]} */\n      const nameFragments = [];\n\n      if (node.openingElement.name.type === 'JSXMemberExpression') {\n        /** @type {ASTNode} */\n        let current = node.openingElement.name;\n        while (current.type === 'JSXMemberExpression') {\n          if (current.property.type === 'JSXIdentifier') {\n            nameFragments.unshift(current.property.name);\n          }\n\n          current = current.object;\n        }\n\n        if (current.type === 'JSXIdentifier') {\n          nameFragments.unshift(current.name);\n\n          const rootFragment = nameFragments[0];\n          if (rootFragment) {\n            const rootFragmentRenamed = renamedImportMap.get(rootFragment);\n            if (rootFragmentRenamed) {\n              nameFragments[0] = rootFragmentRenamed;\n            }\n          }\n\n          const nameFragment = nameFragments[nameFragments.length - 1];\n          if (nameFragment) {\n            return {\n              name: nameFragment,\n              compoundName: nameFragments.join('.'),\n            };\n          }\n        }\n      }\n    }\n\n    /**\n     * Gets all JSXElement ancestor nodes for the given node\n     * @param {ASTNode} node\n     * @returns {ASTNode[]}\n     */\n    function getJSXElementAncestors(node) {\n      /** @type {ASTNode[]} */\n      const ancestors = [];\n\n      let current = node;\n      while (current) {\n        if (current.type === 'JSXElement') {\n          ancestors.push(current);\n        }\n\n        current = current.parent;\n      }\n\n      return ancestors;\n    }\n\n    /**\n     * @param {ASTNode} node\n     * @returns {ASTNode}\n     */\n    function getParentIgnoringBinaryExpressions(node) {\n      let current = node;\n      while (current.parent.type === 'BinaryExpression') {\n        current = current.parent;\n      }\n      return current.parent;\n    }\n\n    /**\n     * @param {ASTNode} node\n     * @returns {{ parent: ASTNode, grandParent: ASTNode }}\n     */\n    function getParentAndGrandParent(node) {\n      const parent = getParentIgnoringBinaryExpressions(node);\n      return {\n        parent,\n        grandParent: parent.parent,\n      };\n    }\n\n    /**\n     * @param {ASTNode} node\n     * @returns {boolean}\n     */\n    function hasJSXElementParentOrGrandParent(node) {\n      const ancestors = getParentAndGrandParent(node);\n      return some(iterFrom([ancestors.parent, ancestors.grandParent]), (parent) => jsxElementTypes.has(parent.type));\n    }\n\n    /**\n     * Determines whether a given node's value and its immediate parent are\n     * viable text nodes that can/should be reported on\n     * @param {ASTNode} node\n     * @param {ResolvedConfig} resolvedConfig\n     * @returns {boolean}\n     */\n    function isViableTextNode(node, resolvedConfig) {\n      const textValues = iterFrom([trimIfString(node.raw), trimIfString(node.value)]);\n      if (some(textValues, (value) => resolvedConfig.allowedStrings.has(value))) {\n        return false;\n      }\n\n      const parent = getParentIgnoringBinaryExpressions(node);\n\n      let isStandardJSXNode = false;\n      if (typeof node.value === 'string' && !reIsWhiteSpace.test(node.value) && standardJSXNodeParentTypes.has(parent.type)) {\n        if (resolvedConfig.noAttributeStrings) {\n          isStandardJSXNode = parent.type === 'JSXAttribute' || parent.type === 'JSXElement';\n        } else {\n          isStandardJSXNode = parent.type !== 'JSXAttribute';\n        }\n      }\n\n      if (resolvedConfig.noStrings) {\n        return isStandardJSXNode;\n      }\n\n      return isStandardJSXNode && parent.type !== 'JSXExpressionContainer';\n    }\n\n    /**\n     * Gets an override config for a given node. For any given node, we also\n     * need to traverse the ancestor tree to determine if an ancestor's config\n     * will also apply to the current node.\n     * @param {ASTNode} node\n     * @returns {OverrideConfig | undefined}\n     */\n    function getOverrideConfig(node) {\n      if (!hasElementOverrides) {\n        return;\n      }\n\n      const allAncestorElements = getJSXElementAncestors(node);\n      if (!allAncestorElements.length) {\n        return;\n      }\n\n      for (const ancestorElement of allAncestorElements) {\n        const isClosestJSXAncestor = ancestorElement === allAncestorElements[0];\n\n        const ancestor = getJSXElementName(ancestorElement);\n        if (ancestor) {\n          if (ancestor.name) {\n            const ancestorElements = config.elementOverrides[ancestor.name];\n            const ancestorConfig = ancestor.compoundName\n              ? config.elementOverrides[ancestor.compoundName] || ancestorElements\n              : ancestorElements;\n\n            if (ancestorConfig) {\n              if (isClosestJSXAncestor || ancestorConfig.applyToNestedElements) {\n                return ancestorConfig;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * @param {ResolvedConfig} resolvedConfig\n     * @returns {boolean}\n     */\n    function shouldAllowElement(resolvedConfig) {\n      return resolvedConfig.type === 'override' && 'allowElement' in resolvedConfig && !!resolvedConfig.allowElement;\n    }\n\n    /**\n     * @param {boolean} ancestorIsJSXElement\n     * @param {ResolvedConfig} resolvedConfig\n     * @returns {string}\n     */\n    function defaultMessageId(ancestorIsJSXElement, resolvedConfig) {\n      if (resolvedConfig.noAttributeStrings && !ancestorIsJSXElement) {\n        return resolvedConfig.type === 'override' ? 'noStringsInAttributesInElement' : 'noStringsInAttributes';\n      }\n\n      if (resolvedConfig.noStrings) {\n        return resolvedConfig.type === 'override' ? 'noStringsInJSXInElement' : 'noStringsInJSX';\n      }\n\n      return resolvedConfig.type === 'override' ? 'literalNotInJSXExpressionInElement' : 'literalNotInJSXExpression';\n    }\n\n    /**\n     * @param {ASTNode} node\n     * @param {string} messageId\n     * @param {ResolvedConfig} resolvedConfig\n     */\n    function reportLiteralNode(node, messageId, resolvedConfig) {\n      report(context, messages[messageId], messageId, {\n        node,\n        data: {\n          text: getText(context, node).trim(),\n          element: resolvedConfig.type === 'override' && 'name' in resolvedConfig ? resolvedConfig.name : undefined,\n        },\n      });\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return Object.assign(hasElementOverrides ? {\n      // Get renamed import local names mapped to their imported name\n      ImportDeclaration(node) {\n        node.specifiers\n          .filter((s) => s.type === 'ImportSpecifier')\n          .forEach((specifier) => {\n            renamedImportMap.set(\n              (specifier.local || specifier.imported).name,\n              specifier.imported.name\n            );\n          });\n      },\n\n      // Get renamed destructured local names mapped to their imported name\n      VariableDeclaration(node) {\n        node.declarations\n          .filter((d) => (\n            d.type === 'VariableDeclarator'\n            && isRequireStatement(d.init)\n            && d.id.type === 'ObjectPattern'\n          ))\n          .forEach((declaration) => {\n            declaration.id.properties\n              .filter((property) => (\n                property.type === 'Property'\n                && property.key.type === 'Identifier'\n                && property.value.type === 'Identifier'\n              ))\n              .forEach((property) => {\n                renamedImportMap.set(property.value.name, property.key.name);\n              });\n          });\n      },\n    } : false, {\n      Literal(node) {\n        const resolvedConfig = getOverrideConfig(node) || config;\n\n        const hasJSXParentOrGrandParent = hasJSXElementParentOrGrandParent(node);\n        if (hasJSXParentOrGrandParent && shouldAllowElement(resolvedConfig)) {\n          return;\n        }\n\n        if (isViableTextNode(node, resolvedConfig)) {\n          if (hasJSXParentOrGrandParent || !config.ignoreProps) {\n            reportLiteralNode(node, defaultMessageId(hasJSXParentOrGrandParent, resolvedConfig), resolvedConfig);\n          }\n        }\n      },\n\n      JSXAttribute(node) {\n        const isLiteralString = node.value && node.value.type === 'Literal'\n          && typeof node.value.value === 'string';\n        const isStringLiteral = node.value && node.value.type === 'StringLiteral';\n\n        if (isLiteralString || isStringLiteral) {\n          const resolvedConfig = getOverrideConfig(node) || config;\n\n          if (\n            resolvedConfig.noStrings\n            && !resolvedConfig.ignoreProps\n            && !resolvedConfig.allowedStrings.has(node.value.value)\n          ) {\n            const messageId = resolvedConfig.type === 'override' ? 'invalidPropValueInElement' : 'invalidPropValue';\n            reportLiteralNode(node, messageId, resolvedConfig);\n          }\n        }\n      },\n\n      JSXText(node) {\n        const resolvedConfig = getOverrideConfig(node) || config;\n\n        if (shouldAllowElement(resolvedConfig)) {\n          return;\n        }\n\n        if (isViableTextNode(node, resolvedConfig)) {\n          const hasJSXParendOrGrantParent = hasJSXElementParentOrGrandParent(node);\n          reportLiteralNode(node, defaultMessageId(hasJSXParendOrGrantParent, resolvedConfig), resolvedConfig);\n        }\n      },\n\n      TemplateLiteral(node) {\n        const ancestors = getParentAndGrandParent(node);\n        const isParentJSXExpressionCont = ancestors.parent.type === 'JSXExpressionContainer';\n        const isParentJSXElement = ancestors.grandParent.type === 'JSXElement';\n\n        if (isParentJSXExpressionCont) {\n          const resolvedConfig = getOverrideConfig(node) || config;\n\n          if (\n            resolvedConfig.noStrings\n            && (isParentJSXElement || !resolvedConfig.ignoreProps)\n          ) {\n            reportLiteralNode(node, defaultMessageId(isParentJSXElement, resolvedConfig), resolvedConfig);\n          }\n        }\n      },\n    });\n  },\n};\n", "/**\n * @fileoverview Utility functions for propWrapperFunctions setting\n */\n\n'use strict';\n\nconst iterFrom = require('es-iterator-helpers/Iterator.from');\nconst map = require('es-iterator-helpers/Iterator.prototype.map');\n\n/** TODO: type {(string | { name: string, linkAttribute: string })[]} */\n/** @type {any} */\nconst DEFAULT_LINK_COMPONENTS = ['a'];\nconst DEFAULT_LINK_ATTRIBUTE = 'href';\n\n/** TODO: type {(string | { name: string, formAttribute: string })[]} */\n/** @type {any} */\nconst DEFAULT_FORM_COMPONENTS = ['form'];\nconst DEFAULT_FORM_ATTRIBUTE = 'action';\n\nfunction getFormComponents(context) {\n  const settings = context.settings || {};\n  const formComponents = /** @type {typeof DEFAULT_FORM_COMPONENTS} */ (\n    DEFAULT_FORM_COMPONENTS.concat(settings.formComponents || [])\n  );\n  return new Map(map(iterFrom(formComponents), (value) => {\n    if (typeof value === 'string') {\n      return [value, [DEFAULT_FORM_ATTRIBUTE]];\n    }\n    return [value.name, [].concat(value.formAttribute)];\n  }));\n}\n\nfunction getLinkComponents(context) {\n  const settings = context.settings || {};\n  const linkComponents = /** @type {typeof DEFAULT_LINK_COMPONENTS} */ (\n    DEFAULT_LINK_COMPONENTS.concat(settings.linkComponents || [])\n  );\n  return new Map(map(iterFrom(linkComponents), (value) => {\n    if (typeof value === 'string') {\n      return [value, [DEFAULT_LINK_ATTRIBUTE]];\n    }\n    return [value.name, [].concat(value.linkAttribute)];\n  }));\n}\n\nmodule.exports = {\n  getFormComponents,\n  getLinkComponents,\n};\n", "/**\n * @fileoverview Prevent usage of `javascript:` URLs\n * @author Sergei Startsev\n */\n\n'use strict';\n\nconst includes = require('array-includes');\nconst docsUrl = require('../util/docsUrl');\nconst linkComponentsUtil = require('../util/linkComponents');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n// https://github.com/facebook/react/blob/d0ebde77f6d1232cefc0da184d731943d78e86f2/packages/react-dom/src/shared/sanitizeURL.js#L30\n/* eslint-disable-next-line max-len, no-control-regex */\nconst isJavaScriptProtocol = /^[\\u0000-\\u001F ]*j[\\r\\n\\t]*a[\\r\\n\\t]*v[\\r\\n\\t]*a[\\r\\n\\t]*s[\\r\\n\\t]*c[\\r\\n\\t]*r[\\r\\n\\t]*i[\\r\\n\\t]*p[\\r\\n\\t]*t[\\r\\n\\t]*:/i;\n\nfunction hasJavaScriptProtocol(attr) {\n  return attr.value && attr.value.type === 'Literal'\n    && isJavaScriptProtocol.test(attr.value.value);\n}\n\nfunction shouldVerifyProp(node, config) {\n  const name = node.name && node.name.name;\n  const parentName = node.parent.name && node.parent.name.name;\n\n  if (!name || !parentName || !config.has(parentName)) return false;\n\n  const attributes = config.get(parentName);\n  return includes(attributes, name);\n}\n\nfunction parseLegacyOption(config, option) {\n  option.forEach((opt) => {\n    config.set(opt.name, opt.props);\n  });\n}\n\nconst messages = {\n  noScriptURL: 'A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML, try using dangerouslySetInnerHTML instead.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of `javascript:` URLs',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('jsx-no-script-url'),\n    },\n\n    messages,\n\n    schema: {\n      anyOf: [\n        {\n          type: 'array',\n          items: [\n            {\n              type: 'array',\n              uniqueItems: true,\n              items: {\n                type: 'object',\n                properties: {\n                  name: {\n                    type: 'string',\n                  },\n                  props: {\n                    type: 'array',\n                    items: {\n                      type: 'string',\n                      uniqueItems: true,\n                    },\n                  },\n                },\n                required: ['name', 'props'],\n                additionalProperties: false,\n              },\n            },\n            {\n              type: 'object',\n              properties: {\n                includeFromSettings: {\n                  type: 'boolean',\n                },\n              },\n              additionalItems: false,\n            },\n          ],\n          additionalItems: false,\n        },\n        {\n          type: 'array',\n          items: [\n            {\n              type: 'object',\n              properties: {\n                includeFromSettings: {\n                  type: 'boolean',\n                },\n              },\n              additionalItems: false,\n            },\n          ],\n          additionalItems: false,\n        },\n      ],\n    },\n  },\n\n  create(context) {\n    const options = context.options;\n    const hasLegacyOption = Array.isArray(options[0]);\n    const legacyOptions = hasLegacyOption ? options[0] : [];\n    // eslint-disable-next-line no-nested-ternary\n    const objectOption = (hasLegacyOption && options.length > 1)\n      ? options[1]\n      : (options.length > 0\n        ? options[0]\n        : {\n          includeFromSettings: false,\n        }\n      );\n    const includeFromSettings = objectOption.includeFromSettings;\n\n    const linkComponents = linkComponentsUtil.getLinkComponents(includeFromSettings ? context : {});\n    parseLegacyOption(linkComponents, legacyOptions);\n\n    return {\n      JSXAttribute(node) {\n        if (shouldVerifyProp(node, linkComponents) && hasJavaScriptProtocol(node)) {\n          report(context, messages.noScriptURL, 'noScriptURL', {\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Forbid target='_blank' attribute\n * @author Kevin Miller\n */\n\n'use strict';\n\nconst includes = require('array-includes');\nconst docsUrl = require('../util/docsUrl');\nconst linkComponentsUtil = require('../util/linkComponents');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction findLastIndex(arr, condition) {\n  for (let i = arr.length - 1; i >= 0; i -= 1) {\n    if (condition(arr[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction attributeValuePossiblyBlank(attribute) {\n  if (!attribute || !attribute.value) {\n    return false;\n  }\n  const value = attribute.value;\n  if (value.type === 'Literal') {\n    return typeof value.value === 'string' && value.value.toLowerCase() === '_blank';\n  }\n  if (value.type === 'JSXExpressionContainer') {\n    const expr = value.expression;\n    if (expr.type === 'Literal') {\n      return typeof expr.value === 'string' && expr.value.toLowerCase() === '_blank';\n    }\n    if (expr.type === 'ConditionalExpression') {\n      if (expr.alternate.type === 'Literal' && expr.alternate.value && expr.alternate.value.toLowerCase() === '_blank') {\n        return true;\n      }\n      if (expr.consequent.type === 'Literal' && expr.consequent.value && expr.consequent.value.toLowerCase() === '_blank') {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction hasExternalLink(node, linkAttributes, warnOnSpreadAttributes, spreadAttributeIndex) {\n  const linkIndex = findLastIndex(node.attributes, (attr) => attr.name && includes(linkAttributes, attr.name.name));\n  const foundExternalLink = linkIndex !== -1 && ((attr) => attr.value && attr.value.type === 'Literal' && /^(?:\\w+:|\\/\\/)/.test(attr.value.value))(\n    node.attributes[linkIndex]);\n  return foundExternalLink || (warnOnSpreadAttributes && linkIndex < spreadAttributeIndex);\n}\n\nfunction hasDynamicLink(node, linkAttributes) {\n  const dynamicLinkIndex = findLastIndex(node.attributes, (attr) => attr.name\n    && includes(linkAttributes, attr.name.name)\n    && attr.value\n    && attr.value.type === 'JSXExpressionContainer');\n  if (dynamicLinkIndex !== -1) {\n    return true;\n  }\n}\n\n/**\n * Get the string(s) from a value\n * @param {ASTNode} value The AST node being checked.\n * @param {ASTNode} targetValue The AST node being checked.\n * @returns {string | string[] | null} The string value, or null if not a string.\n */\nfunction getStringFromValue(value, targetValue) {\n  if (value) {\n    if (value.type === 'Literal') {\n      return value.value;\n    }\n    if (value.type === 'JSXExpressionContainer') {\n      if (value.expression.type === 'TemplateLiteral') {\n        return value.expression.quasis[0].value.cooked;\n      }\n      const expr = value.expression;\n      if (expr && expr.type === 'ConditionalExpression') {\n        const relValues = [expr.consequent.value, expr.alternate.value];\n        if (targetValue.type === 'JSXExpressionContainer' && targetValue.expression && targetValue.expression.type === 'ConditionalExpression') {\n          const targetTestCond = targetValue.expression.test.name;\n          const relTestCond = value.expression.test.name;\n          if (targetTestCond === relTestCond) {\n            const targetBlankIndex = [targetValue.expression.consequent.value, targetValue.expression.alternate.value].indexOf('_blank');\n            return relValues[targetBlankIndex];\n          }\n        }\n        return relValues;\n      }\n      return expr.value;\n    }\n  }\n  return null;\n}\n\nfunction hasSecureRel(node, allowReferrer, warnOnSpreadAttributes, spreadAttributeIndex) {\n  const relIndex = findLastIndex(node.attributes, (attr) => (attr.type === 'JSXAttribute' && attr.name.name === 'rel'));\n  const targetIndex = findLastIndex(node.attributes, (attr) => (attr.type === 'JSXAttribute' && attr.name.name === 'target'));\n  if (relIndex === -1 || (warnOnSpreadAttributes && relIndex < spreadAttributeIndex)) {\n    return false;\n  }\n\n  const relAttribute = node.attributes[relIndex];\n  const targetAttributeValue = node.attributes[targetIndex] && node.attributes[targetIndex].value;\n  const value = getStringFromValue(relAttribute.value, targetAttributeValue);\n  return [].concat(value).every((item) => {\n    const tags = typeof item === 'string' ? item.toLowerCase().split(' ') : false;\n    const noreferrer = tags && tags.indexOf('noreferrer') >= 0;\n    if (noreferrer) {\n      return true;\n    }\n    const noopener = tags && tags.indexOf('noopener') >= 0;\n    return allowReferrer && noopener;\n  });\n}\n\nconst messages = {\n  noTargetBlankWithoutNoreferrer: 'Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations',\n  noTargetBlankWithoutNoopener: 'Using target=\"_blank\" without rel=\"noreferrer\" or rel=\"noopener\" (the former implies the latter and is preferred due to wider support) is a security risk: see https://mathiasbynens.github.io/rel-noopener/#recommendations',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    fixable: 'code',\n    docs: {\n      description: 'Disallow `target=\"_blank\"` attribute without `rel=\"noreferrer\"`',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('jsx-no-target-blank'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowReferrer: {\n          type: 'boolean',\n        },\n        enforceDynamicLinks: {\n          enum: ['always', 'never'],\n        },\n        warnOnSpreadAttributes: {\n          type: 'boolean',\n        },\n        links: {\n          type: 'boolean',\n          default: true,\n        },\n        forms: {\n          type: 'boolean',\n          default: false,\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = Object.assign(\n      {\n        allowReferrer: false,\n        warnOnSpreadAttributes: false,\n        links: true,\n        forms: false,\n      },\n      context.options[0]\n    );\n    const allowReferrer = configuration.allowReferrer;\n    const warnOnSpreadAttributes = configuration.warnOnSpreadAttributes;\n    const enforceDynamicLinks = configuration.enforceDynamicLinks || 'always';\n    const linkComponents = linkComponentsUtil.getLinkComponents(context);\n    const formComponents = linkComponentsUtil.getFormComponents(context);\n\n    return {\n      JSXOpeningElement(node) {\n        const targetIndex = findLastIndex(node.attributes, (attr) => attr.name && attr.name.name === 'target');\n        const spreadAttributeIndex = findLastIndex(node.attributes, (attr) => (attr.type === 'JSXSpreadAttribute'));\n\n        if (linkComponents.has(node.name.name)) {\n          if (!attributeValuePossiblyBlank(node.attributes[targetIndex])) {\n            const hasSpread = spreadAttributeIndex >= 0;\n\n            if (warnOnSpreadAttributes && hasSpread) {\n              // continue to check below\n            } else if ((hasSpread && targetIndex < spreadAttributeIndex) || !hasSpread || !warnOnSpreadAttributes) {\n              return;\n            }\n          }\n\n          const linkAttributes = linkComponents.get(node.name.name);\n          const hasDangerousLink = hasExternalLink(node, linkAttributes, warnOnSpreadAttributes, spreadAttributeIndex)\n            || (enforceDynamicLinks === 'always' && hasDynamicLink(node, linkAttributes));\n          if (hasDangerousLink && !hasSecureRel(node, allowReferrer, warnOnSpreadAttributes, spreadAttributeIndex)) {\n            const messageId = allowReferrer ? 'noTargetBlankWithoutNoopener' : 'noTargetBlankWithoutNoreferrer';\n            const relValue = allowReferrer ? 'noopener' : 'noreferrer';\n            report(context, messages[messageId], messageId, {\n              node,\n              fix(fixer) {\n                // eslint 5 uses `node.attributes`; eslint 6+ uses `node.parent.attributes`\n                const nodeWithAttrs = node.parent.attributes ? node.parent : node;\n                // eslint 5 does not provide a `name` property on JSXSpreadElements\n                const relAttribute = nodeWithAttrs.attributes.find((attr) => attr.name && attr.name.name === 'rel');\n\n                if (targetIndex < spreadAttributeIndex || (spreadAttributeIndex >= 0 && !relAttribute)) {\n                  return null;\n                }\n\n                if (!relAttribute) {\n                  return fixer.insertTextAfter(nodeWithAttrs.attributes.slice(-1)[0], ` rel=\"${relValue}\"`);\n                }\n\n                if (!relAttribute.value) {\n                  return fixer.insertTextAfter(relAttribute, `=\"${relValue}\"`);\n                }\n\n                if (relAttribute.value.type === 'Literal') {\n                  const parts = relAttribute.value.value\n                    .split('noreferrer')\n                    .filter(Boolean);\n                  return fixer.replaceText(relAttribute.value, `\"${parts.concat('noreferrer').join(' ')}\"`);\n                }\n\n                if (relAttribute.value.type === 'JSXExpressionContainer') {\n                  if (relAttribute.value.expression.type === 'Literal') {\n                    if (typeof relAttribute.value.expression.value === 'string') {\n                      const parts = relAttribute.value.expression.value\n                        .split('noreferrer')\n                        .filter(Boolean);\n                      return fixer.replaceText(relAttribute.value.expression, `\"${parts.concat('noreferrer').join(' ')}\"`);\n                    }\n\n                    // for undefined, boolean, number, symbol, bigint, and null\n                    return fixer.replaceText(relAttribute.value, '\"noreferrer\"');\n                  }\n                }\n\n                return null;\n              },\n            });\n          }\n        }\n        if (formComponents.has(node.name.name)) {\n          if (!attributeValuePossiblyBlank(node.attributes[targetIndex])) {\n            const hasSpread = spreadAttributeIndex >= 0;\n\n            if (warnOnSpreadAttributes && hasSpread) {\n              // continue to check below\n            } else if (\n              (hasSpread && targetIndex < spreadAttributeIndex)\n              || !hasSpread\n              || !warnOnSpreadAttributes\n            ) {\n              return;\n            }\n          }\n\n          if (!configuration.forms || hasSecureRel(node)) {\n            return;\n          }\n\n          const formAttributes = formComponents.get(node.name.name);\n\n          if (\n            hasExternalLink(node, formAttributes)\n            || (enforceDynamicLinks === 'always' && hasDynamicLink(node, formAttributes))\n          ) {\n            const messageId = allowReferrer ? 'noTargetBlankWithoutNoopener' : 'noTargetBlankWithoutNoreferrer';\n            report(context, messages[messageId], messageId, {\n              node,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Disallow useless fragments\n */\n\n'use strict';\n\nconst arrayIncludes = require('array-includes');\n\nconst pragmaUtil = require('../util/pragma');\nconst astUtil = require('../util/ast');\nconst jsxUtil = require('../util/jsx');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst getText = require('../util/eslint').getText;\n\nfunction isJSXText(node) {\n  return !!node && (node.type === 'JSXText' || node.type === 'Literal');\n}\n\n/**\n * @param {string} text\n * @returns {boolean}\n */\nfunction isOnlyWhitespace(text) {\n  return text.trim().length === 0;\n}\n\n/**\n * @param {ASTNode} node\n * @returns {boolean}\n */\nfunction isNonspaceJSXTextOrJSXCurly(node) {\n  return (isJSXText(node) && !isOnlyWhitespace(node.raw)) || node.type === 'JSXExpressionContainer';\n}\n\n/**\n * Somehow fragment like this is useful: <Foo content={<>ee eeee eeee ...</>} />\n * @param {ASTNode} node\n * @returns {boolean}\n */\nfunction isFragmentWithOnlyTextAndIsNotChild(node) {\n  return node.children.length === 1\n    && isJSXText(node.children[0])\n    && !(node.parent.type === 'JSXElement' || node.parent.type === 'JSXFragment');\n}\n\n/**\n * @param {string} text\n * @returns {string}\n */\nfunction trimLikeReact(text) {\n  const leadingSpaces = /^\\s*/.exec(text)[0];\n  const trailingSpaces = /\\s*$/.exec(text)[0];\n\n  const start = arrayIncludes(leadingSpaces, '\\n') ? leadingSpaces.length : 0;\n  const end = arrayIncludes(trailingSpaces, '\\n') ? text.length - trailingSpaces.length : text.length;\n\n  return text.slice(start, end);\n}\n\n/**\n * Test if node is like `<Fragment key={_}>_</Fragment>`\n * @param {JSXElement} node\n * @returns {boolean}\n */\nfunction isKeyedElement(node) {\n  return node.type === 'JSXElement'\n    && node.openingElement.attributes\n    && node.openingElement.attributes.some(jsxUtil.isJSXAttributeKey);\n}\n\n/**\n * @param {ASTNode} node\n * @returns {boolean}\n */\nfunction containsCallExpression(node) {\n  return node\n    && node.type === 'JSXExpressionContainer'\n    && astUtil.isCallExpression(node.expression);\n}\n\nconst messages = {\n  NeedsMoreChildren: 'Fragments should contain more than one child - otherwise, there’s no need for a Fragment at all.',\n  ChildOfHtmlElement: 'Passing a fragment to an HTML element is useless.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    type: 'suggestion',\n    fixable: 'code',\n    docs: {\n      description: 'Disallow unnecessary fragments',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('jsx-no-useless-fragment'),\n    },\n    messages,\n    schema: [{\n      type: 'object',\n      properties: {\n        allowExpressions: {\n          type: 'boolean',\n        },\n      },\n    }],\n  },\n\n  create(context) {\n    const config = context.options[0] || {};\n    const allowExpressions = config.allowExpressions || false;\n\n    const reactPragma = pragmaUtil.getFromContext(context);\n    const fragmentPragma = pragmaUtil.getFragmentFromContext(context);\n\n    /**\n     * Test whether a node is an padding spaces trimmed by react runtime.\n     * @param {ASTNode} node\n     * @returns {boolean}\n     */\n    function isPaddingSpaces(node) {\n      return isJSXText(node)\n        && isOnlyWhitespace(node.raw)\n        && arrayIncludes(node.raw, '\\n');\n    }\n\n    function isFragmentWithSingleExpression(node) {\n      const children = node && node.children.filter((child) => !isPaddingSpaces(child));\n      return (\n        children\n        && children.length === 1\n        && children[0].type === 'JSXExpressionContainer'\n      );\n    }\n\n    /**\n     * Test whether a JSXElement has less than two children, excluding paddings spaces.\n     * @param {JSXElement|JSXFragment} node\n     * @returns {boolean}\n     */\n    function hasLessThanTwoChildren(node) {\n      if (!node || !node.children) {\n        return true;\n      }\n\n      /** @type {ASTNode[]} */\n      const nonPaddingChildren = node.children.filter(\n        (child) => !isPaddingSpaces(child)\n      );\n\n      if (nonPaddingChildren.length < 2) {\n        return !containsCallExpression(nonPaddingChildren[0]);\n      }\n    }\n\n    /**\n     * @param {JSXElement|JSXFragment} node\n     * @returns {boolean}\n     */\n    function isChildOfHtmlElement(node) {\n      return node.parent.type === 'JSXElement'\n        && node.parent.openingElement.name.type === 'JSXIdentifier'\n        && /^[a-z]+$/.test(node.parent.openingElement.name.name);\n    }\n\n    /**\n     * @param {JSXElement|JSXFragment} node\n     * @return {boolean}\n     */\n    function isChildOfComponentElement(node) {\n      return node.parent.type === 'JSXElement'\n        && !isChildOfHtmlElement(node)\n        && !jsxUtil.isFragment(node.parent, reactPragma, fragmentPragma);\n    }\n\n    /**\n     * @param {ASTNode} node\n     * @returns {boolean}\n     */\n    function canFix(node) {\n      // Not safe to fix fragments without a jsx parent.\n      if (!(node.parent.type === 'JSXElement' || node.parent.type === 'JSXFragment')) {\n        // const a = <></>\n        if (node.children.length === 0) {\n          return false;\n        }\n\n        // const a = <>cat {meow}</>\n        if (node.children.some(isNonspaceJSXTextOrJSXCurly)) {\n          return false;\n        }\n      }\n\n      // Not safe to fix `<Eeee><>foo</></Eeee>` because `Eeee` might require its children be a ReactElement.\n      if (isChildOfComponentElement(node)) {\n        return false;\n      }\n\n      // old TS parser can't handle this one\n      if (node.type === 'JSXFragment' && (!node.openingFragment || !node.closingFragment)) {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * @param {ASTNode} node\n     * @returns {Function | undefined}\n     */\n    function getFix(node) {\n      if (!canFix(node)) {\n        return undefined;\n      }\n\n      return function fix(fixer) {\n        const opener = node.type === 'JSXFragment' ? node.openingFragment : node.openingElement;\n        const closer = node.type === 'JSXFragment' ? node.closingFragment : node.closingElement;\n\n        const childrenText = opener.selfClosing ? '' : getText(context).slice(opener.range[1], closer.range[0]);\n\n        return fixer.replaceText(node, trimLikeReact(childrenText));\n      };\n    }\n\n    function checkNode(node) {\n      if (isKeyedElement(node)) {\n        return;\n      }\n\n      if (\n        hasLessThanTwoChildren(node)\n        && !isFragmentWithOnlyTextAndIsNotChild(node)\n        && !(allowExpressions && isFragmentWithSingleExpression(node))\n      ) {\n        report(context, messages.NeedsMoreChildren, 'NeedsMoreChildren', {\n          node,\n          fix: getFix(node),\n        });\n      }\n\n      if (isChildOfHtmlElement(node)) {\n        report(context, messages.ChildOfHtmlElement, 'ChildOfHtmlElement', {\n          node,\n          fix: getFix(node),\n        });\n      }\n    }\n\n    return {\n      JSXElement(node) {\n        if (jsxUtil.isFragment(node, reactPragma, fragmentPragma)) {\n          checkNode(node);\n        }\n      },\n      JSXFragment: checkNode,\n    };\n  },\n};\n", "/**\n * @fileoverview Limit to one expression per line in JSX\n * @author Mark Ivan Allen <Vydia.com>\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst eslintUtil = require('../util/eslint');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst optionDefaults = {\n  allow: 'none',\n};\n\nconst messages = {\n  moveToNewLine: '`{{descriptor}}` must be placed on a new line',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Require one JSX element per line',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-one-expression-per-line'),\n    },\n    fixable: 'whitespace',\n\n    messages,\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          allow: {\n            enum: ['none', 'literal', 'single-child', 'non-jsx'],\n          },\n        },\n        default: optionDefaults,\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const options = Object.assign({}, optionDefaults, context.options[0]);\n\n    function nodeKey(node) {\n      return `${node.loc.start.line},${node.loc.start.column}`;\n    }\n\n    /**\n     * @param {ASTNode} n\n     * @returns {string}\n     */\n    function nodeDescriptor(n) {\n      return n.openingElement ? n.openingElement.name.name : getText(context, n).replace(/\\n/g, '');\n    }\n\n    function handleJSX(node) {\n      const children = node.children;\n\n      if (!children || !children.length) {\n        return;\n      }\n\n      if (\n        options.allow === 'non-jsx'\n        && !children.find((child) => (child.type === 'JSXFragment' || child.type === 'JSXElement'))\n      ) {\n        return;\n      }\n\n      const openingElement = node.openingElement || node.openingFragment;\n      const closingElement = node.closingElement || node.closingFragment;\n      const openingElementStartLine = openingElement.loc.start.line;\n      const openingElementEndLine = openingElement.loc.end.line;\n      const closingElementStartLine = closingElement.loc.start.line;\n      const closingElementEndLine = closingElement.loc.end.line;\n\n      if (children.length === 1) {\n        const child = children[0];\n        if (\n          openingElementStartLine === openingElementEndLine\n          && openingElementEndLine === closingElementStartLine\n          && closingElementStartLine === closingElementEndLine\n          && closingElementEndLine === child.loc.start.line\n          && child.loc.start.line === child.loc.end.line\n        ) {\n          if (\n            options.allow === 'single-child'\n            || (options.allow === 'literal' && (child.type === 'Literal' || child.type === 'JSXText'))\n          ) {\n            return;\n          }\n        }\n      }\n\n      const childrenGroupedByLine = {};\n      const fixDetailsByNode = {};\n\n      children.forEach((child) => {\n        let countNewLinesBeforeContent = 0;\n        let countNewLinesAfterContent = 0;\n\n        if (child.type === 'Literal' || child.type === 'JSXText') {\n          if (jsxUtil.isWhiteSpaces(child.raw)) {\n            return;\n          }\n\n          countNewLinesBeforeContent = (child.raw.match(/^\\s*\\n/g) || []).length;\n          countNewLinesAfterContent = (child.raw.match(/\\n\\s*$/g) || []).length;\n        }\n\n        const startLine = child.loc.start.line + countNewLinesBeforeContent;\n        const endLine = child.loc.end.line - countNewLinesAfterContent;\n\n        if (startLine === endLine) {\n          if (!childrenGroupedByLine[startLine]) {\n            childrenGroupedByLine[startLine] = [];\n          }\n          childrenGroupedByLine[startLine].push(child);\n        } else {\n          if (!childrenGroupedByLine[startLine]) {\n            childrenGroupedByLine[startLine] = [];\n          }\n          childrenGroupedByLine[startLine].push(child);\n          if (!childrenGroupedByLine[endLine]) {\n            childrenGroupedByLine[endLine] = [];\n          }\n          childrenGroupedByLine[endLine].push(child);\n        }\n      });\n\n      Object.keys(childrenGroupedByLine).forEach((_line) => {\n        const line = parseInt(_line, 10);\n        const firstIndex = 0;\n        const lastIndex = childrenGroupedByLine[line].length - 1;\n\n        childrenGroupedByLine[line].forEach((child, i) => {\n          let prevChild;\n          let nextChild;\n\n          if (i === firstIndex) {\n            if (line === openingElementEndLine) {\n              prevChild = openingElement;\n            }\n          } else {\n            prevChild = childrenGroupedByLine[line][i - 1];\n          }\n\n          if (i === lastIndex) {\n            if (line === closingElementStartLine) {\n              nextChild = closingElement;\n            }\n          } else {\n            // We don't need to append a trailing because the next child will prepend a leading.\n            // nextChild = childrenGroupedByLine[line][i + 1];\n          }\n\n          function spaceBetweenPrev() {\n            return ((prevChild.type === 'Literal' || prevChild.type === 'JSXText') && / $/.test(prevChild.raw))\n              || ((child.type === 'Literal' || child.type === 'JSXText') && /^ /.test(child.raw))\n              || getSourceCode(context).isSpaceBetweenTokens(prevChild, child);\n          }\n\n          function spaceBetweenNext() {\n            return ((nextChild.type === 'Literal' || nextChild.type === 'JSXText') && /^ /.test(nextChild.raw))\n              || ((child.type === 'Literal' || child.type === 'JSXText') && / $/.test(child.raw))\n              || getSourceCode(context).isSpaceBetweenTokens(child, nextChild);\n          }\n\n          if (!prevChild && !nextChild) {\n            return;\n          }\n\n          const source = getText(context, child);\n          const leadingSpace = !!(prevChild && spaceBetweenPrev());\n          const trailingSpace = !!(nextChild && spaceBetweenNext());\n          const leadingNewLine = !!prevChild;\n          const trailingNewLine = !!nextChild;\n\n          const key = nodeKey(child);\n\n          if (!fixDetailsByNode[key]) {\n            fixDetailsByNode[key] = {\n              node: child,\n              source,\n              descriptor: nodeDescriptor(child),\n            };\n          }\n\n          if (leadingSpace) {\n            fixDetailsByNode[key].leadingSpace = true;\n          }\n          if (leadingNewLine) {\n            fixDetailsByNode[key].leadingNewLine = true;\n          }\n          if (trailingNewLine) {\n            fixDetailsByNode[key].trailingNewLine = true;\n          }\n          if (trailingSpace) {\n            fixDetailsByNode[key].trailingSpace = true;\n          }\n        });\n      });\n\n      Object.keys(fixDetailsByNode).forEach((key) => {\n        const details = fixDetailsByNode[key];\n\n        const nodeToReport = details.node;\n        const descriptor = details.descriptor;\n        const source = details.source.replace(/(^ +| +(?=\\n)*$)/g, '');\n\n        const leadingSpaceString = details.leadingSpace ? '\\n{\\' \\'}' : '';\n        const trailingSpaceString = details.trailingSpace ? '{\\' \\'}\\n' : '';\n        const leadingNewLineString = details.leadingNewLine ? '\\n' : '';\n        const trailingNewLineString = details.trailingNewLine ? '\\n' : '';\n\n        const replaceText = `${leadingSpaceString}${leadingNewLineString}${source}${trailingNewLineString}${trailingSpaceString}`;\n\n        report(context, messages.moveToNewLine, 'moveToNewLine', {\n          node: nodeToReport,\n          data: {\n            descriptor,\n          },\n          fix(fixer) {\n            return fixer.replaceText(nodeToReport, replaceText);\n          },\n        });\n      });\n    }\n\n    return {\n      JSXElement: handleJSX,\n      JSXFragment: handleJSX,\n    };\n  },\n};\n", "/**\n * @fileoverview Disallow undeclared variables in JSX\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst eslintUtil = require('../util/eslint');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  undefined: '\\'{{identifier}}\\' is not defined.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow undeclared variables in JSX',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('jsx-no-undef'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowGlobals: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const config = context.options[0] || {};\n    const allowGlobals = config.allowGlobals || false;\n\n    /**\n     * Compare an identifier with the variables declared in the scope\n     * @param {ASTNode} node - Identifier or JSXIdentifier node\n     * @returns {void}\n     */\n    function checkIdentifierInJSX(node) {\n      let scope = eslintUtil.getScope(context, node);\n      const sourceCode = eslintUtil.getSourceCode(context);\n      const sourceType = sourceCode.ast.sourceType;\n      const scopeUpperBound = !allowGlobals && sourceType === 'module' ? 'module' : 'global';\n      let variables = scope.variables;\n      let i;\n      let len;\n\n      // Ignore 'this' keyword (also maked as JSXIdentifier when used in JSX)\n      if (node.name === 'this') {\n        return;\n      }\n\n      while (scope.type !== scopeUpperBound && scope.type !== 'global') {\n        scope = scope.upper;\n        variables = scope.variables.concat(variables);\n      }\n      if (scope.childScopes.length) {\n        variables = scope.childScopes[0].variables.concat(variables);\n        // Temporary fix for babel-eslint\n        if (scope.childScopes[0].childScopes.length) {\n          variables = scope.childScopes[0].childScopes[0].variables.concat(variables);\n        }\n      }\n\n      for (i = 0, len = variables.length; i < len; i++) {\n        if (variables[i].name === node.name) {\n          return;\n        }\n      }\n\n      report(context, messages.undefined, 'undefined', {\n        node,\n        data: {\n          identifier: node.name,\n        },\n      });\n    }\n\n    return {\n      JSXOpeningElement(node) {\n        switch (node.name.type) {\n          case 'JSXIdentifier':\n            if (jsxUtil.isDOMComponent(node)) {\n              return;\n            }\n            node = node.name;\n            break;\n          case 'JSXMemberExpression':\n            node = node.name;\n            do {\n              node = node.object;\n            } while (node && node.type !== 'JSXIdentifier');\n            break;\n          case 'JSXNamespacedName':\n            return;\n          default:\n            break;\n        }\n        checkIdentifierInJSX(node);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce curly braces or disallow unnecessary curly brace in JSX\n * @author Jacky Ho\n * @author Simon Lydell\n */\n\n'use strict';\n\nconst arrayIncludes = require('array-includes');\n\nconst docsUrl = require('../util/docsUrl');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\nconst eslintUtil = require('../util/eslint');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst OPTION_ALWAYS = 'always';\nconst OPTION_NEVER = 'never';\nconst OPTION_IGNORE = 'ignore';\n\nconst OPTION_VALUES = [\n  OPTION_ALWAYS,\n  OPTION_NEVER,\n  OPTION_IGNORE,\n];\nconst DEFAULT_CONFIG = { props: OPTION_NEVER, children: OPTION_NEVER, propElementValues: OPTION_IGNORE };\n\nconst HTML_ENTITY_REGEX = () => /&[A-Za-z\\d#]+;/g;\n\nfunction containsLineTerminators(rawStringValue) {\n  return /[\\n\\r\\u2028\\u2029]/.test(rawStringValue);\n}\n\nfunction containsBackslash(rawStringValue) {\n  return arrayIncludes(rawStringValue, '\\\\');\n}\n\nfunction containsHTMLEntity(rawStringValue) {\n  return HTML_ENTITY_REGEX().test(rawStringValue);\n}\n\nfunction containsOnlyHtmlEntities(rawStringValue) {\n  return rawStringValue.replace(HTML_ENTITY_REGEX(), '').trim() === '';\n}\n\nfunction containsDisallowedJSXTextChars(rawStringValue) {\n  return /[{<>}]/.test(rawStringValue);\n}\n\nfunction containsQuoteCharacters(value) {\n  return /['\"]/.test(value);\n}\n\nfunction containsMultilineComment(value) {\n  return /\\/\\*/.test(value);\n}\n\nfunction escapeDoubleQuotes(rawStringValue) {\n  return rawStringValue.replace(/\\\\\"/g, '\"').replace(/\"/g, '\\\\\"');\n}\n\nfunction escapeBackslashes(rawStringValue) {\n  return rawStringValue.replace(/\\\\/g, '\\\\\\\\');\n}\n\nfunction needToEscapeCharacterForJSX(raw, node) {\n  return (\n    containsBackslash(raw)\n    || containsHTMLEntity(raw)\n    || (node.parent.type !== 'JSXAttribute' && containsDisallowedJSXTextChars(raw))\n  );\n}\n\nfunction containsWhitespaceExpression(child) {\n  if (child.type === 'JSXExpressionContainer') {\n    const value = child.expression.value;\n    return value ? jsxUtil.isWhiteSpaces(value) : false;\n  }\n  return false;\n}\n\nfunction isLineBreak(text) {\n  return containsLineTerminators(text) && text.trim() === '';\n}\n\nfunction wrapNonHTMLEntities(text) {\n  const HTML_ENTITY = '<HTML_ENTITY>';\n  const withCurlyBraces = text.split(HTML_ENTITY_REGEX()).map((word) => (\n    word === '' ? '' : `{${JSON.stringify(word)}}`\n  )).join(HTML_ENTITY);\n\n  const htmlEntities = text.match(HTML_ENTITY_REGEX());\n  return htmlEntities.reduce((acc, htmlEntity) => (\n    acc.replace(HTML_ENTITY, htmlEntity)\n  ), withCurlyBraces);\n}\n\nfunction wrapWithCurlyBraces(rawText) {\n  if (!containsLineTerminators(rawText)) {\n    return `{${JSON.stringify(rawText)}}`;\n  }\n\n  return rawText.split('\\n').map((line) => {\n    if (line.trim() === '') {\n      return line;\n    }\n    const firstCharIndex = line.search(/[^\\s]/);\n    const leftWhitespace = line.slice(0, firstCharIndex);\n    const text = line.slice(firstCharIndex);\n\n    if (containsHTMLEntity(line)) {\n      return `${leftWhitespace}${wrapNonHTMLEntities(text)}`;\n    }\n    return `${leftWhitespace}{${JSON.stringify(text)}}`;\n  }).join('\\n');\n}\n\nfunction isWhiteSpaceLiteral(node) {\n  return node.type && node.type === 'Literal' && node.value && jsxUtil.isWhiteSpaces(node.value);\n}\n\nfunction isStringWithTrailingWhiteSpaces(value) {\n  return /^\\s|\\s$/.test(value);\n}\n\nfunction isLiteralWithTrailingWhiteSpaces(node) {\n  return node.type && node.type === 'Literal' && node.value && isStringWithTrailingWhiteSpaces(node.value);\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  unnecessaryCurly: 'Curly braces are unnecessary here.',\n  missingCurly: 'Need to wrap this literal in a JSX expression.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow unnecessary JSX expressions when literals alone are sufficient or enforce JSX expressions on literals in JSX children or attributes',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-curly-brace-presence'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [\n      {\n        anyOf: [\n          {\n            type: 'object',\n            properties: {\n              props: { enum: OPTION_VALUES },\n              children: { enum: OPTION_VALUES },\n              propElementValues: { enum: OPTION_VALUES },\n            },\n            additionalProperties: false,\n          },\n          {\n            enum: OPTION_VALUES,\n          },\n        ],\n      },\n    ],\n  },\n\n  create(context) {\n    const ruleOptions = context.options[0];\n    const userConfig = typeof ruleOptions === 'string'\n      ? { props: ruleOptions, children: ruleOptions, propElementValues: OPTION_IGNORE }\n      : Object.assign({}, DEFAULT_CONFIG, ruleOptions);\n\n    /**\n     * Report and fix an unnecessary curly brace violation on a node\n     * @param {ASTNode} JSXExpressionNode - The AST node with an unnecessary JSX expression\n     */\n    function reportUnnecessaryCurly(JSXExpressionNode) {\n      report(context, messages.unnecessaryCurly, 'unnecessaryCurly', {\n        node: JSXExpressionNode,\n        fix(fixer) {\n          const expression = JSXExpressionNode.expression;\n\n          let textToReplace;\n          if (jsxUtil.isJSX(expression)) {\n            textToReplace = getText(context, expression);\n          } else {\n            const expressionType = expression && expression.type;\n            const parentType = JSXExpressionNode.parent.type;\n\n            if (parentType === 'JSXAttribute') {\n              if (expressionType !== 'TemplateLiteral' && /[\"]/.test(expression.raw.slice(1, -1))) {\n                textToReplace = expression.raw;\n              } else {\n                textToReplace = `\"${expressionType === 'TemplateLiteral'\n                  ? expression.quasis[0].value.raw\n                  : expression.raw.slice(1, -1)\n                }\"`;\n              }\n            } else if (jsxUtil.isJSX(expression)) {\n              textToReplace = getText(context, expression);\n            } else {\n              textToReplace = expressionType === 'TemplateLiteral'\n                ? expression.quasis[0].value.cooked : expression.value;\n            }\n          }\n\n          return fixer.replaceText(JSXExpressionNode, textToReplace);\n        },\n      });\n    }\n\n    function reportMissingCurly(literalNode) {\n      report(context, messages.missingCurly, 'missingCurly', {\n        node: literalNode,\n        fix(fixer) {\n          if (jsxUtil.isJSX(literalNode)) {\n            return fixer.replaceText(literalNode, `{${getText(context, literalNode)}}`);\n          }\n\n          // If a HTML entity name is found, bail out because it can be fixed\n          // by either using the real character or the unicode equivalent.\n          // If it contains any line terminator character, bail out as well.\n          if (\n            containsOnlyHtmlEntities(literalNode.raw)\n            || (literalNode.parent.type === 'JSXAttribute' && containsLineTerminators(literalNode.raw))\n            || isLineBreak(literalNode.raw)\n          ) {\n            return null;\n          }\n\n          const expression = literalNode.parent.type === 'JSXAttribute'\n            ? `{\"${escapeDoubleQuotes(escapeBackslashes(\n              literalNode.raw.slice(1, -1)\n            ))}\"}`\n            : wrapWithCurlyBraces(literalNode.raw);\n\n          return fixer.replaceText(literalNode, expression);\n        },\n      });\n    }\n\n    // Bail out if there is any character that needs to be escaped in JSX\n    // because escaping decreases readability and the original code may be more\n    // readable anyway or intentional for other specific reasons\n    function lintUnnecessaryCurly(JSXExpressionNode) {\n      const expression = JSXExpressionNode.expression;\n      const expressionType = expression.type;\n\n      const sourceCode = getSourceCode(context);\n      // Curly braces containing comments are necessary\n      if (sourceCode.getCommentsInside && sourceCode.getCommentsInside(JSXExpressionNode).length > 0) {\n        return;\n      }\n\n      if (\n        (expressionType === 'Literal' || expressionType === 'JSXText')\n          && typeof expression.value === 'string'\n          && (\n            (JSXExpressionNode.parent.type === 'JSXAttribute' && !isWhiteSpaceLiteral(expression))\n            || !isLiteralWithTrailingWhiteSpaces(expression)\n          )\n          && !containsMultilineComment(expression.value)\n          && !needToEscapeCharacterForJSX(expression.raw, JSXExpressionNode) && (\n          jsxUtil.isJSX(JSXExpressionNode.parent)\n          || (!containsQuoteCharacters(expression.value) || typeof expression.value === 'string')\n        )\n      ) {\n        reportUnnecessaryCurly(JSXExpressionNode);\n      } else if (\n        expressionType === 'TemplateLiteral'\n        && expression.expressions.length === 0\n        && expression.quasis[0].value.raw.indexOf('\\n') === -1\n        && !isStringWithTrailingWhiteSpaces(expression.quasis[0].value.raw)\n        && !needToEscapeCharacterForJSX(expression.quasis[0].value.raw, JSXExpressionNode)\n        && !containsQuoteCharacters(expression.quasis[0].value.cooked)\n      ) {\n        reportUnnecessaryCurly(JSXExpressionNode);\n      } else if (jsxUtil.isJSX(expression)) {\n        reportUnnecessaryCurly(JSXExpressionNode);\n      }\n    }\n\n    function areRuleConditionsSatisfied(parent, config, ruleCondition) {\n      return (\n        parent.type === 'JSXAttribute'\n          && typeof config.props === 'string'\n          && config.props === ruleCondition\n      ) || (\n        jsxUtil.isJSX(parent)\n          && typeof config.children === 'string'\n          && config.children === ruleCondition\n      );\n    }\n\n    function getAdjacentSiblings(node, children) {\n      for (let i = 1; i < children.length - 1; i++) {\n        const child = children[i];\n        if (node === child) {\n          return [children[i - 1], children[i + 1]];\n        }\n      }\n      if (node === children[0] && children[1]) {\n        return [children[1]];\n      }\n      if (node === children[children.length - 1] && children[children.length - 2]) {\n        return [children[children.length - 2]];\n      }\n      return [];\n    }\n\n    function hasAdjacentJsxExpressionContainers(node, children) {\n      if (!children) {\n        return false;\n      }\n      const childrenExcludingWhitespaceLiteral = children.filter((child) => !isWhiteSpaceLiteral(child));\n      const adjSiblings = getAdjacentSiblings(node, childrenExcludingWhitespaceLiteral);\n\n      return adjSiblings.some((x) => x.type && x.type === 'JSXExpressionContainer');\n    }\n    function hasAdjacentJsx(node, children) {\n      if (!children) {\n        return false;\n      }\n      const childrenExcludingWhitespaceLiteral = children.filter((child) => !isWhiteSpaceLiteral(child));\n      const adjSiblings = getAdjacentSiblings(node, childrenExcludingWhitespaceLiteral);\n\n      return adjSiblings.some((x) => x.type && arrayIncludes(['JSXExpressionContainer', 'JSXElement'], x.type));\n    }\n    function shouldCheckForUnnecessaryCurly(node, config) {\n      const parent = node.parent;\n      // Bail out if the parent is a JSXAttribute & its contents aren't\n      // StringLiteral or TemplateLiteral since e.g\n      // <App prop1={<CustomEl />} prop2={<CustomEl>...</CustomEl>} />\n\n      if (\n        parent.type && parent.type === 'JSXAttribute'\n        && (node.expression && node.expression.type\n          && node.expression.type !== 'Literal'\n          && node.expression.type !== 'StringLiteral'\n          && node.expression.type !== 'TemplateLiteral')\n      ) {\n        return false;\n      }\n\n      // If there are adjacent `JsxExpressionContainer` then there is no need,\n      // to check for unnecessary curly braces.\n      if (jsxUtil.isJSX(parent) && hasAdjacentJsxExpressionContainers(node, parent.children)) {\n        return false;\n      }\n      if (containsWhitespaceExpression(node) && hasAdjacentJsx(node, parent.children)) {\n        return false;\n      }\n      if (\n        parent.children\n        && parent.children.length === 1\n        && containsWhitespaceExpression(node)\n      ) {\n        return false;\n      }\n\n      return areRuleConditionsSatisfied(parent, config, OPTION_NEVER);\n    }\n\n    function shouldCheckForMissingCurly(node, config) {\n      if (jsxUtil.isJSX(node)) {\n        return config.propElementValues !== OPTION_IGNORE;\n      }\n      if (\n        isLineBreak(node.raw)\n        || containsOnlyHtmlEntities(node.raw)\n      ) {\n        return false;\n      }\n      const parent = node.parent;\n      if (\n        parent.children\n        && parent.children.length === 1\n        && containsWhitespaceExpression(parent.children[0])\n      ) {\n        return false;\n      }\n\n      return areRuleConditionsSatisfied(parent, config, OPTION_ALWAYS);\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      'JSXAttribute > JSXExpressionContainer > JSXElement'(node) {\n        if (userConfig.propElementValues === OPTION_NEVER) {\n          reportUnnecessaryCurly(node.parent);\n        }\n      },\n\n      JSXExpressionContainer(node) {\n        if (shouldCheckForUnnecessaryCurly(node, userConfig)) {\n          lintUnnecessaryCurly(node);\n        }\n      },\n\n      'JSXAttribute > JSXElement, Literal, JSXText'(node) {\n        if (shouldCheckForMissingCurly(node, userConfig)) {\n          reportMissingCurly(node);\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce PascalCase for user-defined JSX components\n * @author Jake Marsh\n */\n\n'use strict';\n\nconst elementType = require('jsx-ast-utils/elementType');\nconst minimatch = require('minimatch');\nconst docsUrl = require('../util/docsUrl');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\n\nfunction testDigit(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 48 && charCode <= 57;\n}\n\nfunction testUpperCase(char) {\n  const upperCase = char.toUpperCase();\n  return char === upperCase && upperCase !== char.toLowerCase();\n}\n\nfunction testLowerCase(char) {\n  const lowerCase = char.toLowerCase();\n  return char === lowerCase && lowerCase !== char.toUpperCase();\n}\n\nfunction testPascalCase(name) {\n  if (!testUpperCase(name.charAt(0))) {\n    return false;\n  }\n  const anyNonAlphaNumeric = Array.prototype.some.call(\n    name.slice(1),\n    (char) => char.toLowerCase() === char.toUpperCase() && !testDigit(char)\n  );\n  if (anyNonAlphaNumeric) {\n    return false;\n  }\n  return Array.prototype.some.call(\n    name.slice(1),\n    (char) => testLowerCase(char) || testDigit(char)\n  );\n}\n\nfunction testAllCaps(name) {\n  const firstChar = name.charAt(0);\n  if (!(testUpperCase(firstChar) || testDigit(firstChar))) {\n    return false;\n  }\n  for (let i = 1; i < name.length - 1; i += 1) {\n    const char = name.charAt(i);\n    if (!(testUpperCase(char) || testDigit(char) || char === '_')) {\n      return false;\n    }\n  }\n  const lastChar = name.charAt(name.length - 1);\n  if (!(testUpperCase(lastChar) || testDigit(lastChar))) {\n    return false;\n  }\n  return true;\n}\n\nfunction ignoreCheck(ignore, name) {\n  return ignore.some(\n    (entry) => name === entry || minimatch(name, entry, { noglobstar: true })\n  );\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  usePascalCase: 'Imported JSX component {{name}} must be in PascalCase',\n  usePascalOrSnakeCase: 'Imported JSX component {{name}} must be in PascalCase or SCREAMING_SNAKE_CASE',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce PascalCase for user-defined JSX components',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-pascal-case'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowAllCaps: {\n          type: 'boolean',\n        },\n        allowLeadingUnderscore: {\n          type: 'boolean',\n        },\n        allowNamespace: {\n          type: 'boolean',\n        },\n        ignore: {\n          items: [\n            {\n              type: 'string',\n            },\n          ],\n          minItems: 0,\n          type: 'array',\n          uniqueItems: true,\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const allowAllCaps = configuration.allowAllCaps || false;\n    const allowLeadingUnderscore = configuration.allowLeadingUnderscore || false;\n    const allowNamespace = configuration.allowNamespace || false;\n    const ignore = configuration.ignore || [];\n\n    return {\n      JSXOpeningElement(node) {\n        const isCompatTag = jsxUtil.isDOMComponent(node);\n        if (isCompatTag) return undefined;\n\n        const name = elementType(node);\n        let checkNames = [name];\n        let index = 0;\n\n        if (name.lastIndexOf(':') > -1) {\n          checkNames = name.split(':');\n        } else if (name.lastIndexOf('.') > -1) {\n          checkNames = name.split('.');\n        }\n\n        do {\n          const splitName = checkNames[index];\n          if (splitName.length === 1) return undefined;\n          const isIgnored = ignoreCheck(ignore, splitName);\n\n          const checkName = allowLeadingUnderscore && splitName.startsWith('_') ? splitName.slice(1) : splitName;\n          const isPascalCase = testPascalCase(checkName);\n          const isAllowedAllCaps = allowAllCaps && testAllCaps(checkName);\n\n          if (!isPascalCase && !isAllowedAllCaps && !isIgnored) {\n            const messageId = allowAllCaps ? 'usePascalOrSnakeCase' : 'usePascalCase';\n            report(context, messages[messageId], messageId, {\n              node,\n              data: {\n                name: splitName,\n              },\n            });\n            break;\n          }\n          index += 1;\n        } while (index < checkNames.length && !allowNamespace);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce shorthand or standard form for React fragments.\n * @author Alex Zherdev\n */\n\n'use strict';\n\nconst elementType = require('jsx-ast-utils/elementType');\nconst pragmaUtil = require('../util/pragma');\nconst variableUtil = require('../util/variable');\nconst testReactVersion = require('../util/version').testReactVersion;\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst getText = require('../util/eslint').getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction replaceNode(source, node, text) {\n  return `${source.slice(0, node.range[0])}${text}${source.slice(node.range[1])}`;\n}\n\nconst messages = {\n  fragmentsNotSupported: 'Fragments are only supported starting from React v16.2. Please disable the `react/jsx-fragments` rule in `eslint` settings or upgrade your version of React.',\n  preferPragma: 'Prefer {{react}}.{{fragment}} over fragment shorthand',\n  preferFragment: 'Prefer fragment shorthand over {{react}}.{{fragment}}',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce shorthand or standard form for React fragments',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-fragments'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      enum: ['syntax', 'element'],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || 'syntax';\n    const reactPragma = pragmaUtil.getFromContext(context);\n    const fragmentPragma = pragmaUtil.getFragmentFromContext(context);\n    const openFragShort = '<>';\n    const closeFragShort = '</>';\n    const openFragLong = `<${reactPragma}.${fragmentPragma}>`;\n    const closeFragLong = `</${reactPragma}.${fragmentPragma}>`;\n\n    function reportOnReactVersion(node) {\n      if (!testReactVersion(context, '>= 16.2.0')) {\n        report(context, messages.fragmentsNotSupported, 'fragmentsNotSupported', {\n          node,\n        });\n        return true;\n      }\n\n      return false;\n    }\n\n    function getFixerToLong(jsxFragment) {\n      if (!jsxFragment.closingFragment || !jsxFragment.openingFragment) {\n        // the old TS parser crashes here\n        // TODO: FIXME: can we fake these two descriptors?\n        return null;\n      }\n      return function fix(fixer) {\n        let source = getText(context);\n        source = replaceNode(source, jsxFragment.closingFragment, closeFragLong);\n        source = replaceNode(source, jsxFragment.openingFragment, openFragLong);\n        const lengthDiff = openFragLong.length - getText(context, jsxFragment.openingFragment).length\n          + closeFragLong.length - getText(context, jsxFragment.closingFragment).length;\n        const range = jsxFragment.range;\n        return fixer.replaceTextRange(range, source.slice(range[0], range[1] + lengthDiff));\n      };\n    }\n\n    function getFixerToShort(jsxElement) {\n      return function fix(fixer) {\n        let source = getText(context);\n        let lengthDiff;\n        if (jsxElement.closingElement) {\n          source = replaceNode(source, jsxElement.closingElement, closeFragShort);\n          source = replaceNode(source, jsxElement.openingElement, openFragShort);\n          lengthDiff = getText(context, jsxElement.openingElement).length - openFragShort.length\n            + getText(context, jsxElement.closingElement).length - closeFragShort.length;\n        } else {\n          source = replaceNode(source, jsxElement.openingElement, `${openFragShort}${closeFragShort}`);\n          lengthDiff = getText(context, jsxElement.openingElement).length - openFragShort.length\n            - closeFragShort.length;\n        }\n\n        const range = jsxElement.range;\n        return fixer.replaceTextRange(range, source.slice(range[0], range[1] - lengthDiff));\n      };\n    }\n\n    function refersToReactFragment(node, name) {\n      const variableInit = variableUtil.findVariableByName(context, node, name);\n      if (!variableInit) {\n        return false;\n      }\n\n      // const { Fragment } = React;\n      if (variableInit.type === 'Identifier' && variableInit.name === reactPragma) {\n        return true;\n      }\n\n      // const Fragment = React.Fragment;\n      if (\n        variableInit.type === 'MemberExpression'\n        && variableInit.object.type === 'Identifier'\n        && variableInit.object.name === reactPragma\n        && variableInit.property.type === 'Identifier'\n        && variableInit.property.name === fragmentPragma\n      ) {\n        return true;\n      }\n\n      // const { Fragment } = require('react');\n      if (\n        variableInit.callee\n        && variableInit.callee.name === 'require'\n        && variableInit.arguments\n        && variableInit.arguments[0]\n        && variableInit.arguments[0].value === 'react'\n      ) {\n        return true;\n      }\n\n      return false;\n    }\n\n    const jsxElements = [];\n    const fragmentNames = new Set([`${reactPragma}.${fragmentPragma}`]);\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXElement(node) {\n        jsxElements.push(node);\n      },\n\n      JSXFragment(node) {\n        if (reportOnReactVersion(node)) {\n          return;\n        }\n\n        if (configuration === 'element') {\n          report(context, messages.preferPragma, 'preferPragma', {\n            node,\n            data: {\n              react: reactPragma,\n              fragment: fragmentPragma,\n            },\n            fix: getFixerToLong(node),\n          });\n        }\n      },\n\n      ImportDeclaration(node) {\n        if (node.source && node.source.value === 'react') {\n          node.specifiers.forEach((spec) => {\n            if ('imported' in spec && spec.imported && spec.imported.name === fragmentPragma) {\n              if (spec.local) {\n                fragmentNames.add(spec.local.name);\n              }\n            }\n          });\n        }\n      },\n\n      'Program:exit'() {\n        jsxElements.forEach((node) => {\n          const openingEl = node.openingElement;\n          const elName = elementType(openingEl);\n\n          if (fragmentNames.has(elName) || refersToReactFragment(node, elName)) {\n            if (reportOnReactVersion(node)) {\n              return;\n            }\n\n            const attrs = openingEl.attributes;\n            if (configuration === 'syntax' && !(attrs && attrs.length > 0)) {\n              report(context, messages.preferFragment, 'preferFragment', {\n                node,\n                data: {\n                  react: reactPragma,\n                  fragment: fragmentPragma,\n                },\n                fix: getFixerToShort(node),\n              });\n            }\n          }\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Disallow multiple spaces between inline JSX props\n * @author Adrian Moennich\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst eslintUtil = require('../util/eslint');\nconst report = require('../util/report');\nconst propsUtil = require('../util/props');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noLineGap: 'Expected no line gap between “{{prop1}}” and “{{prop2}}”',\n  onlyOneSpace: 'Expected only one space between “{{prop1}}” and “{{prop2}}”',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow multiple spaces between inline JSX props',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-props-no-multi-spaces'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    const sourceCode = getSourceCode(context);\n\n    function getPropName(propNode) {\n      switch (propNode.type) {\n        case 'JSXSpreadAttribute':\n          return getText(context, propNode.argument);\n        case 'JSXIdentifier':\n          return propNode.name;\n        case 'JSXMemberExpression':\n          return `${getPropName(propNode.object)}.${propNode.property.name}`;\n        default:\n          return propNode.name\n            ? propNode.name.name\n            : `${getText(context, propNode.object)}.${propNode.property.name}`; // needed for typescript-eslint parser\n      }\n    }\n\n    // First and second must be adjacent nodes\n    function hasEmptyLines(first, second) {\n      const comments = sourceCode.getCommentsBefore ? sourceCode.getCommentsBefore(second) : [];\n      const nodes = [].concat(first, comments, second);\n\n      for (let i = 1; i < nodes.length; i += 1) {\n        const prev = nodes[i - 1];\n        const curr = nodes[i];\n        if (curr.loc.start.line - prev.loc.end.line >= 2) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    function checkSpacing(prev, node) {\n      if (hasEmptyLines(prev, node)) {\n        report(context, messages.noLineGap, 'noLineGap', {\n          node,\n          data: {\n            prop1: getPropName(prev),\n            prop2: getPropName(node),\n          },\n        });\n      }\n\n      if (prev.loc.end.line !== node.loc.end.line) {\n        return;\n      }\n\n      const between = getSourceCode(context).text.slice(prev.range[1], node.range[0]);\n\n      if (between !== ' ') {\n        report(context, messages.onlyOneSpace, 'onlyOneSpace', {\n          node,\n          data: {\n            prop1: getPropName(prev),\n            prop2: getPropName(node),\n          },\n          fix(fixer) {\n            return fixer.replaceTextRange([prev.range[1], node.range[0]], ' ');\n          },\n        });\n      }\n    }\n\n    function containsGenericType(node) {\n      const nodeTypeArguments = propsUtil.getTypeArguments(node);\n      if (typeof nodeTypeArguments === 'undefined') {\n        return false;\n      }\n\n      return nodeTypeArguments.type === 'TSTypeParameterInstantiation';\n    }\n\n    function getGenericNode(node) {\n      const name = node.name;\n      if (containsGenericType(node)) {\n        const nodeTypeArguments = propsUtil.getTypeArguments(node);\n\n        return Object.assign(\n          {},\n          node,\n          {\n            range: [\n              name.range[0],\n              nodeTypeArguments.range[1],\n            ],\n          }\n        );\n      }\n\n      return name;\n    }\n\n    return {\n      JSXOpeningElement(node) {\n        node.attributes.reduce((prev, prop) => {\n          checkSpacing(prev, prop);\n          return prop;\n        }, getGenericNode(node));\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent JSX prop spreading\n * @author Ashish Gambhir\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst OPTIONS = { ignore: 'ignore', enforce: 'enforce' };\nconst DEFAULTS = {\n  html: OPTIONS.enforce,\n  custom: OPTIONS.enforce,\n  explicitSpread: OPTIONS.enforce,\n  exceptions: [],\n};\n\nconst isException = (tag, allExceptions) => allExceptions.indexOf(tag) !== -1;\nconst isProperty = (property) => property.type === 'Property';\nconst getTagNameFromMemberExpression = (node) => {\n  if (node.property.parent) {\n    return `${node.property.parent.object.name}.${node.property.name}`;\n  }\n  // for eslint 3\n  return `${node.object.name}.${node.property.name}`;\n};\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noSpreading: 'Prop spreading is forbidden',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow JSX prop spreading',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('jsx-props-no-spreading'),\n    },\n\n    messages,\n\n    schema: [{\n      allOf: [{\n        type: 'object',\n        properties: {\n          html: {\n            enum: [OPTIONS.enforce, OPTIONS.ignore],\n          },\n          custom: {\n            enum: [OPTIONS.enforce, OPTIONS.ignore],\n          },\n          explicitSpread: {\n            enum: [OPTIONS.enforce, OPTIONS.ignore],\n          },\n          exceptions: {\n            type: 'array',\n            items: {\n              type: 'string',\n              uniqueItems: true,\n            },\n          },\n        },\n      }, {\n        not: {\n          type: 'object',\n          required: ['html', 'custom'],\n          properties: {\n            html: {\n              enum: [OPTIONS.ignore],\n            },\n            custom: {\n              enum: [OPTIONS.ignore],\n            },\n            exceptions: {\n              type: 'array',\n              minItems: 0,\n              maxItems: 0,\n            },\n          },\n        },\n      }],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const ignoreHtmlTags = (configuration.html || DEFAULTS.html) === OPTIONS.ignore;\n    const ignoreCustomTags = (configuration.custom || DEFAULTS.custom) === OPTIONS.ignore;\n    const ignoreExplicitSpread = (configuration.explicitSpread || DEFAULTS.explicitSpread) === OPTIONS.ignore;\n    const exceptions = configuration.exceptions || DEFAULTS.exceptions;\n    return {\n      JSXSpreadAttribute(node) {\n        const jsxOpeningElement = node.parent.name;\n        const type = jsxOpeningElement.type;\n\n        let tagName;\n        if (type === 'JSXIdentifier') {\n          tagName = jsxOpeningElement.name;\n        } else if (type === 'JSXMemberExpression') {\n          tagName = getTagNameFromMemberExpression(jsxOpeningElement);\n        } else {\n          tagName = undefined;\n        }\n\n        const isHTMLTag = tagName && tagName[0] !== tagName[0].toUpperCase();\n        const isCustomTag = tagName && (tagName[0] === tagName[0].toUpperCase() || tagName.includes('.'));\n        if (\n          isHTMLTag\n          && ((ignoreHtmlTags && !isException(tagName, exceptions))\n          || (!ignoreHtmlTags && isException(tagName, exceptions)))\n        ) {\n          return;\n        }\n        if (\n          isCustomTag\n          && ((ignoreCustomTags && !isException(tagName, exceptions))\n          || (!ignoreCustomTags && isException(tagName, exceptions)))\n        ) {\n          return;\n        }\n        if (\n          ignoreExplicitSpread\n          && node.argument.type === 'ObjectExpression'\n          && node.argument.properties.every(isProperty)\n        ) {\n          return;\n        }\n        report(context, messages.noSpreading, 'noSpreading', {\n          node,\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent JSX prop spreading the same expression multiple times\n * @author Simon Schick\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noMultiSpreading: 'Spreading the same expression multiple times is forbidden',\n};\n\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow JSX prop spreading the same identifier multiple times',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('jsx-props-no-spread-multi'),\n    },\n    messages,\n  },\n\n  create(context) {\n    return {\n      JSXOpeningElement(node) {\n        const spreads = node.attributes.filter(\n          (attr) => attr.type === 'JSXSpreadAttribute'\n          && attr.argument.type === 'Identifier'\n        );\n        if (spreads.length < 2) {\n          return;\n        }\n        // We detect duplicate expressions by their identifier\n        const identifierNames = new Set();\n        spreads.forEach((spread) => {\n          if (identifierNames.has(spread.argument.name)) {\n            report(context, messages.noMultiSpreading, 'noMultiSpreading', {\n              node: spread,\n            });\n          }\n          identifierNames.add(spread.argument.name);\n        });\n      },\n    };\n  },\n};\n", "'use strict';\n\n/**\n * Logs out a message if there is no format option set.\n * @param {string} message - Message to log.\n */\nfunction log(message) {\n  if (!/=-(f|-format)=/.test(process.argv.join('='))) {\n    // eslint-disable-next-line no-console\n    console.log(message);\n  }\n}\n\nmodule.exports = log;\n", "/**\n * @fileoverview Enforce default props alphabetical sorting\n * @author Vladimir Kattsov\n * @deprecated\n */\n\n'use strict';\n\nconst variableUtil = require('../util/variable');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst log = require('../util/log');\nconst eslintUtil = require('../util/eslint');\n\nconst getFirstTokens = eslintUtil.getFirstTokens;\nconst getText = eslintUtil.getText;\n\nlet isWarnedForDeprecation = false;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  propsNotSorted: 'Default prop types declarations should be sorted alphabetically',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    deprecated: true,\n    replacedBy: ['sort-default-props'],\n    docs: {\n      description: 'Enforce defaultProps declarations alphabetical sorting',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-sort-default-props'),\n    },\n    // fixable: 'code',\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignoreCase: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const ignoreCase = configuration.ignoreCase || false;\n\n    /**\n     * Get properties name\n     * @param {Object} node - Property.\n     * @returns {string} Property name.\n     */\n    function getPropertyName(node) {\n      if (node.key || ['MethodDefinition', 'Property'].indexOf(node.type) !== -1) {\n        return node.key.name;\n      }\n      if (node.type === 'MemberExpression') {\n        return node.property.name;\n      // Special case for class properties\n      // (babel-eslint@5 does not expose property name so we have to rely on tokens)\n      }\n      if (node.type === 'ClassProperty') {\n        const tokens = getFirstTokens(context, node, 2);\n        return tokens[1] && tokens[1].type === 'Identifier' ? tokens[1].value : tokens[0].value;\n      }\n      return '';\n    }\n\n    /**\n     * Checks if the Identifier node passed in looks like a defaultProps declaration.\n     * @param   {ASTNode}  node The node to check. Must be an Identifier node.\n     * @returns {boolean}       `true` if the node is a defaultProps declaration, `false` if not\n     */\n    function isDefaultPropsDeclaration(node) {\n      const propName = getPropertyName(node);\n      return (propName === 'defaultProps' || propName === 'getDefaultProps');\n    }\n\n    function getKey(node) {\n      return getText(context, node.key || node.argument);\n    }\n\n    /**\n     * Find a variable by name in the current scope.\n     * @param  {ASTNode} node The node to look for.\n     * @param  {string} name Name of the variable to look for.\n     * @returns {ASTNode|null} Return null if the variable could not be found, ASTNode otherwise.\n     */\n    function findVariableByName(node, name) {\n      const variable = variableUtil\n        .getVariableFromContext(context, node, name);\n\n      if (!variable || !variable.defs[0] || !variable.defs[0].node) {\n        return null;\n      }\n\n      if (variable.defs[0].node.type === 'TypeAlias') {\n        return variable.defs[0].node.right;\n      }\n\n      return variable.defs[0].node.init;\n    }\n\n    /**\n     * Checks if defaultProps declarations are sorted\n     * @param {Array} declarations The array of AST nodes being checked.\n     * @returns {void}\n     */\n    function checkSorted(declarations) {\n      // function fix(fixer) {\n      //   return propTypesSortUtil.fixPropTypesSort(context, fixer, declarations, ignoreCase);\n      // }\n\n      declarations.reduce((prev, curr, idx, decls) => {\n        if (/Spread(?:Property|Element)$/.test(curr.type)) {\n          return decls[idx + 1];\n        }\n\n        let prevPropName = getKey(prev);\n        let currentPropName = getKey(curr);\n\n        if (ignoreCase) {\n          prevPropName = prevPropName.toLowerCase();\n          currentPropName = currentPropName.toLowerCase();\n        }\n\n        if (currentPropName < prevPropName) {\n          report(context, messages.propsNotSorted, 'propsNotSorted', {\n            node: curr,\n            // fix\n          });\n\n          return prev;\n        }\n\n        return curr;\n      }, declarations[0]);\n    }\n\n    function checkNode(node) {\n      if (!node) {\n        return;\n      }\n      if (node.type === 'ObjectExpression') {\n        checkSorted(node.properties);\n      } else if (node.type === 'Identifier') {\n        const propTypesObject = findVariableByName(node, node.name);\n        if (propTypesObject && propTypesObject.properties) {\n          checkSorted(propTypesObject.properties);\n        }\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------\n\n    return {\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!isDefaultPropsDeclaration(node)) {\n          return;\n        }\n\n        checkNode(node.value);\n      },\n\n      MemberExpression(node) {\n        if (!isDefaultPropsDeclaration(node)) {\n          return;\n        }\n\n        checkNode('right' in node.parent && node.parent.right);\n      },\n\n      Program() {\n        if (isWarnedForDeprecation) {\n          return;\n        }\n\n        log('The react/jsx-sort-default-props rule is deprecated. It has been renamed to `react/sort-default-props`.');\n        isWarnedForDeprecation = true;\n      },\n    };\n  },\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $ArrayPrototype = GetIntrinsic('%Array.prototype%');\nvar $RangeError = require('es-errors/range');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar isInteger = require('../helpers/isInteger');\n\nvar MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n\nvar hasProto = require('has-proto')();\n\nvar $setProto = GetIntrinsic('%Object.setPrototypeOf%', true) || (\n\thasProto\n\t\t? function (O, proto) {\n\t\t\tO.__proto__ = proto; // eslint-disable-line no-proto, no-param-reassign\n\t\t\treturn O;\n\t\t}\n\t\t: null\n);\n\n// https://262.ecma-international.org/12.0/#sec-arraycreate\n\nmodule.exports = function ArrayCreate(length) {\n\tif (!isInteger(length) || length < 0) {\n\t\tthrow new $TypeError('Assertion failed: `length` must be an integer Number >= 0');\n\t}\n\tif (length > MAX_ARRAY_LENGTH) {\n\t\tthrow new $RangeError('length is greater than (2**32 - 1)');\n\t}\n\tvar proto = arguments.length > 1 ? arguments[1] : $ArrayPrototype;\n\tvar A = []; // steps 3, 5\n\tif (proto !== $ArrayPrototype) { // step 4\n\t\tif (!$setProto) {\n\t\t\tthrow new $SyntaxError('ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n\t\t}\n\t\t$setProto(A, proto);\n\t}\n\tif (length !== 0) { // bypasses the need for step 6\n\t\tA.length = length;\n\t}\n\t/* step 6, the above as a shortcut for the below\n\tOrdinaryDefineOwnProperty(A, 'length', {\n\t\t'[[Configurable]]': false,\n\t\t'[[Enumerable]]': false,\n\t\t'[[Value]]': length,\n\t\t'[[Writable]]': true\n\t});\n\t*/\n\treturn A;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $BigInt = GetIntrinsic('%BigInt%', true);\nvar $TypeError = require('es-errors/type');\nvar $SyntaxError = require('es-errors/syntax');\n\n// https://262.ecma-international.org/14.0/#sec-stringtobigint\n\nmodule.exports = function StringToBigInt(argument) {\n\tif (typeof argument !== 'string') {\n\t\tthrow new $TypeError('`argument` must be a string');\n\t}\n\tif (!$BigInt) {\n\t\tthrow new $SyntaxError('BigInts are not supported in this environment');\n\t}\n\ttry {\n\t\treturn $BigInt(argument);\n\t} catch (e) {\n\t\treturn void undefined;\n\t}\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Number = GetIntrinsic('%Number%');\n\nvar isPrimitive = require('../helpers/isPrimitive');\n\nvar ToPrimitive = require('./ToPrimitive');\nvar ToNumber = require('./ToNumber');\n\n// https://262.ecma-international.org/11.0/#sec-tonumeric\n\nmodule.exports = function ToNumeric(argument) {\n\tvar primValue = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);\n\tif (typeof primValue === 'bigint') {\n\t\treturn primValue;\n\t}\n\treturn ToNumber(primValue);\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/11.0/#sec-numeric-types-bigint-lessThan\n\nmodule.exports = function BigIntLessThan(x, y) {\n\tif (typeof x !== 'bigint' || typeof y !== 'bigint') {\n\t\tthrow new $TypeError('Assertion failed: `x` and `y` arguments must be BigInts');\n\t}\n\n\t// shortcut for the actual spec mechanics\n\treturn x < y;\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar isNaN = require('../../helpers/isNaN');\n\n// https://262.ecma-international.org/11.0/#sec-numeric-types-number-lessThan\n\nmodule.exports = function NumberLessThan(x, y) {\n\tif (typeof x !== 'number' || typeof y !== 'number') {\n\t\tthrow new $TypeError('Assertion failed: `x` and `y` arguments must be Numbers');\n\t}\n\n\t// If x is NaN, return undefined.\n\t// If y is NaN, return undefined.\n\tif (isNaN(x) || isNaN(y)) {\n\t\treturn void undefined;\n\t}\n\n\t// shortcut for the actual spec mechanics\n\treturn x < y;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $Number = GetIntrinsic('%Number%');\nvar $TypeError = require('es-errors/type');\nvar min = GetIntrinsic('%Math.min%');\n\nvar $isNaN = require('../helpers/isNaN');\nvar $charCodeAt = require('call-bind/callBound')('String.prototype.charCodeAt');\n\nvar StringToBigInt = require('./StringToBigInt');\nvar ToNumeric = require('./ToNumeric');\nvar ToPrimitive = require('./ToPrimitive');\n\nvar BigIntLessThan = require('./BigInt/lessThan');\nvar NumberLessThan = require('./Number/lessThan');\n\n// https://262.ecma-international.org/14.0/#sec-islessthan\n\n// eslint-disable-next-line max-statements, max-lines-per-function\nmodule.exports = function IsLessThan(x, y, LeftFirst) {\n\tif (typeof LeftFirst !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: LeftFirst argument must be a Boolean');\n\t}\n\tvar px;\n\tvar py;\n\tif (LeftFirst) {\n\t\tpx = ToPrimitive(x, $Number);\n\t\tpy = ToPrimitive(y, $Number);\n\t} else {\n\t\tpy = ToPrimitive(y, $Number);\n\t\tpx = ToPrimitive(x, $Number);\n\t}\n\n\tif (typeof px === 'string' && typeof py === 'string') { // step 3\n\t\t// a. Let lx be the length of px.\n\t\t// b. Let ly be the length of py.\n\t\t// c. For each integer i starting with 0 such that i < min(lx, ly), in ascending order, do\n\t\t// i. Let cx be the integer that is the numeric value of the code unit at index i within px.\n\t\t// ii. Let cy be the integer that is the numeric value of the code unit at index i within py.\n\t\t// iii. If cx < cy, return true.\n\t\t// iv. If cx > cy, return false.\n\t\t// d. If lx < ly, return true. Otherwise, return false.\n\n\t\tvar lx = px.length; // step 3.a\n\t\tvar ly = py.length; // step 3.b\n\t\tfor (var i = 0; i < min(lx, ly); i++) { // step 3.c\n\t\t\tvar cx = $charCodeAt(px, i); // step 3.c.i\n\t\t\tvar cy = $charCodeAt(py, i); // step 3.c.ii\n\t\t\tif (cx < cy) {\n\t\t\t\treturn true; // step 3.c.iii\n\t\t\t}\n\t\t\tif (cx > cy) {\n\t\t\t\treturn false; // step 3.c.iv\n\t\t\t}\n\t\t}\n\t\treturn lx < ly; // step 3.d\n\t}\n\n\tvar nx;\n\tvar ny;\n\tif (typeof px === 'bigint' && typeof py === 'string') {\n\t\tny = StringToBigInt(py);\n\t\tif (typeof ny === 'undefined') {\n\t\t\treturn void undefined;\n\t\t}\n\t\treturn BigIntLessThan(px, ny);\n\t}\n\tif (typeof px === 'string' && typeof py === 'bigint') {\n\t\tnx = StringToBigInt(px);\n\t\tif (typeof nx === 'undefined') {\n\t\t\treturn void undefined;\n\t\t}\n\t\treturn BigIntLessThan(nx, py);\n\t}\n\n\tnx = ToNumeric(px);\n\tny = ToNumeric(py);\n\n\tif (typeof nx === typeof ny) {\n\t\treturn typeof nx === 'number' ? NumberLessThan(nx, ny) : BigIntLessThan(nx, ny);\n\t}\n\n\tif ($isNaN(nx) || $isNaN(ny)) {\n\t\treturn void undefined;\n\t}\n\n\tif (nx === -Infinity || ny === Infinity) {\n\t\treturn true;\n\t}\n\tif (nx === Infinity || ny === -Infinity) {\n\t\treturn false;\n\t}\n\n\treturn nx < ny; // by now, these are both finite, and the same type\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('./Call');\nvar IsLessThan = require('./IsLessThan');\nvar ToNumber = require('./ToNumber');\nvar ToString = require('./ToString');\n\nvar isNaN = require('../helpers/isNaN');\n\n// https://262.ecma-international.org/14.0/#sec-comparearrayelements\n\nmodule.exports = function CompareArrayElements(x, y, compareFn) {\n\tif (typeof compareFn !== 'function' && typeof compareFn !== 'undefined') {\n\t\tthrow new $TypeError('Assertion failed: `compareFn` must be a function or undefined');\n\t}\n\n\tif (typeof x === 'undefined' && typeof y === 'undefined') {\n\t\treturn 0; // step 1\n\t}\n\n\tif (typeof x === 'undefined') {\n\t\treturn 1; // step 2\n\t}\n\n\tif (typeof y === 'undefined') {\n\t\treturn -1; // step 3\n\t}\n\n\tif (typeof compareFn !== 'undefined') { // step 4\n\t\tvar v = ToNumber(Call(compareFn, void undefined, [x, y])); // step 4.a\n\t\tif (isNaN(v)) {\n\t\t\treturn 0; // step 4.b\n\t\t}\n\t\treturn v; // step 4.c\n\t}\n\n\tvar xString = ToString(x); // step 5\n\tvar yString = ToString(y); // step 6\n\tvar xSmaller = IsLessThan(xString, yString, true); // step 7\n\tif (xSmaller) {\n\t\treturn -1; // step 8\n\t}\n\tvar ySmaller = IsLessThan(yString, xString, true); // step 9\n\tif (ySmaller) {\n\t\treturn 1; // step 10\n\t}\n\treturn 0; // step 11\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar ToLength = require('./ToLength');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/11.0/#sec-lengthofarraylike\n\nmodule.exports = function LengthOfArrayLike(obj) {\n\tif (Type(obj) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `obj` must be an Object');\n\t}\n\treturn ToLength(Get(obj, 'length'));\n};\n\n// TODO: use this all over\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-hasproperty\n\nmodule.exports = function HasProperty(O, P) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: `O` must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: `P` must be a Property Key');\n\t}\n\treturn P in O;\n};\n", "'use strict';\n\nvar functionName = require('function.prototype.name');\n\nvar anon = functionName(function () {});\n\nmodule.exports = function isAbstractClosure(x) {\n\treturn typeof x === 'function' && (!x.prototype || functionName(x) === anon);\n};\n", "'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar $TypeError = require('es-errors/type');\n\nvar Get = require('./Get');\nvar HasProperty = require('./HasProperty');\nvar ToString = require('./ToString');\nvar Type = require('./Type');\n\nvar isAbstractClosure = require('../helpers/isAbstractClosure');\nvar isInteger = require('../helpers/isInteger');\n\nvar $push = callBound('Array.prototype.push');\nvar $sort = callBound('Array.prototype.sort');\n\n// https://262.ecma-international.org/14.0/#sec-sortindexedproperties\n\nmodule.exports = function SortIndexedProperties(obj, len, SortCompare, holes) {\n\tif (Type(obj) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(obj) is not Object');\n\t}\n\tif (!isInteger(len) || len < 0) {\n\t\tthrow new $TypeError('Assertion failed: `len` must be an integer >= 0');\n\t}\n\tif (!isAbstractClosure(SortCompare) || SortCompare.length !== 2) {\n\t\tthrow new $TypeError('Assertion failed: `SortCompare` must be an abstract closure taking 2 arguments');\n\t}\n\tif (holes !== 'skip-holes' && holes !== 'read-through-holes') {\n\t\tthrow new $TypeError('Assertion failed: `holes` must be either `skip-holes` or `read-through-holes`');\n\t}\n\n\tvar items = []; // step 1\n\n\tvar k = 0; // step 2\n\n\twhile (k < len) { // step 3\n\t\tvar Pk = ToString(k);\n\t\tvar kRead = holes === 'skip-holes' ? HasProperty(obj, Pk) : true; // step 3.b - 3.c\n\t\tif (kRead) { // step 3.d\n\t\t\tvar kValue = Get(obj, Pk);\n\t\t\t$push(items, kValue);\n\t\t}\n\t\tk += 1; // step 3.e\n\t}\n\n\t$sort(items, SortCompare); // step 4\n\n\treturn items; // step 5\n};\n", "'use strict';\n\n// https://262.ecma-international.org/6.0/#sec-toobject\n\nmodule.exports = require('es-object-atoms/ToObject');\n", "'use strict';\n\nvar ArrayCreate = require('es-abstract/2024/ArrayCreate');\nvar CompareArrayElements = require('es-abstract/2024/CompareArrayElements');\nvar CreateDataPropertyOrThrow = require('es-abstract/2024/CreateDataPropertyOrThrow');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar LengthOfArrayLike = require('es-abstract/2024/LengthOfArrayLike');\nvar SortIndexedProperties = require('es-abstract/2024/SortIndexedProperties');\nvar ToObject = require('es-abstract/2024/ToObject');\nvar ToString = require('es-abstract/2024/ToString');\n\nvar $TypeError = require('es-errors/type');\n\nmodule.exports = function toSorted(comparefn) {\n\tif (typeof comparefn !== 'undefined' && !IsCallable(comparefn)) {\n\t\tthrow new $TypeError('`comparefn` must be a function'); // step 1\n\t}\n\n\tvar O = ToObject(this); // step 2\n\tvar len = LengthOfArrayLike(O); // step 3\n\tvar A = ArrayCreate(len); // step 4\n\n\t// eslint-disable-next-line no-sequences\n\tvar SortCompare = (0, function (x, y) { // step 5\n\t\treturn CompareArrayElements(x, y, comparefn); // step 5.a\n\t});\n\n\tvar sortedList = SortIndexedProperties(O, len, SortCompare, 'read-through-holes'); // step 6\n\n\tvar j = 0; // step 7\n\twhile (j < len) { // step 8\n\t\tCreateDataPropertyOrThrow(A, ToString(j), sortedList[j]); // step 8.a\n\t\tj += 1; // step 8.b\n\t}\n\n\treturn A; // step 9\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn Array.prototype.toSorted || implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar shimUnscopables = require('es-shim-unscopables');\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shim() {\n\tvar polyfill = getPolyfill();\n\n\tdefine(\n\t\tArray.prototype,\n\t\t{ toSorted: polyfill },\n\t\t{ toSorted: function () { return Array.prototype.toSorted !== polyfill; } }\n\t);\n\n\tshimUnscopables('toSorted');\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar polyfill = getPolyfill();\nvar shim = require('./shim');\n\nvar bound = callBind(polyfill);\n\ndefine(bound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = bound;\n", "/**\n * @fileoverview Common propTypes sorting functionality.\n */\n\n'use strict';\n\nconst toSorted = require('array.prototype.tosorted');\n\nconst astUtil = require('./ast');\nconst eslintUtil = require('./eslint');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n/**\n * Returns the value name of a node.\n *\n * @param {ASTNode} node the node to check.\n * @returns {string} The name of the node.\n */\nfunction getValueName(node) {\n  return node.type === 'Property'\n    && node.value.property\n    && node.value.property.name;\n}\n\n/**\n * Checks if the prop is required or not.\n *\n * @param {ASTNode} node the prop to check.\n * @returns {boolean} true if the prop is required.\n */\nfunction isRequiredProp(node) {\n  return getValueName(node) === 'isRequired';\n}\n\n/**\n * Checks if the proptype is a callback by checking if it starts with 'on'.\n *\n * @param {string} propName the name of the proptype to check.\n * @returns {boolean} true if the proptype is a callback.\n */\nfunction isCallbackPropName(propName) {\n  return /^on[A-Z]/.test(propName);\n}\n\n/**\n * Checks if the prop is PropTypes.shape.\n *\n * @param {ASTNode} node the prop to check.\n * @returns {boolean} true if the prop is PropTypes.shape.\n */\nfunction isShapeProp(node) {\n  return !!(\n    node\n    && node.callee\n    && node.callee.property\n    && node.callee.property.name === 'shape'\n  );\n}\n\n/**\n * Returns the properties of a PropTypes.shape.\n *\n * @param {ASTNode} node the prop to check.\n * @returns {Array} the properties of the PropTypes.shape node.\n */\nfunction getShapeProperties(node) {\n  return node.arguments\n    && node.arguments[0]\n    && node.arguments[0].properties;\n}\n\n/**\n * Compares two elements.\n *\n * @param {ASTNode} a the first element to compare.\n * @param {ASTNode} b the second element to compare.\n * @param {Context} context The context of the two nodes.\n * @param {boolean=} ignoreCase whether or not to ignore case when comparing the two elements.\n * @param {boolean=} requiredFirst whether or not to sort required elements first.\n * @param {boolean=} callbacksLast whether or not to sort callbacks after everything else.\n * @param {boolean=} noSortAlphabetically whether or not to disable alphabetical sorting of the elements.\n * @returns {number} the sort order of the two elements.\n */\nfunction sorter(a, b, context, ignoreCase, requiredFirst, callbacksLast, noSortAlphabetically) {\n  const aKey = String(astUtil.getKeyValue(context, a));\n  const bKey = String(astUtil.getKeyValue(context, b));\n\n  if (requiredFirst) {\n    if (isRequiredProp(a) && !isRequiredProp(b)) {\n      return -1;\n    }\n    if (!isRequiredProp(a) && isRequiredProp(b)) {\n      return 1;\n    }\n  }\n\n  if (callbacksLast) {\n    if (isCallbackPropName(aKey) && !isCallbackPropName(bKey)) {\n      return 1;\n    }\n    if (!isCallbackPropName(aKey) && isCallbackPropName(bKey)) {\n      return -1;\n    }\n  }\n\n  if (!noSortAlphabetically) {\n    if (ignoreCase) {\n      return aKey.localeCompare(bKey);\n    }\n\n    if (aKey < bKey) {\n      return -1;\n    }\n    if (aKey > bKey) {\n      return 1;\n    }\n  }\n  return 0;\n}\n\nconst commentnodeMap = new WeakMap(); // all nodes reference WeakMap for start and end range\n\n/**\n * Fixes sort order of prop types.\n *\n * @param {Context} context the second element to compare.\n * @param {Fixer} fixer the first element to compare.\n * @param {Array} declarations The context of the two nodes.\n * @param {boolean=} ignoreCase whether or not to ignore case when comparing the two elements.\n * @param {boolean=} requiredFirst whether or not to sort required elements first.\n * @param {boolean=} callbacksLast whether or not to sort callbacks after everything else.\n * @param {boolean=} noSortAlphabetically whether or not to disable alphabetical sorting of the elements.\n * @param {boolean=} sortShapeProp whether or not to sort propTypes defined in PropTypes.shape.\n * @param {boolean=} checkTypes whether or not sorting of prop type definitions are checked.\n * @returns {Object|*|{range, text}} the sort order of the two elements.\n */\nfunction fixPropTypesSort(\n  context,\n  fixer,\n  declarations,\n  ignoreCase,\n  requiredFirst,\n  callbacksLast,\n  noSortAlphabetically,\n  sortShapeProp,\n  checkTypes\n) {\n  function sortInSource(allNodes, source) {\n    const originalSource = source;\n    const sourceCode = getSourceCode(context);\n    for (let i = 0; i < allNodes.length; i++) {\n      const node = allNodes[i];\n      let commentAfter = [];\n      let commentBefore = [];\n      let newStart = 0;\n      let newEnd = 0;\n      try {\n        commentBefore = sourceCode.getCommentsBefore(node);\n        commentAfter = sourceCode.getCommentsAfter(node);\n      } catch (e) { /**/ }\n\n      if (commentAfter.length === 0 || commentBefore.length === 0) {\n        newStart = node.range[0];\n        newEnd = node.range[1];\n      }\n\n      const firstCommentBefore = commentBefore[0];\n      if (commentBefore.length >= 1) {\n        newStart = firstCommentBefore.range[0];\n      }\n      const lastCommentAfter = commentAfter[commentAfter.length - 1];\n      if (commentAfter.length >= 1) {\n        newEnd = lastCommentAfter.range[1];\n      }\n      commentnodeMap.set(node, { start: newStart, end: newEnd, hasComment: true });\n    }\n    const nodeGroups = allNodes.reduce((acc, curr) => {\n      if (curr.type === 'ExperimentalSpreadProperty' || curr.type === 'SpreadElement') {\n        acc.push([]);\n      } else {\n        acc[acc.length - 1].push(curr);\n      }\n      return acc;\n    }, [[]]);\n\n    nodeGroups.forEach((nodes) => {\n      const sortedAttributes = toSorted(\n        nodes,\n        (a, b) => sorter(a, b, context, ignoreCase, requiredFirst, callbacksLast, noSortAlphabetically)\n      );\n\n      const sourceCodeText = getText(context);\n      let separator = '';\n      source = nodes.reduceRight((acc, attr, index) => {\n        const sortedAttr = sortedAttributes[index];\n        const commentNode = commentnodeMap.get(sortedAttr);\n        let sortedAttrText = sourceCodeText.slice(commentNode.start, commentNode.end);\n        const sortedAttrTextLastChar = sortedAttrText[sortedAttrText.length - 1];\n        if (!separator && [';', ','].some((allowedSep) => sortedAttrTextLastChar === allowedSep)) {\n          separator = sortedAttrTextLastChar;\n        }\n        if (sortShapeProp && isShapeProp(sortedAttr.value)) {\n          const shape = getShapeProperties(sortedAttr.value);\n          if (shape) {\n            const attrSource = sortInSource(\n              shape,\n              originalSource\n            );\n            sortedAttrText = attrSource.slice(sortedAttr.range[0], sortedAttr.range[1]);\n          }\n        }\n        const sortedAttrTextVal = checkTypes && !sortedAttrText.endsWith(separator) ? `${sortedAttrText}${separator}` : sortedAttrText;\n        return `${acc.slice(0, commentnodeMap.get(attr).start)}${sortedAttrTextVal}${acc.slice(commentnodeMap.get(attr).end)}`;\n      }, source);\n    });\n    return source;\n  }\n\n  const source = sortInSource(declarations, getText(context));\n\n  const rangeStart = commentnodeMap.get(declarations[0]).start;\n  const rangeEnd = commentnodeMap.get(declarations[declarations.length - 1]).end;\n  return fixer.replaceTextRange([rangeStart, rangeEnd], source.slice(rangeStart, rangeEnd));\n}\n\nmodule.exports = {\n  fixPropTypesSort,\n  isCallbackPropName,\n  isRequiredProp,\n  isShapeProp,\n};\n", "/**\n * @fileoverview Enforce props alphabetical sorting\n * @author Ilya Volodin, Yannick Croissant\n */\n\n'use strict';\n\nconst propName = require('jsx-ast-utils/propName');\nconst includes = require('array-includes');\nconst toSorted = require('array.prototype.tosorted');\n\nconst docsUrl = require('../util/docsUrl');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\nconst propTypesSortUtil = require('../util/propTypesSort');\nconst eslintUtil = require('../util/eslint');\n\nconst getText = eslintUtil.getText;\nconst getSourceCode = eslintUtil.getSourceCode;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction isMultilineProp(node) {\n  return node.loc.start.line !== node.loc.end.line;\n}\n\nconst messages = {\n  noUnreservedProps: 'A customized reserved first list must only contain a subset of React reserved props. Remove: {{unreservedWords}}',\n  listIsEmpty: 'A customized reserved first list must not be empty',\n  listReservedPropsFirst: 'Reserved props must be listed before all other props',\n  listCallbacksLast: 'Callbacks must be listed after all other props',\n  listShorthandFirst: 'Shorthand props must be listed before all other props',\n  listShorthandLast: 'Shorthand props must be listed after all other props',\n  listMultilineFirst: 'Multiline props must be listed before all other props',\n  listMultilineLast: 'Multiline props must be listed after all other props',\n  sortPropsByAlpha: 'Props should be sorted alphabetically',\n};\n\nconst RESERVED_PROPS_LIST = [\n  'children',\n  'dangerouslySetInnerHTML',\n  'key',\n  'ref',\n];\n\nfunction isReservedPropName(name, list) {\n  return list.indexOf(name) >= 0;\n}\n\nlet attributeMap;\n// attributeMap = { end: endrange, hasComment: true||false if comment in between nodes exists, it needs to be sorted to end }\n\nfunction shouldSortToEnd(node) {\n  const attr = attributeMap.get(node);\n  return !!attr && !!attr.hasComment;\n}\n\nfunction contextCompare(a, b, options) {\n  let aProp = propName(a);\n  let bProp = propName(b);\n\n  const aSortToEnd = shouldSortToEnd(a);\n  const bSortToEnd = shouldSortToEnd(b);\n  if (aSortToEnd && !bSortToEnd) {\n    return 1;\n  }\n  if (!aSortToEnd && bSortToEnd) {\n    return -1;\n  }\n\n  if (options.reservedFirst) {\n    const aIsReserved = isReservedPropName(aProp, options.reservedList);\n    const bIsReserved = isReservedPropName(bProp, options.reservedList);\n    if (aIsReserved && !bIsReserved) {\n      return -1;\n    }\n    if (!aIsReserved && bIsReserved) {\n      return 1;\n    }\n  }\n\n  if (options.callbacksLast) {\n    const aIsCallback = propTypesSortUtil.isCallbackPropName(aProp);\n    const bIsCallback = propTypesSortUtil.isCallbackPropName(bProp);\n    if (aIsCallback && !bIsCallback) {\n      return 1;\n    }\n    if (!aIsCallback && bIsCallback) {\n      return -1;\n    }\n  }\n\n  if (options.shorthandFirst || options.shorthandLast) {\n    const shorthandSign = options.shorthandFirst ? -1 : 1;\n    if (!a.value && b.value) {\n      return shorthandSign;\n    }\n    if (a.value && !b.value) {\n      return -shorthandSign;\n    }\n  }\n\n  if (options.multiline !== 'ignore') {\n    const multilineSign = options.multiline === 'first' ? -1 : 1;\n    const aIsMultiline = isMultilineProp(a);\n    const bIsMultiline = isMultilineProp(b);\n    if (aIsMultiline && !bIsMultiline) {\n      return multilineSign;\n    }\n    if (!aIsMultiline && bIsMultiline) {\n      return -multilineSign;\n    }\n  }\n\n  if (options.noSortAlphabetically) {\n    return 0;\n  }\n\n  const actualLocale = options.locale === 'auto' ? undefined : options.locale;\n\n  if (options.ignoreCase) {\n    aProp = aProp.toLowerCase();\n    bProp = bProp.toLowerCase();\n    return aProp.localeCompare(bProp, actualLocale);\n  }\n  if (aProp === bProp) {\n    return 0;\n  }\n  if (options.locale === 'auto') {\n    return aProp < bProp ? -1 : 1;\n  }\n  return aProp.localeCompare(bProp, actualLocale);\n}\n\n/**\n * Create an array of arrays where each subarray is composed of attributes\n * that are considered sortable.\n * @param {Array<JSXSpreadAttribute|JSXAttribute>} attributes\n * @param {Object} context The context of the rule\n * @return {Array<Array<JSXAttribute>>}\n */\nfunction getGroupsOfSortableAttributes(attributes, context) {\n  const sourceCode = getSourceCode(context);\n\n  const sortableAttributeGroups = [];\n  let groupCount = 0;\n  function addtoSortableAttributeGroups(attribute) {\n    sortableAttributeGroups[groupCount - 1].push(attribute);\n  }\n\n  for (let i = 0; i < attributes.length; i++) {\n    const attribute = attributes[i];\n    const nextAttribute = attributes[i + 1];\n    const attributeline = attribute.loc.start.line;\n    let comment = [];\n    try {\n      comment = sourceCode.getCommentsAfter(attribute);\n    } catch (e) { /**/ }\n    const lastAttr = attributes[i - 1];\n    const attrIsSpread = attribute.type === 'JSXSpreadAttribute';\n\n    // If we have no groups or if the last attribute was JSXSpreadAttribute\n    // then we start a new group. Append attributes to the group until we\n    // come across another JSXSpreadAttribute or exhaust the array.\n    if (\n      !lastAttr\n      || (lastAttr.type === 'JSXSpreadAttribute' && !attrIsSpread)\n    ) {\n      groupCount += 1;\n      sortableAttributeGroups[groupCount - 1] = [];\n    }\n    if (!attrIsSpread) {\n      if (comment.length === 0) {\n        attributeMap.set(attribute, { end: attribute.range[1], hasComment: false });\n        addtoSortableAttributeGroups(attribute);\n      } else {\n        const firstComment = comment[0];\n        const commentline = firstComment.loc.start.line;\n        if (comment.length === 1) {\n          if (attributeline + 1 === commentline && nextAttribute) {\n            attributeMap.set(attribute, { end: nextAttribute.range[1], hasComment: true });\n            addtoSortableAttributeGroups(attribute);\n            i += 1;\n          } else if (attributeline === commentline) {\n            if (firstComment.type === 'Block' && nextAttribute) {\n              attributeMap.set(attribute, { end: nextAttribute.range[1], hasComment: true });\n              i += 1;\n            } else if (firstComment.type === 'Block') {\n              attributeMap.set(attribute, { end: firstComment.range[1], hasComment: true });\n            } else {\n              attributeMap.set(attribute, { end: firstComment.range[1], hasComment: false });\n            }\n            addtoSortableAttributeGroups(attribute);\n          }\n        } else if (comment.length > 1 && attributeline + 1 === comment[1].loc.start.line && nextAttribute) {\n          const commentNextAttribute = sourceCode.getCommentsAfter(nextAttribute);\n          attributeMap.set(attribute, { end: nextAttribute.range[1], hasComment: true });\n          if (\n            commentNextAttribute.length === 1\n            && nextAttribute.loc.start.line === commentNextAttribute[0].loc.start.line\n          ) {\n            attributeMap.set(attribute, { end: commentNextAttribute[0].range[1], hasComment: true });\n          }\n          addtoSortableAttributeGroups(attribute);\n          i += 1;\n        }\n      }\n    }\n  }\n  return sortableAttributeGroups;\n}\n\nfunction generateFixerFunction(node, context, reservedList) {\n  const attributes = node.attributes.slice(0);\n  const configuration = context.options[0] || {};\n  const ignoreCase = configuration.ignoreCase || false;\n  const callbacksLast = configuration.callbacksLast || false;\n  const shorthandFirst = configuration.shorthandFirst || false;\n  const shorthandLast = configuration.shorthandLast || false;\n  const multiline = configuration.multiline || 'ignore';\n  const noSortAlphabetically = configuration.noSortAlphabetically || false;\n  const reservedFirst = configuration.reservedFirst || false;\n  const locale = configuration.locale || 'auto';\n\n  // Sort props according to the context. Only supports ignoreCase.\n  // Since we cannot safely move JSXSpreadAttribute (due to potential variable overrides),\n  // we only consider groups of sortable attributes.\n  const options = {\n    ignoreCase,\n    callbacksLast,\n    shorthandFirst,\n    shorthandLast,\n    multiline,\n    noSortAlphabetically,\n    reservedFirst,\n    reservedList,\n    locale,\n  };\n  const sortableAttributeGroups = getGroupsOfSortableAttributes(attributes, context);\n  const sortedAttributeGroups = sortableAttributeGroups\n    .slice(0)\n    .map((group) => toSorted(group, (a, b) => contextCompare(a, b, options)));\n\n  return function fixFunction(fixer) {\n    const fixers = [];\n    let source = getText(context);\n\n    sortableAttributeGroups.forEach((sortableGroup, ii) => {\n      sortableGroup.forEach((attr, jj) => {\n        const sortedAttr = sortedAttributeGroups[ii][jj];\n        const sortedAttrText = source.slice(sortedAttr.range[0], attributeMap.get(sortedAttr).end);\n        fixers.push({\n          range: [attr.range[0], attributeMap.get(attr).end],\n          text: sortedAttrText,\n        });\n      });\n    });\n\n    fixers.sort((a, b) => b.range[0] - a.range[0]);\n\n    const firstFixer = fixers[0];\n    const lastFixer = fixers[fixers.length - 1];\n    const rangeStart = lastFixer ? lastFixer.range[0] : 0;\n    const rangeEnd = firstFixer ? firstFixer.range[1] : -0;\n\n    fixers.forEach((fix) => {\n      source = `${source.slice(0, fix.range[0])}${fix.text}${source.slice(fix.range[1])}`;\n    });\n\n    return fixer.replaceTextRange([rangeStart, rangeEnd], source.slice(rangeStart, rangeEnd));\n  };\n}\n\n/**\n * Checks if the `reservedFirst` option is valid\n * @param {Object} context The context of the rule\n * @param {boolean | string[]} reservedFirst The `reservedFirst` option\n * @return {Function | undefined} If an error is detected, a function to generate the error message, otherwise, `undefined`\n */\n// eslint-disable-next-line consistent-return\nfunction validateReservedFirstConfig(context, reservedFirst) {\n  if (reservedFirst) {\n    if (Array.isArray(reservedFirst)) {\n      // Only allow a subset of reserved words in customized lists\n      const nonReservedWords = reservedFirst.filter((word) => !isReservedPropName(\n        word,\n        RESERVED_PROPS_LIST\n      ));\n\n      if (reservedFirst.length === 0) {\n        return function Report(decl) {\n          report(context, messages.listIsEmpty, 'listIsEmpty', {\n            node: decl,\n          });\n        };\n      }\n      if (nonReservedWords.length > 0) {\n        return function Report(decl) {\n          report(context, messages.noUnreservedProps, 'noUnreservedProps', {\n            node: decl,\n            data: {\n              unreservedWords: nonReservedWords.toString(),\n            },\n          });\n        };\n      }\n    }\n  }\n}\n\nconst reportedNodeAttributes = new WeakMap();\n/**\n * Check if the current node attribute has already been reported with the same error type\n * if that's the case then we don't report a new error\n * otherwise we report the error\n * @param {Object} nodeAttribute The node attribute to be reported\n * @param {string} errorType The error type to be reported\n * @param {Object} node The parent node for the node attribute\n * @param {Object} context The context of the rule\n * @param {Array<String>} reservedList The list of reserved props\n */\nfunction reportNodeAttribute(nodeAttribute, errorType, node, context, reservedList) {\n  const errors = reportedNodeAttributes.get(nodeAttribute) || [];\n\n  if (includes(errors, errorType)) {\n    return;\n  }\n\n  errors.push(errorType);\n\n  reportedNodeAttributes.set(nodeAttribute, errors);\n\n  report(context, messages[errorType], errorType, {\n    node: nodeAttribute.name,\n    fix: generateFixerFunction(node, context, reservedList),\n  });\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce props alphabetical sorting',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-sort-props'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        // Whether callbacks (prefixed with \"on\") should be listed at the very end,\n        // after all other props. Supersedes shorthandLast.\n        callbacksLast: {\n          type: 'boolean',\n        },\n        // Whether shorthand properties (without a value) should be listed first\n        shorthandFirst: {\n          type: 'boolean',\n        },\n        // Whether shorthand properties (without a value) should be listed last\n        shorthandLast: {\n          type: 'boolean',\n        },\n        // Whether multiline properties should be listed first or last\n        multiline: {\n          enum: ['ignore', 'first', 'last'],\n          default: 'ignore',\n        },\n        ignoreCase: {\n          type: 'boolean',\n        },\n        // Whether alphabetical sorting should be enforced\n        noSortAlphabetically: {\n          type: 'boolean',\n        },\n        reservedFirst: {\n          type: ['array', 'boolean'],\n        },\n        locale: {\n          type: 'string',\n          default: 'auto',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const ignoreCase = configuration.ignoreCase || false;\n    const callbacksLast = configuration.callbacksLast || false;\n    const shorthandFirst = configuration.shorthandFirst || false;\n    const shorthandLast = configuration.shorthandLast || false;\n    const multiline = configuration.multiline || 'ignore';\n    const noSortAlphabetically = configuration.noSortAlphabetically || false;\n    const reservedFirst = configuration.reservedFirst || false;\n    const reservedFirstError = validateReservedFirstConfig(context, reservedFirst);\n    const reservedList = Array.isArray(reservedFirst) ? reservedFirst : RESERVED_PROPS_LIST;\n    const locale = configuration.locale || 'auto';\n\n    return {\n      Program() {\n        attributeMap = new WeakMap();\n      },\n\n      JSXOpeningElement(node) {\n        // `dangerouslySetInnerHTML` is only \"reserved\" on DOM components\n        const nodeReservedList = reservedFirst && !jsxUtil.isDOMComponent(node) ? reservedList.filter((prop) => prop !== 'dangerouslySetInnerHTML') : reservedList;\n\n        node.attributes.reduce((memo, decl, idx, attrs) => {\n          if (decl.type === 'JSXSpreadAttribute') {\n            return attrs[idx + 1];\n          }\n\n          let previousPropName = propName(memo);\n          let currentPropName = propName(decl);\n          const previousValue = memo.value;\n          const currentValue = decl.value;\n          const previousIsCallback = propTypesSortUtil.isCallbackPropName(previousPropName);\n          const currentIsCallback = propTypesSortUtil.isCallbackPropName(currentPropName);\n\n          if (ignoreCase) {\n            previousPropName = previousPropName.toLowerCase();\n            currentPropName = currentPropName.toLowerCase();\n          }\n\n          if (reservedFirst) {\n            if (reservedFirstError) {\n              reservedFirstError(decl);\n              return memo;\n            }\n\n            const previousIsReserved = isReservedPropName(previousPropName, nodeReservedList);\n            const currentIsReserved = isReservedPropName(currentPropName, nodeReservedList);\n\n            if (previousIsReserved && !currentIsReserved) {\n              return decl;\n            }\n            if (!previousIsReserved && currentIsReserved) {\n              reportNodeAttribute(decl, 'listReservedPropsFirst', node, context, nodeReservedList);\n\n              return memo;\n            }\n          }\n\n          if (callbacksLast) {\n            if (!previousIsCallback && currentIsCallback) {\n              // Entering the callback prop section\n              return decl;\n            }\n            if (previousIsCallback && !currentIsCallback) {\n              // Encountered a non-callback prop after a callback prop\n              reportNodeAttribute(memo, 'listCallbacksLast', node, context, nodeReservedList);\n\n              return memo;\n            }\n          }\n\n          if (shorthandFirst) {\n            if (currentValue && !previousValue) {\n              return decl;\n            }\n            if (!currentValue && previousValue) {\n              reportNodeAttribute(decl, 'listShorthandFirst', node, context, nodeReservedList);\n\n              return memo;\n            }\n          }\n\n          if (shorthandLast) {\n            if (!currentValue && previousValue) {\n              return decl;\n            }\n            if (currentValue && !previousValue) {\n              reportNodeAttribute(memo, 'listShorthandLast', node, context, nodeReservedList);\n\n              return memo;\n            }\n          }\n\n          const previousIsMultiline = isMultilineProp(memo);\n          const currentIsMultiline = isMultilineProp(decl);\n          if (multiline === 'first') {\n            if (previousIsMultiline && !currentIsMultiline) {\n              // Exiting the multiline prop section\n              return decl;\n            }\n            if (!previousIsMultiline && currentIsMultiline) {\n              // Encountered a non-multiline prop before a multiline prop\n              reportNodeAttribute(decl, 'listMultilineFirst', node, context, nodeReservedList);\n\n              return memo;\n            }\n          } else if (multiline === 'last') {\n            if (!previousIsMultiline && currentIsMultiline) {\n              // Entering the multiline prop section\n              return decl;\n            }\n            if (previousIsMultiline && !currentIsMultiline) {\n              // Encountered a non-multiline prop after a multiline prop\n              reportNodeAttribute(memo, 'listMultilineLast', node, context, nodeReservedList);\n\n              return memo;\n            }\n          }\n\n          if (\n            !noSortAlphabetically\n            && (\n              (ignoreCase || locale !== 'auto')\n                ? previousPropName.localeCompare(currentPropName, locale === 'auto' ? undefined : locale) > 0\n                : previousPropName > currentPropName\n            )\n          ) {\n            reportNodeAttribute(decl, 'sortPropsByAlpha', node, context, nodeReservedList);\n\n            return memo;\n          }\n\n          return decl;\n        }, node.attributes[0]);\n      },\n    };\n  },\n};\n", "'use strict';\n\n/**\n * Find the token before the closing bracket.\n * @param {ASTNode} node - The JSX element node.\n * @returns {Token} The token before the closing bracket.\n */\nfunction getTokenBeforeClosingBracket(node) {\n  const attributes = node.attributes;\n  if (!attributes || attributes.length === 0) {\n    return node.name;\n  }\n  return attributes[attributes.length - 1];\n}\n\nmodule.exports = getTokenBeforeClosingBracket;\n", "/**\n * @fileoverview Validate spacing before closing bracket in JSX.\n * @author ryym\n * @deprecated\n */\n\n'use strict';\n\nconst getTokenBeforeClosingBracket = require('../util/getTokenBeforeClosingBracket');\nconst docsUrl = require('../util/docsUrl');\nconst log = require('../util/log');\nconst report = require('../util/report');\nconst getSourceCode = require('../util/eslint').getSourceCode;\n\nlet isWarnedForDeprecation = false;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noSpaceBeforeClose: 'A space is forbidden before closing bracket',\n  needSpaceBeforeClose: 'A space is required before closing bracket',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    deprecated: true,\n    replacedBy: ['jsx-tag-spacing'],\n    docs: {\n      description: 'Enforce spacing before closing bracket in JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-space-before-closing'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || 'always';\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXOpeningElement(node) {\n        if (!node.selfClosing) {\n          return;\n        }\n\n        const sourceCode = getSourceCode(context);\n\n        const leftToken = getTokenBeforeClosingBracket(node);\n        const closingSlash = /** @type {import(\"eslint\").AST.Token} */ (sourceCode.getTokenAfter(leftToken));\n\n        if (leftToken.loc.end.line !== closingSlash.loc.start.line) {\n          return;\n        }\n\n        if (configuration === 'always' && !sourceCode.isSpaceBetweenTokens(leftToken, closingSlash)) {\n          report(context, messages.needSpaceBeforeClose, 'needSpaceBeforeClose', {\n            loc: closingSlash.loc.start,\n            fix(fixer) {\n              return fixer.insertTextBefore(closingSlash, ' ');\n            },\n          });\n        } else if (configuration === 'never' && sourceCode.isSpaceBetweenTokens(leftToken, closingSlash)) {\n          report(context, messages.noSpaceBeforeClose, 'noSpaceBeforeClose', {\n            loc: closingSlash.loc.start,\n            fix(fixer) {\n              const previousToken = sourceCode.getTokenBefore(closingSlash);\n              return fixer.removeRange([previousToken.range[1], closingSlash.range[0]]);\n            },\n          });\n        }\n      },\n\n      Program() {\n        if (isWarnedForDeprecation) {\n          return;\n        }\n\n        log('The react/jsx-space-before-closing rule is deprecated. '\n            + 'Please use the react/jsx-tag-spacing rule with the '\n            + '\"beforeSelfClosing\" option instead.');\n        isWarnedForDeprecation = true;\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Validates whitespace in and around the JSX opening and closing brackets\n * @author Diogo Franco (Kovensky)\n */\n\n'use strict';\n\nconst getTokenBeforeClosingBracket = require('../util/getTokenBeforeClosingBracket');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst eslintUtil = require('../util/eslint');\n\nconst getFirstTokens = eslintUtil.getFirstTokens;\nconst getSourceCode = eslintUtil.getSourceCode;\n\nconst messages = {\n  selfCloseSlashNoSpace: 'Whitespace is forbidden between `/` and `>`; write `/>`',\n  selfCloseSlashNeedSpace: 'Whitespace is required between `/` and `>`; write `/ >`',\n  closeSlashNoSpace: 'Whitespace is forbidden between `<` and `/`; write `</`',\n  closeSlashNeedSpace: 'Whitespace is required between `<` and `/`; write `< /`',\n  beforeSelfCloseNoSpace: 'A space is forbidden before closing bracket',\n  beforeSelfCloseNeedSpace: 'A space is required before closing bracket',\n  beforeSelfCloseNeedNewline: 'A newline is required before closing bracket',\n  afterOpenNoSpace: 'A space is forbidden after opening bracket',\n  afterOpenNeedSpace: 'A space is required after opening bracket',\n  beforeCloseNoSpace: 'A space is forbidden before closing bracket',\n  beforeCloseNeedSpace: 'Whitespace is required before closing bracket',\n  beforeCloseNeedNewline: 'A newline is required before closing bracket',\n};\n\n// ------------------------------------------------------------------------------\n// Validators\n// ------------------------------------------------------------------------------\n\nfunction validateClosingSlash(context, node, option) {\n  const sourceCode = getSourceCode(context);\n\n  let adjacent;\n\n  if (node.selfClosing) {\n    const lastTokens = sourceCode.getLastTokens(node, 2);\n\n    adjacent = !sourceCode.isSpaceBetweenTokens(lastTokens[0], lastTokens[1]);\n\n    if (option === 'never') {\n      if (!adjacent) {\n        report(context, messages.selfCloseSlashNoSpace, 'selfCloseSlashNoSpace', {\n          node,\n          loc: {\n            start: lastTokens[0].loc.start,\n            end: lastTokens[1].loc.end,\n          },\n          fix(fixer) {\n            return fixer.removeRange([lastTokens[0].range[1], lastTokens[1].range[0]]);\n          },\n        });\n      }\n    } else if (option === 'always' && adjacent) {\n      report(context, messages.selfCloseSlashNeedSpace, 'selfCloseSlashNeedSpace', {\n        node,\n        loc: {\n          start: lastTokens[0].loc.start,\n          end: lastTokens[1].loc.end,\n        },\n        fix(fixer) {\n          return fixer.insertTextBefore(lastTokens[1], ' ');\n        },\n      });\n    }\n  } else {\n    const firstTokens = getFirstTokens(context, node, 2);\n\n    adjacent = !sourceCode.isSpaceBetweenTokens(firstTokens[0], firstTokens[1]);\n\n    if (option === 'never') {\n      if (!adjacent) {\n        report(context, messages.closeSlashNoSpace, 'closeSlashNoSpace', {\n          node,\n          loc: {\n            start: firstTokens[0].loc.start,\n            end: firstTokens[1].loc.end,\n          },\n          fix(fixer) {\n            return fixer.removeRange([firstTokens[0].range[1], firstTokens[1].range[0]]);\n          },\n        });\n      }\n    } else if (option === 'always' && adjacent) {\n      report(context, messages.closeSlashNeedSpace, 'closeSlashNeedSpace', {\n        node,\n        loc: {\n          start: firstTokens[0].loc.start,\n          end: firstTokens[1].loc.end,\n        },\n        fix(fixer) {\n          return fixer.insertTextBefore(firstTokens[1], ' ');\n        },\n      });\n    }\n  }\n}\n\nfunction validateBeforeSelfClosing(context, node, option) {\n  const sourceCode = getSourceCode(context);\n  const leftToken = getTokenBeforeClosingBracket(node);\n  const closingSlash = sourceCode.getTokenAfter(leftToken);\n\n  if (node.loc.start.line !== node.loc.end.line && option === 'proportional-always') {\n    if (leftToken.loc.end.line === closingSlash.loc.start.line) {\n      report(context, messages.beforeSelfCloseNeedNewline, 'beforeSelfCloseNeedNewline', {\n        node,\n        loc: leftToken.loc.end,\n        fix(fixer) {\n          return fixer.insertTextBefore(closingSlash, '\\n');\n        },\n      });\n      return;\n    }\n  }\n\n  if (leftToken.loc.end.line !== closingSlash.loc.start.line) {\n    return;\n  }\n\n  const adjacent = !sourceCode.isSpaceBetweenTokens(leftToken, closingSlash);\n\n  if ((option === 'always' || option === 'proportional-always') && adjacent) {\n    report(context, messages.beforeSelfCloseNeedSpace, 'beforeSelfCloseNeedSpace', {\n      node,\n      loc: closingSlash.loc.start,\n      fix(fixer) {\n        return fixer.insertTextBefore(closingSlash, ' ');\n      },\n    });\n  } else if (option === 'never' && !adjacent) {\n    report(context, messages.beforeSelfCloseNoSpace, 'beforeSelfCloseNoSpace', {\n      node,\n      loc: closingSlash.loc.start,\n      fix(fixer) {\n        const previousToken = sourceCode.getTokenBefore(closingSlash);\n        return fixer.removeRange([previousToken.range[1], closingSlash.range[0]]);\n      },\n    });\n  }\n}\n\nfunction validateAfterOpening(context, node, option) {\n  const sourceCode = getSourceCode(context);\n  const openingToken = sourceCode.getTokenBefore(node.name);\n\n  if (option === 'allow-multiline') {\n    if (openingToken.loc.start.line !== node.name.loc.start.line) {\n      return;\n    }\n  }\n\n  const adjacent = !sourceCode.isSpaceBetweenTokens(openingToken, node.name);\n\n  if (option === 'never' || option === 'allow-multiline') {\n    if (!adjacent) {\n      report(context, messages.afterOpenNoSpace, 'afterOpenNoSpace', {\n        node,\n        loc: {\n          start: openingToken.loc.start,\n          end: node.name.loc.start,\n        },\n        fix(fixer) {\n          return fixer.removeRange([openingToken.range[1], node.name.range[0]]);\n        },\n      });\n    }\n  } else if (option === 'always' && adjacent) {\n    report(context, messages.afterOpenNeedSpace, 'afterOpenNeedSpace', {\n      node,\n      loc: {\n        start: openingToken.loc.start,\n        end: node.name.loc.start,\n      },\n      fix(fixer) {\n        return fixer.insertTextBefore(node.name, ' ');\n      },\n    });\n  }\n}\n\nfunction validateBeforeClosing(context, node, option) {\n  // Don't enforce this rule for self closing tags\n  if (!node.selfClosing) {\n    const sourceCode = getSourceCode(context);\n    const leftToken = option === 'proportional-always'\n      ? getTokenBeforeClosingBracket(node)\n      : sourceCode.getLastTokens(node, 2)[0];\n    const closingToken = sourceCode.getTokenAfter(leftToken);\n\n    if (node.loc.start.line !== node.loc.end.line && option === 'proportional-always') {\n      if (leftToken.loc.end.line === closingToken.loc.start.line) {\n        report(context, messages.beforeCloseNeedNewline, 'beforeCloseNeedNewline', {\n          node,\n          loc: leftToken.loc.end,\n          fix(fixer) {\n            return fixer.insertTextBefore(closingToken, '\\n');\n          },\n        });\n        return;\n      }\n    }\n\n    if (leftToken.loc.start.line !== closingToken.loc.start.line) {\n      return;\n    }\n\n    const adjacent = !sourceCode.isSpaceBetweenTokens(leftToken, closingToken);\n\n    if (option === 'never' && !adjacent) {\n      report(context, messages.beforeCloseNoSpace, 'beforeCloseNoSpace', {\n        node,\n        loc: {\n          start: leftToken.loc.end,\n          end: closingToken.loc.start,\n        },\n        fix(fixer) {\n          return fixer.removeRange([leftToken.range[1], closingToken.range[0]]);\n        },\n      });\n    } else if (option === 'always' && adjacent) {\n      report(context, messages.beforeCloseNeedSpace, 'beforeCloseNeedSpace', {\n        node,\n        loc: {\n          start: leftToken.loc.end,\n          end: closingToken.loc.start,\n        },\n        fix(fixer) {\n          return fixer.insertTextBefore(closingToken, ' ');\n        },\n      });\n    } else if (option === 'proportional-always' && node.type === 'JSXOpeningElement' && adjacent !== (node.loc.start.line === node.loc.end.line)) {\n      report(context, messages.beforeCloseNeedSpace, 'beforeCloseNeedSpace', {\n        node,\n        loc: {\n          start: leftToken.loc.end,\n          end: closingToken.loc.start,\n        },\n        fix(fixer) {\n          return fixer.insertTextBefore(closingToken, ' ');\n        },\n      });\n    }\n  }\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst optionDefaults = {\n  closingSlash: 'never',\n  beforeSelfClosing: 'always',\n  afterOpening: 'never',\n  beforeClosing: 'allow',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce whitespace in and around the JSX opening and closing brackets',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-tag-spacing'),\n    },\n    fixable: 'whitespace',\n\n    messages,\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          closingSlash: {\n            enum: ['always', 'never', 'allow'],\n          },\n          beforeSelfClosing: {\n            enum: ['always', 'proportional-always', 'never', 'allow'],\n          },\n          afterOpening: {\n            enum: ['always', 'allow-multiline', 'never', 'allow'],\n          },\n          beforeClosing: {\n            enum: ['always', 'proportional-always', 'never', 'allow'],\n          },\n        },\n        default: optionDefaults,\n        additionalProperties: false,\n      },\n    ],\n  },\n  create(context) {\n    const options = Object.assign({}, optionDefaults, context.options[0]);\n\n    return {\n      JSXOpeningElement(node) {\n        if (options.closingSlash !== 'allow' && node.selfClosing) {\n          validateClosingSlash(context, node, options.closingSlash);\n        }\n        if (options.afterOpening !== 'allow') {\n          validateAfterOpening(context, node, options.afterOpening);\n        }\n        if (options.beforeSelfClosing !== 'allow' && node.selfClosing) {\n          validateBeforeSelfClosing(context, node, options.beforeSelfClosing);\n        }\n        if (options.beforeClosing !== 'allow') {\n          validateBeforeClosing(context, node, options.beforeClosing);\n        }\n      },\n      JSXClosingElement(node) {\n        if (options.afterOpening !== 'allow') {\n          validateAfterOpening(context, node, options.afterOpening);\n        }\n        if (options.closingSlash !== 'allow') {\n          validateClosingSlash(context, node, options.closingSlash);\n        }\n        if (options.beforeClosing !== 'allow') {\n          validateBeforeClosing(context, node, options.beforeClosing);\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent React to be marked as unused\n * @author Glen Mailer\n */\n\n'use strict';\n\nconst pragmaUtil = require('../util/pragma');\nconst docsUrl = require('../util/docsUrl');\nconst markVariableAsUsed = require('../util/eslint').markVariableAsUsed;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  // eslint-disable-next-line eslint-plugin/prefer-message-ids -- https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/issues/292\n  meta: {\n    docs: {\n      description: 'Disallow React to be incorrectly marked as unused',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('jsx-uses-react'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    const pragma = pragmaUtil.getFromContext(context);\n    const fragment = pragmaUtil.getFragmentFromContext(context);\n\n    /**\n     * @param {ASTNode} node\n     * @returns {void}\n     */\n    function handleOpeningElement(node) {\n      markVariableAsUsed(pragma, node, context);\n    }\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      JSXOpeningElement: handleOpeningElement,\n      JSXOpeningFragment: handleOpeningElement,\n      JSXFragment(node) {\n        markVariableAsUsed(fragment, node, context);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent variables used in JSX to be marked as unused\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst markVariableAsUsed = require('../util/eslint').markVariableAsUsed;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst isTagNameRe = /^[a-z]/;\nconst isTagName = (name) => isTagNameRe.test(name);\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  // eslint-disable-next-line eslint-plugin/prefer-message-ids -- https://github.com/not-an-aardvark/eslint-plugin-eslint-plugin/issues/292\n  meta: {\n    docs: {\n      description: 'Disallow variables used in JSX to be incorrectly marked as unused',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('jsx-uses-vars'),\n    },\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      JSXOpeningElement(node) {\n        let name;\n        if (node.name.namespace) {\n          // <Foo:Bar>\n          return;\n        }\n        if (node.name.name) {\n          // <Foo>\n          name = node.name.name;\n          // Exclude lowercase tag names like <div>\n          if (isTagName(name)) {\n            return;\n          }\n        } else if (node.name.object) {\n          // <Foo...Bar>\n          let parent = node.name.object;\n          while (parent.object) {\n            parent = parent.object;\n          }\n          name = parent.name;\n        } else {\n          return;\n        }\n\n        markVariableAsUsed(name, node, context);\n      },\n\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent missing parentheses around multilines JSX\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst docsUrl = require('../util/docsUrl');\nconst eslintUtil = require('../util/eslint');\nconst jsxUtil = require('../util/jsx');\nconst reportC = require('../util/report');\nconst isParenthesized = require('../util/ast').isParenthesized;\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DEFAULTS = {\n  declaration: 'parens',\n  assignment: 'parens',\n  return: 'parens',\n  arrow: 'parens',\n  condition: 'ignore',\n  logical: 'ignore',\n  prop: 'ignore',\n};\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  missingParens: 'Missing parentheses around multilines JSX',\n  extraParens: 'Expected no parentheses around multilines JSX',\n  parensOnNewLines: 'Parentheses around JSX should be on separate lines',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow missing parentheses around multiline JSX',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('jsx-wrap-multilines'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      // true/false are for backwards compatibility\n      properties: {\n        declaration: {\n          enum: [true, false, 'ignore', 'parens', 'parens-new-line', 'never'],\n        },\n        assignment: {\n          enum: [true, false, 'ignore', 'parens', 'parens-new-line', 'never'],\n        },\n        return: {\n          enum: [true, false, 'ignore', 'parens', 'parens-new-line', 'never'],\n        },\n        arrow: {\n          enum: [true, false, 'ignore', 'parens', 'parens-new-line', 'never'],\n        },\n        condition: {\n          enum: [true, false, 'ignore', 'parens', 'parens-new-line', 'never'],\n        },\n        logical: {\n          enum: [true, false, 'ignore', 'parens', 'parens-new-line', 'never'],\n        },\n        prop: {\n          enum: [true, false, 'ignore', 'parens', 'parens-new-line', 'never'],\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    function getOption(type) {\n      const userOptions = context.options[0] || {};\n      if (has(userOptions, type)) {\n        return userOptions[type];\n      }\n      return DEFAULTS[type];\n    }\n\n    function isEnabled(type) {\n      const option = getOption(type);\n      return option && option !== 'ignore';\n    }\n\n    function needsOpeningNewLine(node) {\n      const previousToken = getSourceCode(context).getTokenBefore(node);\n\n      if (!isParenthesized(context, node)) {\n        return false;\n      }\n\n      if (previousToken.loc.end.line === node.loc.start.line) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function needsClosingNewLine(node) {\n      const nextToken = getSourceCode(context).getTokenAfter(node);\n\n      if (!isParenthesized(context, node)) {\n        return false;\n      }\n\n      if (node.loc.end.line === nextToken.loc.end.line) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function isMultilines(node) {\n      return node.loc.start.line !== node.loc.end.line;\n    }\n\n    function report(node, messageId, fix) {\n      reportC(context, messages[messageId], messageId, {\n        node,\n        fix,\n      });\n    }\n\n    function trimTokenBeforeNewline(node, tokenBefore) {\n      // if the token before the jsx is a bracket or curly brace\n      // we don't want a space between the opening parentheses and the multiline jsx\n      const isBracket = tokenBefore.value === '{' || tokenBefore.value === '[';\n      return `${tokenBefore.value.trim()}${isBracket ? '' : ' '}`;\n    }\n\n    function check(node, type) {\n      if (!node || !jsxUtil.isJSX(node)) {\n        return;\n      }\n\n      const sourceCode = getSourceCode(context);\n      const option = getOption(type);\n\n      if ((option === true || option === 'parens') && !isParenthesized(context, node) && isMultilines(node)) {\n        report(node, 'missingParens', (fixer) => fixer.replaceText(node, `(${getText(context, node)})`));\n      }\n\n      if (option === 'parens-new-line' && isMultilines(node)) {\n        if (!isParenthesized(context, node)) {\n          const tokenBefore = sourceCode.getTokenBefore(node, { includeComments: true });\n          const tokenAfter = sourceCode.getTokenAfter(node, { includeComments: true });\n          const start = node.loc.start;\n          if (tokenBefore.loc.end.line < start.line) {\n            // Strip newline after operator if parens newline is specified\n            report(\n              node,\n              'missingParens',\n              (fixer) => fixer.replaceTextRange(\n                [tokenBefore.range[0], tokenAfter && (tokenAfter.value === ';' || tokenAfter.value === '}') ? tokenAfter.range[0] : node.range[1]],\n                `${trimTokenBeforeNewline(node, tokenBefore)}(\\n${start.column > 0 ? ' '.repeat(start.column) : ''}${getText(context, node)}\\n${start.column > 0 ? ' '.repeat(start.column - 2) : ''})`\n              )\n            );\n          } else {\n            report(node, 'missingParens', (fixer) => fixer.replaceText(node, `(\\n${getText(context, node)}\\n)`));\n          }\n        } else {\n          const needsOpening = needsOpeningNewLine(node);\n          const needsClosing = needsClosingNewLine(node);\n          if (needsOpening || needsClosing) {\n            report(node, 'parensOnNewLines', (fixer) => {\n              const text = getText(context, node);\n              let fixed = text;\n              if (needsOpening) {\n                fixed = `\\n${fixed}`;\n              }\n              if (needsClosing) {\n                fixed = `${fixed}\\n`;\n              }\n              return fixer.replaceText(node, fixed);\n            });\n          }\n        }\n      }\n\n      if (option === 'never' && isParenthesized(context, node)) {\n        const tokenBefore = sourceCode.getTokenBefore(node);\n        const tokenAfter = sourceCode.getTokenAfter(node);\n        report(node, 'extraParens', (fixer) => fixer.replaceTextRange(\n          [tokenBefore.range[0], tokenAfter.range[1]],\n          getText(context, node)\n        ));\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n\n      VariableDeclarator(node) {\n        const type = 'declaration';\n        if (!isEnabled(type)) {\n          return;\n        }\n        if (!isEnabled('condition') && node.init && node.init.type === 'ConditionalExpression') {\n          check(node.init.consequent, type);\n          check(node.init.alternate, type);\n          return;\n        }\n        check(node.init, type);\n      },\n\n      AssignmentExpression(node) {\n        const type = 'assignment';\n        if (!isEnabled(type)) {\n          return;\n        }\n        if (!isEnabled('condition') && node.right.type === 'ConditionalExpression') {\n          check(node.right.consequent, type);\n          check(node.right.alternate, type);\n          return;\n        }\n        check(node.right, type);\n      },\n\n      ReturnStatement(node) {\n        const type = 'return';\n        if (isEnabled(type)) {\n          check(node.argument, type);\n        }\n      },\n\n      'ArrowFunctionExpression:exit': (node) => {\n        const arrowBody = node.body;\n        const type = 'arrow';\n\n        if (isEnabled(type) && arrowBody.type !== 'BlockStatement') {\n          check(arrowBody, type);\n        }\n      },\n\n      ConditionalExpression(node) {\n        const type = 'condition';\n        if (isEnabled(type)) {\n          check(node.consequent, type);\n          check(node.alternate, type);\n        }\n      },\n\n      LogicalExpression(node) {\n        const type = 'logical';\n        if (isEnabled(type)) {\n          check(node.right, type);\n        }\n      },\n\n      JSXAttribute(node) {\n        const type = 'prop';\n        if (isEnabled(type) && node.value && node.value.type === 'JSXExpressionContainer') {\n          check(node.value.expression, type);\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Check if tag attributes to have non-valid value\n * @author Sebastian Malton\n */\n\n'use strict';\n\nconst matchAll = require('string.prototype.matchall');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst rel = new Map([\n  ['alternate', new Set(['link', 'area', 'a'])],\n  ['apple-touch-icon', new Set(['link'])],\n  ['apple-touch-startup-image', new Set(['link'])],\n  ['author', new Set(['link', 'area', 'a'])],\n  ['bookmark', new Set(['area', 'a'])],\n  ['canonical', new Set(['link'])],\n  ['dns-prefetch', new Set(['link'])],\n  ['external', new Set(['area', 'a', 'form'])],\n  ['help', new Set(['link', 'area', 'a', 'form'])],\n  ['icon', new Set(['link'])],\n  ['license', new Set(['link', 'area', 'a', 'form'])],\n  ['manifest', new Set(['link'])],\n  ['mask-icon', new Set(['link'])],\n  ['modulepreload', new Set(['link'])],\n  ['next', new Set(['link', 'area', 'a', 'form'])],\n  ['nofollow', new Set(['area', 'a', 'form'])],\n  ['noopener', new Set(['area', 'a', 'form'])],\n  ['noreferrer', new Set(['area', 'a', 'form'])],\n  ['opener', new Set(['area', 'a', 'form'])],\n  ['pingback', new Set(['link'])],\n  ['preconnect', new Set(['link'])],\n  ['prefetch', new Set(['link'])],\n  ['preload', new Set(['link'])],\n  ['prerender', new Set(['link'])],\n  ['prev', new Set(['link', 'area', 'a', 'form'])],\n  ['search', new Set(['link', 'area', 'a', 'form'])],\n  ['shortcut', new Set(['link'])], // generally allowed but needs pair with \"icon\"\n  ['shortcut\\u0020icon', new Set(['link'])],\n  ['stylesheet', new Set(['link'])],\n  ['tag', new Set(['area', 'a'])],\n]);\n\nconst pairs = new Map([\n  ['shortcut', new Set(['icon'])],\n]);\n\n/**\n * Map between attributes and a mapping between valid values and a set of tags they are valid on\n * @type {Map<string, Map<string, Set<string>>>}\n */\nconst VALID_VALUES = new Map([\n  ['rel', rel],\n]);\n\n/**\n * Map between attributes and a mapping between pair-values and a set of values they are valid with\n * @type {Map<string, Map<string, Set<string>>>}\n */\nconst VALID_PAIR_VALUES = new Map([\n  ['rel', pairs],\n]);\n\n/**\n * The set of all possible HTML elements. Used for skipping custom types\n * @type {Set<string>}\n */\nconst HTML_ELEMENTS = new Set([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'applet',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'basefont',\n  'bdi',\n  'bdo',\n  'bgsound',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'image',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'math',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'nobr',\n  'noembed',\n  'noframes',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'plaintext',\n  'portal',\n  'pre',\n  'progress',\n  'q',\n  'rb',\n  'rp',\n  'rt',\n  'rtc',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'shadow',\n  'slot',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'svg',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  'xmp',\n]);\n\n/**\n* Map between attributes and set of tags that the attribute is valid on\n* @type {Map<string, Set<string>>}\n*/\nconst COMPONENT_ATTRIBUTE_MAP = new Map([\n  ['rel', new Set(['link', 'a', 'area', 'form'])],\n]);\n\n/* eslint-disable eslint-plugin/no-unused-message-ids -- false positives, these messageIds are used */\nconst messages = {\n  emptyIsMeaningless: 'An empty “{{attributeName}}” attribute is meaningless.',\n  neverValid: '“{{reportingValue}}” is never a valid “{{attributeName}}” attribute value.',\n  noEmpty: 'An empty “{{attributeName}}” attribute is meaningless.',\n  noMethod: 'The ”{{attributeName}}“ attribute cannot be a method.',\n  notAlone: '“{{reportingValue}}” must be directly followed by “{{missingValue}}”.',\n  notPaired: '“{{reportingValue}}” can not be directly followed by “{{secondValue}}” without “{{missingValue}}”.',\n  notValidFor: '“{{reportingValue}}” is not a valid “{{attributeName}}” attribute value for <{{elementName}}>.',\n  onlyMeaningfulFor: 'The ”{{attributeName}}“ attribute only has meaning on the tags: {{tagNames}}',\n  onlyStrings: '“{{attributeName}}” attribute only supports strings.',\n  spaceDelimited: '”{{attributeName}}“ attribute values should be space delimited.',\n  suggestRemoveDefault: '\"remove {{attributeName}}\"',\n  suggestRemoveEmpty: '\"remove empty attribute {{attributeName}}\"',\n  suggestRemoveInvalid: '“remove invalid attribute {{reportingValue}}”',\n  suggestRemoveWhitespaces: 'remove whitespaces in “{{attributeName}}”',\n  suggestRemoveNonString: 'remove non-string value in “{{attributeName}}”',\n};\n\nfunction splitIntoRangedParts(node, regex) {\n  const valueRangeStart = node.range[0] + 1; // the plus one is for the initial quote\n\n  return Array.from(matchAll(node.value, regex), (match) => {\n    const start = match.index + valueRangeStart;\n    const end = start + match[0].length;\n\n    return {\n      reportingValue: `${match[1]}`,\n      value: match[1],\n      range: [start, end],\n    };\n  });\n}\n\nfunction checkLiteralValueNode(context, attributeName, node, parentNode, parentNodeName) {\n  if (typeof node.value !== 'string') {\n    const data = { attributeName, reportingValue: node.value };\n\n    report(context, messages.onlyStrings, 'onlyStrings', {\n      node,\n      data,\n      suggest: [{\n        messageId: 'suggestRemoveNonString',\n        data,\n        fix(fixer) { return fixer.remove(parentNode); },\n      }],\n    });\n    return;\n  }\n\n  if (!node.value.trim()) {\n    const data = { attributeName, reportingValue: node.value };\n\n    report(context, messages.noEmpty, 'noEmpty', {\n      node,\n      data,\n      suggest: [{\n        messageId: 'suggestRemoveEmpty',\n        data,\n        fix(fixer) { return fixer.remove(node.parent); },\n      }],\n    });\n    return;\n  }\n\n  const singleAttributeParts = splitIntoRangedParts(node, /(\\S+)/g);\n  singleAttributeParts.forEach((singlePart) => {\n    const allowedTags = VALID_VALUES.get(attributeName).get(singlePart.value);\n    const reportingValue = singlePart.reportingValue;\n\n    if (!allowedTags) {\n      const data = {\n        attributeName,\n        reportingValue,\n      };\n\n      const suggest = [{\n        messageId: 'suggestRemoveInvalid',\n        data,\n        fix(fixer) { return fixer.removeRange(singlePart.range); },\n      }];\n\n      report(context, messages.neverValid, 'neverValid', {\n        node,\n        data,\n        suggest,\n      });\n    } else if (!allowedTags.has(parentNodeName)) {\n      const data = {\n        attributeName,\n        reportingValue,\n        elementName: parentNodeName,\n      };\n\n      const suggest = [{\n        messageId: 'suggestRemoveInvalid',\n        data,\n        fix(fixer) { return fixer.removeRange(singlePart.range); },\n      }];\n\n      report(context, messages.notValidFor, 'notValidFor', {\n        node,\n        data,\n        suggest,\n      });\n    }\n  });\n\n  const allowedPairsForAttribute = VALID_PAIR_VALUES.get(attributeName);\n  if (allowedPairsForAttribute) {\n    const pairAttributeParts = splitIntoRangedParts(node, /(?=(\\b\\S+\\s*\\S+))/g);\n    pairAttributeParts.forEach((pairPart) => {\n      allowedPairsForAttribute.forEach((siblings, pairing) => {\n        const attributes = pairPart.reportingValue.split('\\u0020');\n        const firstValue = attributes[0];\n        const secondValue = attributes[1];\n        if (firstValue === pairing) {\n          const lastValue = attributes[attributes.length - 1]; // in case of multiple white spaces\n          if (!siblings.has(lastValue)) {\n            const message = secondValue ? messages.notPaired : messages.notAlone;\n            const messageId = secondValue ? 'notPaired' : 'notAlone';\n            report(context, message, messageId, {\n              node,\n              data: {\n                reportingValue: firstValue,\n                secondValue,\n                missingValue: Array.from(siblings).join(', '),\n              },\n              suggest: false,\n            });\n          }\n        }\n      });\n    });\n  }\n\n  const whitespaceParts = splitIntoRangedParts(node, /(\\s+)/g);\n  whitespaceParts.forEach((whitespacePart) => {\n    const data = { attributeName };\n\n    if (whitespacePart.range[0] === (node.range[0] + 1) || whitespacePart.range[1] === (node.range[1] - 1)) {\n      report(context, messages.spaceDelimited, 'spaceDelimited', {\n        node,\n        data,\n        suggest: [{\n          messageId: 'suggestRemoveWhitespaces',\n          data,\n          fix(fixer) { return fixer.removeRange(whitespacePart.range); },\n        }],\n      });\n    } else if (whitespacePart.value !== '\\u0020') {\n      report(context, messages.spaceDelimited, 'spaceDelimited', {\n        node,\n        data,\n        suggest: [{\n          messageId: 'suggestRemoveWhitespaces',\n          data,\n          fix(fixer) { return fixer.replaceTextRange(whitespacePart.range, '\\u0020'); },\n        }],\n      });\n    }\n  });\n}\n\nconst DEFAULT_ATTRIBUTES = ['rel'];\n\nfunction checkAttribute(context, node) {\n  const attribute = node.name.name;\n\n  const parentNodeName = node.parent.name.name;\n  if (!COMPONENT_ATTRIBUTE_MAP.has(attribute) || !COMPONENT_ATTRIBUTE_MAP.get(attribute).has(parentNodeName)) {\n    const tagNames = Array.from(\n      COMPONENT_ATTRIBUTE_MAP.get(attribute).values(),\n      (tagName) => `\"<${tagName}>\"`\n    ).join(', ');\n    const data = {\n      attributeName: attribute,\n      tagNames,\n    };\n\n    report(context, messages.onlyMeaningfulFor, 'onlyMeaningfulFor', {\n      node: node.name,\n      data,\n      suggest: [{\n        messageId: 'suggestRemoveDefault',\n        data,\n        fix(fixer) { return fixer.remove(node); },\n      }],\n    });\n    return;\n  }\n\n  function fix(fixer) { return fixer.remove(node); }\n\n  if (!node.value) {\n    const data = { attributeName: attribute };\n\n    report(context, messages.emptyIsMeaningless, 'emptyIsMeaningless', {\n      node: node.name,\n      data,\n      suggest: [{\n        messageId: 'suggestRemoveEmpty',\n        data,\n        fix,\n      }],\n    });\n    return;\n  }\n\n  if (node.value.type === 'Literal') {\n    return checkLiteralValueNode(context, attribute, node.value, node, parentNodeName);\n  }\n\n  if (node.value.expression.type === 'Literal') {\n    return checkLiteralValueNode(context, attribute, node.value.expression, node, parentNodeName);\n  }\n\n  if (node.value.type !== 'JSXExpressionContainer') {\n    return;\n  }\n\n  if (node.value.expression.type === 'ObjectExpression') {\n    const data = { attributeName: attribute };\n\n    report(context, messages.onlyStrings, 'onlyStrings', {\n      node: node.value,\n      data,\n      suggest: [{\n        messageId: 'suggestRemoveDefault',\n        data,\n        fix,\n      }],\n    });\n  } else if (node.value.expression.type === 'Identifier' && node.value.expression.name === 'undefined') {\n    const data = { attributeName: attribute };\n\n    report(context, messages.onlyStrings, 'onlyStrings', {\n      node: node.value,\n      data,\n      suggest: [{\n        messageId: 'suggestRemoveDefault',\n        data,\n        fix,\n      }],\n    });\n  }\n}\n\nfunction isValidCreateElement(node) {\n  return node.callee\n    && node.callee.type === 'MemberExpression'\n    && node.callee.object.name === 'React'\n    && node.callee.property.name === 'createElement'\n    && node.arguments.length > 0;\n}\n\nfunction checkPropValidValue(context, node, value, attribute) {\n  const validTags = VALID_VALUES.get(attribute);\n\n  if (value.type !== 'Literal') {\n    return; // cannot check non-literals\n  }\n\n  const validTagSet = validTags.get(value.value);\n  if (!validTagSet) {\n    const data = {\n      attributeName: attribute,\n      reportingValue: value.value,\n    };\n\n    report(context, messages.neverValid, 'neverValid', {\n      node: value,\n      data,\n      suggest: [{\n        messageId: 'suggestRemoveInvalid',\n        data,\n        fix(fixer) { return fixer.replaceText(value, value.raw.replace(value.value, '')); },\n      }],\n    });\n  } else if (!validTagSet.has(node.arguments[0].value)) {\n    report(context, messages.notValidFor, 'notValidFor', {\n      node: value,\n      data: {\n        attributeName: attribute,\n        reportingValue: value.raw,\n        elementName: node.arguments[0].value,\n      },\n      suggest: false,\n    });\n  }\n}\n\n/**\n *\n * @param {*} context\n * @param {*} node\n * @param {string} attribute\n */\nfunction checkCreateProps(context, node, attribute) {\n  const propsArg = node.arguments[1];\n\n  if (!propsArg || propsArg.type !== 'ObjectExpression') {\n    return; // can't check variables, computed, or shorthands\n  }\n\n  for (const prop of propsArg.properties) {\n    if (!prop.key || prop.key.type !== 'Identifier') {\n      // eslint-disable-next-line no-continue\n      continue; // cannot check computed keys\n    }\n\n    if (prop.key.name !== attribute) {\n      // eslint-disable-next-line no-continue\n      continue; // ignore not this attribute\n    }\n\n    if (!COMPONENT_ATTRIBUTE_MAP.get(attribute).has(node.arguments[0].value)) {\n      const tagNames = Array.from(\n        COMPONENT_ATTRIBUTE_MAP.get(attribute).values(),\n        (tagName) => `\"<${tagName}>\"`\n      ).join(', ');\n\n      report(context, messages.onlyMeaningfulFor, 'onlyMeaningfulFor', {\n        node: prop.key,\n        data: {\n          attributeName: attribute,\n          tagNames,\n        },\n        suggest: false,\n      });\n\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (prop.method) {\n      report(context, messages.noMethod, 'noMethod', {\n        node: prop,\n        data: {\n          attributeName: attribute,\n        },\n        suggest: false,\n      });\n\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (prop.shorthand || prop.computed) {\n      // eslint-disable-next-line no-continue\n      continue; // cannot check these\n    }\n\n    if (prop.value.type === 'ArrayExpression') {\n      prop.value.elements.forEach((value) => {\n        checkPropValidValue(context, node, value, attribute);\n      });\n\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    checkPropValidValue(context, node, prop.value, attribute);\n  }\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of invalid attributes',\n      category: 'Possible Errors',\n      url: docsUrl('no-invalid-html-attribute'),\n    },\n    messages,\n    schema: [{\n      type: 'array',\n      uniqueItems: true,\n      items: {\n        enum: ['rel'],\n      },\n    }],\n    type: 'suggestion',\n    hasSuggestions: true, // eslint-disable-line eslint-plugin/require-meta-has-suggestions\n  },\n\n  create(context) {\n    return {\n      JSXAttribute(node) {\n        const attributes = new Set(context.options[0] || DEFAULT_ATTRIBUTES);\n\n        // ignore attributes that aren't configured to be checked\n        if (!attributes.has(node.name.name)) {\n          return;\n        }\n\n        // ignore non-HTML elements\n        if (!HTML_ELEMENTS.has(node.parent.name.name)) {\n          return;\n        }\n\n        checkAttribute(context, node);\n      },\n\n      CallExpression(node) {\n        if (!isValidCreateElement(node)) {\n          return;\n        }\n\n        const elemNameArg = node.arguments[0];\n\n        if (!elemNameArg || elemNameArg.type !== 'Literal') {\n          return; // can only check literals\n        }\n\n        // ignore non-HTML elements\n        if (typeof elemNameArg.value === 'string' && !HTML_ELEMENTS.has(elemNameArg.value)) {\n          return;\n        }\n\n        const attributes = new Set(context.options[0] || DEFAULT_ATTRIBUTES);\n\n        attributes.forEach((attribute) => {\n          checkCreateProps(context, node, attribute);\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of this.state within setState\n * @author Rolf Erik Lekang, Jørgen Aaberg\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst report = require('../util/report');\nconst getScope = require('../util/eslint').getScope;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  useCallback: 'Use callback in setState when referencing the previous state.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow when this.state is accessed within setState',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-access-state-in-setstate'),\n    },\n\n    messages,\n  },\n\n  create(context) {\n    function isSetStateCall(node) {\n      return astUtil.isCallExpression(node)\n        && node.callee.property\n        && node.callee.property.name === 'setState'\n        && node.callee.object.type === 'ThisExpression';\n    }\n\n    function isFirstArgumentInSetStateCall(current, node) {\n      if (!isSetStateCall(current)) {\n        return false;\n      }\n      while (node && node.parent !== current) {\n        node = node.parent;\n      }\n      return current.arguments[0] === node;\n    }\n\n    /**\n     * @param {ASTNode} node\n     * @returns {boolean}\n     */\n    function isClassComponent(node) {\n      return !!(\n        componentUtil.getParentES6Component(context, node)\n        || componentUtil.getParentES5Component(context, node)\n      );\n    }\n\n    // The methods array contains all methods or functions that are using this.state\n    // or that are calling another method or function using this.state\n    const methods = [];\n    // The vars array contains all variables that contains this.state\n    const vars = [];\n    return {\n      CallExpression(node) {\n        if (!isClassComponent(node)) {\n          return;\n        }\n        // Appends all the methods that are calling another\n        // method containing this.state to the methods array\n        methods.forEach((method) => {\n          if ('name' in node.callee && node.callee.name === method.methodName) {\n            let current = node.parent;\n            while (current.type !== 'Program') {\n              if (current.type === 'MethodDefinition') {\n                methods.push({\n                  methodName: 'name' in current.key ? current.key.name : undefined,\n                  node: method.node,\n                });\n                break;\n              }\n              current = current.parent;\n            }\n          }\n        });\n\n        // Finding all CallExpressions that is inside a setState\n        // to further check if they contains this.state\n        let current = node.parent;\n        while (current.type !== 'Program') {\n          if (isFirstArgumentInSetStateCall(current, node)) {\n            const methodName = 'name' in node.callee ? node.callee.name : undefined;\n            methods.forEach((method) => {\n              if (method.methodName === methodName) {\n                report(context, messages.useCallback, 'useCallback', {\n                  node: method.node,\n                });\n              }\n            });\n\n            break;\n          }\n          current = current.parent;\n        }\n      },\n\n      MemberExpression(node) {\n        if (\n          'name' in node.property\n          && node.property.name === 'state'\n          && node.object.type === 'ThisExpression'\n          && isClassComponent(node)\n        ) {\n          /** @type {import(\"eslint\").Rule.Node} */\n          let current = node;\n          while (current.type !== 'Program') {\n            // Reporting if this.state is directly within this.setState\n            if (isFirstArgumentInSetStateCall(current, node)) {\n              report(context, messages.useCallback, 'useCallback', {\n                node,\n              });\n              break;\n            }\n\n            // Storing all functions and methods that contains this.state\n            if (current.type === 'MethodDefinition') {\n              methods.push({\n                methodName: 'name' in current.key ? current.key.name : undefined,\n                node,\n              });\n              break;\n            } else if (\n              current.type === 'FunctionExpression'\n              && 'key' in current.parent\n              && current.parent.key\n            ) {\n              methods.push({\n                methodName: 'name' in current.parent.key ? current.parent.key.name : undefined,\n                node,\n              });\n              break;\n            }\n\n            // Storing all variables containing this.state\n            if (current.type === 'VariableDeclarator') {\n              vars.push({\n                node,\n                scope: getScope(context, node),\n                variableName: 'name' in current.id ? current.id.name : undefined,\n              });\n              break;\n            }\n\n            current = current.parent;\n          }\n        }\n      },\n\n      Identifier(node) {\n        // Checks if the identifier is a variable within an object\n        /** @type {import(\"eslint\").Rule.Node} */\n        let current = node;\n        while (current.parent.type === 'BinaryExpression') {\n          current = current.parent;\n        }\n        if (\n          ('value' in current.parent && current.parent.value === current)\n          || ('object' in current.parent && current.parent.object === current)\n        ) {\n          while (current.type !== 'Program') {\n            if (isFirstArgumentInSetStateCall(current, node)) {\n              vars\n                .filter((v) => v.scope === getScope(context, node) && v.variableName === node.name)\n                .forEach((v) => {\n                  report(context, messages.useCallback, 'useCallback', {\n                    node: v.node,\n                  });\n                });\n            }\n            current = current.parent;\n          }\n        }\n      },\n\n      ObjectPattern(node) {\n        const isDerivedFromThis = 'init' in node.parent && node.parent.init && node.parent.init.type === 'ThisExpression';\n        node.properties.forEach((property) => {\n          if (\n            property\n            && 'key' in property\n            && property.key\n            && 'name' in property.key\n            && property.key.name === 'state'\n            && isDerivedFromThis\n          ) {\n            vars.push({\n              node: property.key,\n              scope: getScope(context, node),\n              variableName: property.key.name,\n            });\n          }\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent adjacent inline elements not separated by whitespace.\n * @author Sean Hayes\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\nconst astUtil = require('../util/ast');\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\nconst inlineNames = [\n  'a',\n  'b',\n  'big',\n  'i',\n  'small',\n  'tt',\n  'abbr',\n  'acronym',\n  'cite',\n  'code',\n  'dfn',\n  'em',\n  'kbd',\n  'strong',\n  'samp',\n  'time',\n  'var',\n  'bdo',\n  'br',\n  'img',\n  'map',\n  'object',\n  'q',\n  'script',\n  'span',\n  'sub',\n  'sup',\n  'button',\n  'input',\n  'label',\n  'select',\n  'textarea',\n];\n// Note: raw &nbsp; will be transformed into \\u00a0.\nconst whitespaceRegex = /(?:^\\s|\\s$)/;\n\nfunction isInline(node) {\n  if (node.type === 'Literal') {\n    // Regular whitespace will be removed.\n    const value = node.value;\n    // To properly separate inline elements, each end of the literal will need\n    // whitespace.\n    return !whitespaceRegex.test(value);\n  }\n  if (node.type === 'JSXElement' && inlineNames.indexOf(node.openingElement.name.name) > -1) {\n    return true;\n  }\n  if (astUtil.isCallExpression(node) && inlineNames.indexOf(node.arguments[0].value) > -1) {\n    return true;\n  }\n  return false;\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  inlineElement: 'Child elements which render as inline HTML elements should be separated by a space or wrapped in block level elements.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow adjacent inline elements not separated by whitespace.',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-adjacent-inline-elements'),\n    },\n    schema: [],\n\n    messages,\n  },\n  create(context) {\n    function validate(node, children) {\n      let currentIsInline = false;\n      let previousIsInline = false;\n      if (!children) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        currentIsInline = isInline(children[i]);\n        if (previousIsInline && currentIsInline) {\n          report(context, messages.inlineElement, 'inlineElement', {\n            node,\n          });\n          return;\n        }\n        previousIsInline = currentIsInline;\n      }\n    }\n    return {\n      JSXElement(node) {\n        validate(node, node.children);\n      },\n      CallExpression(node) {\n        if (!isCreateElement(context, node)) {\n          return;\n        }\n        if (node.arguments.length < 2 || !node.arguments[2]) {\n          return;\n        }\n        const children = 'elements' in node.arguments[2] ? node.arguments[2].elements : undefined;\n        validate(node, children);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of Array index in keys\n * @author Joe Lencioni\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst astUtil = require('../util/ast');\nconst docsUrl = require('../util/docsUrl');\nconst pragma = require('../util/pragma');\nconst report = require('../util/report');\nconst variableUtil = require('../util/variable');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction isCreateCloneElement(node, context) {\n  if (!node) {\n    return false;\n  }\n\n  if (node.type === 'MemberExpression' || node.type === 'OptionalMemberExpression') {\n    return node.object\n      && node.object.name === pragma.getFromContext(context)\n      && ['createElement', 'cloneElement'].indexOf(node.property.name) !== -1;\n  }\n\n  if (node.type === 'Identifier') {\n    const variable = variableUtil.findVariableByName(context, node, node.name);\n    if (variable && variable.type === 'ImportSpecifier') {\n      return variable.parent.source.value === 'react';\n    }\n  }\n\n  return false;\n}\n\nconst messages = {\n  noArrayIndex: 'Do not use Array index in keys',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of Array index in keys',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-array-index-key'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n    const indexParamNames = [];\n    const iteratorFunctionsToIndexParamPosition = {\n      every: 1,\n      filter: 1,\n      find: 1,\n      findIndex: 1,\n      flatMap: 1,\n      forEach: 1,\n      map: 1,\n      reduce: 2,\n      reduceRight: 2,\n      some: 1,\n    };\n\n    function isArrayIndex(node) {\n      return node.type === 'Identifier'\n        && indexParamNames.indexOf(node.name) !== -1;\n    }\n\n    function isUsingReactChildren(node) {\n      const callee = node.callee;\n      if (\n        !callee\n        || !callee.property\n        || !callee.object\n      ) {\n        return null;\n      }\n\n      const isReactChildMethod = ['map', 'forEach'].indexOf(callee.property.name) > -1;\n      if (!isReactChildMethod) {\n        return null;\n      }\n\n      const obj = callee.object;\n      if (obj && obj.name === 'Children') {\n        return true;\n      }\n      if (obj && obj.object && obj.object.name === pragma.getFromContext(context)) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function getMapIndexParamName(node) {\n      const callee = node.callee;\n      if (callee.type !== 'MemberExpression' && callee.type !== 'OptionalMemberExpression') {\n        return null;\n      }\n      if (callee.property.type !== 'Identifier') {\n        return null;\n      }\n      if (!has(iteratorFunctionsToIndexParamPosition, callee.property.name)) {\n        return null;\n      }\n\n      const name = /** @type {keyof iteratorFunctionsToIndexParamPosition} */ (callee.property.name);\n\n      const callbackArg = isUsingReactChildren(node)\n        ? node.arguments[1]\n        : node.arguments[0];\n\n      if (!callbackArg) {\n        return null;\n      }\n\n      if (!astUtil.isFunctionLikeExpression(callbackArg)) {\n        return null;\n      }\n\n      const params = callbackArg.params;\n\n      const indexParamPosition = iteratorFunctionsToIndexParamPosition[name];\n      if (params.length < indexParamPosition + 1) {\n        return null;\n      }\n\n      return params[indexParamPosition].name;\n    }\n\n    function getIdentifiersFromBinaryExpression(side) {\n      if (side.type === 'Identifier') {\n        return side;\n      }\n\n      if (side.type === 'BinaryExpression') {\n        // recurse\n        const left = getIdentifiersFromBinaryExpression(side.left);\n        const right = getIdentifiersFromBinaryExpression(side.right);\n        return [].concat(left, right).filter(Boolean);\n      }\n\n      return null;\n    }\n\n    function checkPropValue(node) {\n      if (isArrayIndex(node)) {\n        // key={bar}\n        report(context, messages.noArrayIndex, 'noArrayIndex', {\n          node,\n        });\n        return;\n      }\n\n      if (node.type === 'TemplateLiteral') {\n        // key={`foo-${bar}`}\n        node.expressions.filter(isArrayIndex).forEach(() => {\n          report(context, messages.noArrayIndex, 'noArrayIndex', {\n            node,\n          });\n        });\n\n        return;\n      }\n\n      if (node.type === 'BinaryExpression') {\n        // key={'foo' + bar}\n        const identifiers = getIdentifiersFromBinaryExpression(node);\n\n        identifiers.filter(isArrayIndex).forEach(() => {\n          report(context, messages.noArrayIndex, 'noArrayIndex', {\n            node,\n          });\n        });\n\n        return;\n      }\n\n      if (\n        astUtil.isCallExpression(node)\n        && node.callee\n        && node.callee.type === 'MemberExpression'\n        && node.callee.object\n        && isArrayIndex(node.callee.object)\n        && node.callee.property\n        && node.callee.property.type === 'Identifier'\n        && node.callee.property.name === 'toString'\n      ) {\n        // key={bar.toString()}\n        report(context, messages.noArrayIndex, 'noArrayIndex', {\n          node,\n        });\n        return;\n      }\n\n      if (\n        astUtil.isCallExpression(node)\n        && node.callee\n        && node.callee.type === 'Identifier'\n        && node.callee.name === 'String'\n        && Array.isArray(node.arguments)\n        && node.arguments.length > 0\n        && isArrayIndex(node.arguments[0])\n      ) {\n        // key={String(bar)}\n        report(context, messages.noArrayIndex, 'noArrayIndex', {\n          node: node.arguments[0],\n        });\n      }\n    }\n\n    function popIndex(node) {\n      const mapIndexParamName = getMapIndexParamName(node);\n      if (!mapIndexParamName) {\n        return;\n      }\n\n      indexParamNames.pop();\n    }\n\n    return {\n      'CallExpression, OptionalCallExpression'(node) {\n        if (isCreateCloneElement(node.callee, context) && node.arguments.length > 1) {\n          // React.createElement\n          if (!indexParamNames.length) {\n            return;\n          }\n\n          const props = node.arguments[1];\n\n          if (props.type !== 'ObjectExpression') {\n            return;\n          }\n\n          props.properties.forEach((prop) => {\n            if (!prop.key || prop.key.name !== 'key') {\n              // { ...foo }\n              // { foo: bar }\n              return;\n            }\n\n            checkPropValue(prop.value);\n          });\n\n          return;\n        }\n\n        const mapIndexParamName = getMapIndexParamName(node);\n        if (!mapIndexParamName) {\n          return;\n        }\n\n        indexParamNames.push(mapIndexParamName);\n      },\n\n      JSXAttribute(node) {\n        if (node.name.name !== 'key') {\n          // foo={bar}\n          return;\n        }\n\n        if (!indexParamNames.length) {\n          // Not inside a call expression that we think has an index param.\n          return;\n        }\n\n        const value = node.value;\n        if (!value || value.type !== 'JSXExpressionContainer') {\n          // key='foo' or just simply 'key'\n          return;\n        }\n\n        checkPropValue(value.expression);\n      },\n\n      'CallExpression:exit': popIndex,\n      'OptionalCallExpression:exit': popIndex,\n    };\n  },\n};\n", "/**\n * @fileoverview lifecycle methods\n * @author Tan Nguyen\n */\n\n'use strict';\n\nmodule.exports = {\n  instance: [\n    'getDefaultProps',\n    'getInitialState',\n    'getChildContext',\n    'componentWillMount',\n    'UNSAFE_componentWillMount',\n    'componentDidMount',\n    'componentWillReceiveProps',\n    'UNSAFE_componentWillReceiveProps',\n    'shouldComponentUpdate',\n    'componentWillUpdate',\n    'UNSAFE_componentWillUpdate',\n    'getSnapshotBeforeUpdate',\n    'componentDidUpdate',\n    'componentDidCatch',\n    'componentWillUnmount',\n    'render',\n  ],\n  static: [\n    'getDerivedStateFromProps',\n  ],\n};\n", "/**\n * @fileoverview Lifecycle methods should be methods on the prototype, not class fields\n * @author Tan Nguyen\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst lifecycleMethods = require('../util/lifecycleMethods');\nconst report = require('../util/report');\nconst eslintUtil = require('../util/eslint');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\nfunction getRuleText(node) {\n  const params = node.value.params.map((p) => p.name);\n\n  if (node.type === 'Property') {\n    return `: function(${params.join(', ')}) `;\n  }\n\n  if (node.type === 'ClassProperty' || node.type === 'PropertyDefinition') {\n    return `(${params.join(', ')}) `;\n  }\n\n  return null;\n}\n\nconst messages = {\n  lifecycle: '{{propertyName}} is a React lifecycle method, and should not be an arrow function or in a class field. Use an instance method instead.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Lifecycle methods should be methods on the prototype, not class fields',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-arrow-function-lifecycle'),\n    },\n    messages,\n    schema: [],\n    fixable: 'code',\n  },\n\n  create: Components.detect((context, components) => {\n    /**\n     * @param {Array} properties list of component properties\n     */\n    function reportNoArrowFunctionLifecycle(properties) {\n      properties.forEach((node) => {\n        if (!node || !node.value) {\n          return;\n        }\n\n        const propertyName = astUtil.getPropertyName(node);\n        const nodeType = node.value.type;\n        const isLifecycleMethod = (\n          node.static && !componentUtil.isES5Component(node, context)\n            ? lifecycleMethods.static\n            : lifecycleMethods.instance\n        ).indexOf(propertyName) > -1;\n\n        if (nodeType === 'ArrowFunctionExpression' && isLifecycleMethod) {\n          const body = node.value.body;\n          const isBlockBody = body.type === 'BlockStatement';\n          const sourceCode = getSourceCode(context);\n\n          let nextComment = [];\n          let previousComment = [];\n          let bodyRange;\n          if (!isBlockBody) {\n            const previousToken = sourceCode.getTokenBefore(body);\n\n            if (sourceCode.getCommentsBefore) {\n              // eslint >=4.x\n              previousComment = sourceCode.getCommentsBefore(body);\n            } else {\n              // eslint 3.x\n              const potentialComment = sourceCode.getTokenBefore(body, { includeComments: true });\n              previousComment = previousToken === potentialComment ? [] : [potentialComment];\n            }\n\n            if (sourceCode.getCommentsAfter) {\n              // eslint >=4.x\n              nextComment = sourceCode.getCommentsAfter(body);\n            } else {\n              // eslint 3.x\n              const potentialComment = sourceCode.getTokenAfter(body, { includeComments: true });\n              const nextToken = sourceCode.getTokenAfter(body);\n              nextComment = nextToken === potentialComment ? [] : [potentialComment];\n            }\n            bodyRange = [\n              (previousComment.length > 0 ? previousComment[0] : body).range[0],\n              (nextComment.length > 0 ? nextComment[nextComment.length - 1] : body).range[1]\n                + (node.value.body.type === 'ObjectExpression' ? 1 : 0), // to account for a wrapped end paren\n            ];\n          }\n          const headRange = [\n            node.key.range[1],\n            (previousComment.length > 0 ? previousComment[0] : body).range[0],\n          ];\n          const hasSemi = node.value.expression && getText(context, node).slice(node.value.range[1] - node.range[0]) === ';';\n\n          report(\n            context,\n            messages.lifecycle,\n            'lifecycle',\n            {\n              node,\n              data: {\n                propertyName,\n              },\n              fix(fixer) {\n                if (!sourceCode.getCommentsAfter) {\n                  // eslint 3.x\n                  return isBlockBody && fixer.replaceTextRange(headRange, getRuleText(node));\n                }\n                return [].concat(\n                  fixer.replaceTextRange(headRange, getRuleText(node)),\n                  isBlockBody ? [] : fixer.replaceTextRange(\n                    [bodyRange[0], bodyRange[1] + (hasSemi ? 1 : 0)],\n                    `{ return ${previousComment.map((x) => getText(context, x)).join('')}${getText(context, body)}${nextComment.map((x) => getText(context, x)).join('')}; }`\n                  )\n                );\n              },\n            }\n          );\n        }\n      });\n    }\n\n    return {\n      'Program:exit'() {\n        values(components.list()).forEach((component) => {\n          const properties = astUtil.getComponentProperties(component.node);\n          reportNoArrowFunctionLifecycle(properties);\n        });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Prevent passing of children as props\n * @author Benjamin Stepp\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Checks if the node is a createElement call with a props literal.\n * @param {ASTNode} node - The AST node being checked.\n * @param {Context} context - The AST node being checked.\n * @returns {boolean} - True if node is a createElement call with a props\n * object literal, False if not.\n*/\nfunction isCreateElementWithProps(node, context) {\n  return isCreateElement(context, node)\n    && node.arguments.length > 1\n    && node.arguments[1].type === 'ObjectExpression';\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  nestChildren: 'Do not pass children as props. Instead, nest children between the opening and closing tags.',\n  passChildrenAsArgs: 'Do not pass children as props. Instead, pass them as additional arguments to React.createElement.',\n  nestFunction: 'Do not nest a function between the opening and closing tags. Instead, pass it as a prop.',\n  passFunctionAsArgs: 'Do not pass a function as an additional argument to React.createElement. Instead, pass it as a prop.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow passing of children as props',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-children-prop'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowFunctions: {\n          type: 'boolean',\n          default: false,\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n  create(context) {\n    const configuration = context.options[0] || {};\n\n    function isFunction(node) {\n      return configuration.allowFunctions && (node.type === 'ArrowFunctionExpression' || node.type === 'FunctionExpression');\n    }\n\n    return {\n      JSXAttribute(node) {\n        if (node.name.name !== 'children') {\n          return;\n        }\n\n        const value = node.value;\n        if (value && value.type === 'JSXExpressionContainer' && isFunction(value.expression)) {\n          return;\n        }\n\n        report(context, messages.nestChildren, 'nestChildren', {\n          node,\n        });\n      },\n      CallExpression(node) {\n        if (!isCreateElementWithProps(node, context)) {\n          return;\n        }\n\n        const props = 'properties' in node.arguments[1] ? node.arguments[1].properties : undefined;\n        const childrenProp = props.find((prop) => (\n          'key' in prop\n          && prop.key\n          && 'name' in prop.key\n          && prop.key.name === 'children'\n        ));\n\n        if (childrenProp) {\n          if ('value' in childrenProp && childrenProp.value && !isFunction(childrenProp.value)) {\n            report(context, messages.passChildrenAsArgs, 'passChildrenAsArgs', {\n              node,\n            });\n          }\n        } else if (node.arguments.length === 3) {\n          const children = node.arguments[2];\n          if (isFunction(children)) {\n            report(context, messages.passFunctionAsArgs, 'passFunctionAsArgs', {\n              node,\n            });\n          }\n        }\n      },\n      JSXElement(node) {\n        const children = node.children;\n        if (children && children.length === 1 && children[0].type === 'JSXExpressionContainer') {\n          if (isFunction(children[0].expression)) {\n            report(context, messages.nestFunction, 'nestFunction', {\n              node,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of dangerous JSX props\n * @author Scott Andrews\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst fromEntries = require('object.fromentries/polyfill')();\nconst minimatch = require('minimatch');\n\nconst docsUrl = require('../util/docsUrl');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DANGEROUS_PROPERTY_NAMES = [\n  'dangerouslySetInnerHTML',\n];\n\nconst DANGEROUS_PROPERTIES = fromEntries(DANGEROUS_PROPERTY_NAMES.map((prop) => [prop, prop]));\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Checks if a JSX attribute is dangerous.\n * @param {string} name - Name of the attribute to check.\n * @returns {boolean} Whether or not the attribute is dangerous.\n */\nfunction isDangerous(name) {\n  return has(DANGEROUS_PROPERTIES, name);\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  dangerousProp: 'Dangerous property \\'{{name}}\\' found',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of dangerous JSX properties',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-danger'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        customComponentNames: {\n          items: {\n            type: 'string',\n          },\n          minItems: 0,\n          type: 'array',\n          uniqueItems: true,\n        },\n      },\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const customComponentNames = configuration.customComponentNames || [];\n\n    return {\n      JSXAttribute(node) {\n        const functionName = node.parent.name.name;\n\n        const enableCheckingCustomComponent = customComponentNames.some((name) => minimatch(functionName, name));\n\n        if ((enableCheckingCustomComponent || jsxUtil.isDOMComponent(node.parent)) && isDangerous(node.name.name)) {\n          report(context, messages.dangerousProp, 'dangerousProp', {\n            node,\n            data: {\n              name: node.name.name,\n            },\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Report when a DOM element is using both children and dangerouslySetInnerHTML\n * @author David Petersen\n */\n\n'use strict';\n\nconst variableUtil = require('../util/variable');\nconst jsxUtil = require('../util/jsx');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\nconst messages = {\n  dangerWithChildren: 'Only set one of `children` or `props.dangerouslySetInnerHTML`',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow when a DOM element is using both children and dangerouslySetInnerHTML',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('no-danger-with-children'),\n    },\n\n    messages,\n\n    schema: [], // no options\n  },\n  create(context) {\n    function findSpreadVariable(node, name) {\n      return variableUtil.getVariableFromContext(context, node, name);\n    }\n    /**\n     * Takes a ObjectExpression and returns the value of the prop if it has it\n     * @param {object} node - ObjectExpression node\n     * @param {string} propName - name of the prop to look for\n     * @param {string[]} seenProps\n     * @returns {object | boolean}\n     */\n    function findObjectProp(node, propName, seenProps) {\n      if (!node.properties) {\n        return false;\n      }\n      return node.properties.find((prop) => {\n        if (prop.type === 'Property') {\n          return prop.key.name === propName;\n        }\n        if (prop.type === 'ExperimentalSpreadProperty' || prop.type === 'SpreadElement') {\n          const variable = findSpreadVariable(node, prop.argument.name);\n          if (variable && variable.defs.length && variable.defs[0].node.init) {\n            if (seenProps.indexOf(prop.argument.name) > -1) {\n              return false;\n            }\n            const newSeenProps = seenProps.concat(prop.argument.name || []);\n            return findObjectProp(variable.defs[0].node.init, propName, newSeenProps);\n          }\n        }\n        return false;\n      });\n    }\n\n    /**\n     * Takes a JSXElement and returns the value of the prop if it has it\n     * @param {object} node - JSXElement node\n     * @param {string} propName - name of the prop to look for\n     * @returns {object | boolean}\n     */\n    function findJsxProp(node, propName) {\n      const attributes = node.openingElement.attributes;\n      return attributes.find((attribute) => {\n        if (attribute.type === 'JSXSpreadAttribute') {\n          const variable = findSpreadVariable(node, attribute.argument.name);\n          if (variable && variable.defs.length && variable.defs[0].node.init) {\n            return findObjectProp(variable.defs[0].node.init, propName, []);\n          }\n        }\n        return attribute.name && attribute.name.name === propName;\n      });\n    }\n\n    /**\n     * Checks to see if a node is a line break\n     * @param {ASTNode} node The AST node being checked\n     * @returns {boolean} True if node is a line break, false if not\n     */\n    function isLineBreak(node) {\n      const isLiteral = node.type === 'Literal' || node.type === 'JSXText';\n      const isMultiline = node.loc.start.line !== node.loc.end.line;\n      const isWhiteSpaces = jsxUtil.isWhiteSpaces(node.value);\n\n      return isLiteral && isMultiline && isWhiteSpaces;\n    }\n\n    return {\n      JSXElement(node) {\n        let hasChildren = false;\n\n        if (node.children.length && !isLineBreak(node.children[0])) {\n          hasChildren = true;\n        } else if (findJsxProp(node, 'children')) {\n          hasChildren = true;\n        }\n\n        if (\n          node.openingElement.attributes\n          && hasChildren\n          && findJsxProp(node, 'dangerouslySetInnerHTML')\n        ) {\n          report(context, messages.dangerWithChildren, 'dangerWithChildren', {\n            node,\n          });\n        }\n      },\n      CallExpression(node) {\n        if (\n          node.callee\n          && node.callee.type === 'MemberExpression'\n          && 'name' in node.callee.property\n          && node.callee.property.name === 'createElement'\n          && node.arguments.length > 1\n        ) {\n          let hasChildren = false;\n\n          let props = node.arguments[1];\n\n          if (props.type === 'Identifier') {\n            const variable = variableUtil.getVariableFromContext(context, node, props.name);\n            if (variable && variable.defs.length && variable.defs[0].node.init) {\n              props = variable.defs[0].node.init;\n            }\n          }\n\n          const dangerously = findObjectProp(props, 'dangerouslySetInnerHTML', []);\n\n          if (node.arguments.length === 2) {\n            if (findObjectProp(props, 'children', [])) {\n              hasChildren = true;\n            }\n          } else {\n            hasChildren = true;\n          }\n\n          if (dangerously && hasChildren) {\n            report(context, messages.dangerWithChildren, 'dangerWithChildren', {\n              node,\n            });\n          }\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of deprecated methods\n * @author Yannick Croissant\n * @author Scott Feeney\n * @author Sergei Startsev\n */\n\n'use strict';\n\nconst entries = require('object.entries');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst pragmaUtil = require('../util/pragma');\nconst testReactVersion = require('../util/version').testReactVersion;\nconst report = require('../util/report');\nconst getText = require('../util/eslint').getText;\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst MODULES = {\n  react: ['React'],\n  'react-addons-perf': ['ReactPerf', 'Perf'],\n  'react-dom': ['ReactDOM'],\n  'react-dom/server': ['ReactDOMServer'],\n};\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction getDeprecated(pragma) {\n  const deprecated = {};\n  // 0.12.0\n  deprecated[`${pragma}.renderComponent`] = ['0.12.0', `${pragma}.render`];\n  deprecated[`${pragma}.renderComponentToString`] = ['0.12.0', `${pragma}.renderToString`];\n  deprecated[`${pragma}.renderComponentToStaticMarkup`] = ['0.12.0', `${pragma}.renderToStaticMarkup`];\n  deprecated[`${pragma}.isValidComponent`] = ['0.12.0', `${pragma}.isValidElement`];\n  deprecated[`${pragma}.PropTypes.component`] = ['0.12.0', `${pragma}.PropTypes.element`];\n  deprecated[`${pragma}.PropTypes.renderable`] = ['0.12.0', `${pragma}.PropTypes.node`];\n  deprecated[`${pragma}.isValidClass`] = ['0.12.0'];\n  deprecated['this.transferPropsTo'] = ['0.12.0', 'spread operator ({...})'];\n  // 0.13.0\n  deprecated[`${pragma}.addons.classSet`] = ['0.13.0', 'the npm module classnames'];\n  deprecated[`${pragma}.addons.cloneWithProps`] = ['0.13.0', `${pragma}.cloneElement`];\n  // 0.14.0\n  deprecated[`${pragma}.render`] = ['0.14.0', 'ReactDOM.render'];\n  deprecated[`${pragma}.unmountComponentAtNode`] = ['0.14.0', 'ReactDOM.unmountComponentAtNode'];\n  deprecated[`${pragma}.findDOMNode`] = ['0.14.0', 'ReactDOM.findDOMNode'];\n  deprecated[`${pragma}.renderToString`] = ['0.14.0', 'ReactDOMServer.renderToString'];\n  deprecated[`${pragma}.renderToStaticMarkup`] = ['0.14.0', 'ReactDOMServer.renderToStaticMarkup'];\n  // 15.0.0\n  deprecated[`${pragma}.addons.LinkedStateMixin`] = ['15.0.0'];\n  deprecated['ReactPerf.printDOM'] = ['15.0.0', 'ReactPerf.printOperations'];\n  deprecated['Perf.printDOM'] = ['15.0.0', 'Perf.printOperations'];\n  deprecated['ReactPerf.getMeasurementsSummaryMap'] = ['15.0.0', 'ReactPerf.getWasted'];\n  deprecated['Perf.getMeasurementsSummaryMap'] = ['15.0.0', 'Perf.getWasted'];\n  // 15.5.0\n  deprecated[`${pragma}.createClass`] = ['15.5.0', 'the npm module create-react-class'];\n  deprecated[`${pragma}.addons.TestUtils`] = ['15.5.0', 'ReactDOM.TestUtils'];\n  deprecated[`${pragma}.PropTypes`] = ['15.5.0', 'the npm module prop-types'];\n  // 15.6.0\n  deprecated[`${pragma}.DOM`] = ['15.6.0', 'the npm module react-dom-factories'];\n  // 16.9.0\n  // For now the following life-cycle methods are just legacy, not deprecated:\n  // `componentWillMount`, `componentWillReceiveProps`, `componentWillUpdate`\n  // https://github.com/yannickcr/eslint-plugin-react/pull/1750#issuecomment-425975934\n  deprecated.componentWillMount = [\n    '16.9.0',\n    'UNSAFE_componentWillMount',\n    'https://reactjs.org/docs/react-component.html#unsafe_componentwillmount. '\n    + 'Use https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles to automatically update your components.',\n  ];\n  deprecated.componentWillReceiveProps = [\n    '16.9.0',\n    'UNSAFE_componentWillReceiveProps',\n    'https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops. '\n    + 'Use https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles to automatically update your components.',\n  ];\n  deprecated.componentWillUpdate = [\n    '16.9.0',\n    'UNSAFE_componentWillUpdate',\n    'https://reactjs.org/docs/react-component.html#unsafe_componentwillupdate. '\n    + 'Use https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles to automatically update your components.',\n  ];\n  // 18.0.0\n  // https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html#deprecations\n  deprecated['ReactDOM.render'] = [\n    '18.0.0',\n    'createRoot',\n    'https://reactjs.org/link/switch-to-createroot',\n  ];\n  deprecated['ReactDOM.hydrate'] = [\n    '18.0.0',\n    'hydrateRoot',\n    'https://reactjs.org/link/switch-to-createroot',\n  ];\n  deprecated['ReactDOM.unmountComponentAtNode'] = [\n    '18.0.0',\n    'root.unmount',\n    'https://reactjs.org/link/switch-to-createroot',\n  ];\n  deprecated['ReactDOMServer.renderToNodeStream'] = [\n    '18.0.0',\n    'renderToPipeableStream',\n    'https://reactjs.org/docs/react-dom-server.html#rendertonodestream',\n  ];\n\n  return deprecated;\n}\n\nconst messages = {\n  deprecated: '{{oldMethod}} is deprecated since React {{version}}{{newMethod}}{{refs}}',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of deprecated methods',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-deprecated'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    const pragma = pragmaUtil.getFromContext(context);\n    const deprecated = getDeprecated(pragma);\n\n    function isDeprecated(method) {\n      return (\n        deprecated\n        && deprecated[method]\n        && deprecated[method][0]\n        && testReactVersion(context, `>= ${deprecated[method][0]}`)\n      );\n    }\n\n    function checkDeprecation(node, methodName, methodNode) {\n      if (!isDeprecated(methodName)) {\n        return;\n      }\n      const version = deprecated[methodName][0];\n      const newMethod = deprecated[methodName][1];\n      const refs = deprecated[methodName][2];\n      report(context, messages.deprecated, 'deprecated', {\n        node: methodNode || node,\n        data: {\n          oldMethod: methodName,\n          version,\n          newMethod: newMethod ? `, use ${newMethod} instead` : '',\n          refs: refs ? `, see ${refs}` : '',\n        },\n      });\n    }\n\n    function getReactModuleName(node) {\n      let moduleName = false;\n      if (!node.init) {\n        return false;\n      }\n\n      entries(MODULES).some((entry) => {\n        const key = entry[0];\n        const moduleNames = entry[1];\n        if (\n          node.init.arguments\n          && node.init.arguments.length > 0\n          && node.init.arguments[0]\n          && key === node.init.arguments[0].value\n        ) {\n          moduleName = MODULES[key][0];\n        } else {\n          moduleName = moduleNames.find((name) => name === node.init.name);\n        }\n        return moduleName;\n      });\n\n      return moduleName;\n    }\n\n    /**\n     * Returns life cycle methods if available\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {Array} The array of methods.\n     */\n    function getLifeCycleMethods(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties.map((property) => ({\n        name: astUtil.getPropertyName(property),\n        node: astUtil.getPropertyNameNode(property),\n      }));\n    }\n\n    /**\n     * Checks life cycle methods\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function checkLifeCycleMethods(node) {\n      if (\n        componentUtil.isES5Component(node, context)\n     || componentUtil.isES6Component(node, context)\n      ) {\n        const methods = getLifeCycleMethods(node);\n        methods.forEach((method) => checkDeprecation(node, method.name, method.node));\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      MemberExpression(node) {\n        checkDeprecation(node, getText(context, node));\n      },\n\n      ImportDeclaration(node) {\n        const isReactImport = typeof MODULES[node.source.value] !== 'undefined';\n        if (!isReactImport) {\n          return;\n        }\n        node.specifiers.filter(((s) => 'imported' in s && s.imported)).forEach((specifier) => {\n          // TODO, semver-major: remove `in` check as part of jsdoc->tsdoc migration\n          checkDeprecation(node, 'imported' in specifier && `${MODULES[node.source.value][0]}.${specifier.imported.name}`, specifier);\n        });\n      },\n\n      VariableDeclarator(node) {\n        const reactModuleName = getReactModuleName(node);\n        const isRequire = node.init\n          && 'callee' in node.init\n          && node.init.callee\n          && 'name' in node.init.callee\n          && node.init.callee.name === 'require';\n        const isReactRequire = node.init\n          && 'arguments' in node.init\n          && node.init.arguments\n          && node.init.arguments.length\n          && typeof MODULES['value' in node.init.arguments[0] ? node.init.arguments[0].value : undefined] !== 'undefined';\n        const isDestructuring = node.id && node.id.type === 'ObjectPattern';\n\n        if (\n          !(isDestructuring && reactModuleName)\n          && !(isDestructuring && isRequire && isReactRequire)\n        ) {\n          return;\n        }\n\n        ('properties' in node.id ? node.id.properties : undefined).filter((p) => p.type !== 'RestElement' && p.key).forEach((property) => {\n          checkDeprecation(\n            node,\n            'key' in property && 'name' in property.key && `${reactModuleName || pragma}.${property.key.name}`,\n            property\n          );\n        });\n      },\n\n      ClassDeclaration: checkLifeCycleMethods,\n      ClassExpression: checkLifeCycleMethods,\n      ObjectExpression: checkLifeCycleMethods,\n    };\n  },\n};\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar Call = require('es-abstract/2024/Call');\nvar Get = require('es-abstract/2024/Get');\nvar IsCallable = require('es-abstract/2024/IsCallable');\nvar LengthOfArrayLike = require('es-abstract/2024/LengthOfArrayLike');\nvar ToBoolean = require('es-abstract/2024/ToBoolean');\nvar ToObject = require('es-object-atoms/ToObject');\nvar ToString = require('es-abstract/2024/ToString');\n\nmodule.exports = function findLast(predicate) {\n\tvar O = ToObject(this);\n\tvar len = LengthOfArrayLike(O);\n\n\tif (!IsCallable(predicate)) {\n\t\tthrow new $TypeError('predicate must be a function');\n\t}\n\n\tvar thisArg;\n\tif (arguments.length > 1) {\n\t\tthisArg = arguments[1];\n\t}\n\n\tvar k = len - 1;\n\twhile (k >= 0) {\n\t\tvar Pk = ToString(k);\n\t\tvar kValue = Get(O, Pk);\n\t\tvar testResult = ToBoolean(Call(predicate, thisArg, [kValue, k, O]));\n\t\tif (testResult) {\n\t\t\treturn kValue;\n\t\t}\n\t\tk -= 1;\n\t}\n\n\treturn void undefined;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn Array.prototype.findLast || implementation;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\nvar shimUnscopables = require('es-shim-unscopables');\n\nmodule.exports = function shimFindLast() {\n\tvar polyfill = getPolyfill();\n\tdefine(\n\t\tArray.prototype,\n\t\t{ findLast: polyfill },\n\t\t{ findLast: function () { return Array.prototype.findLast !== polyfill; } }\n\t);\n\n\tshimUnscopables('findLast');\n\n\treturn polyfill;\n};\n", "'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar RequireObjectCoercible = require('es-object-atoms/RequireObjectCoercible');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar polyfill = getPolyfill();\nvar shim = require('./shim');\n\nvar $slice = callBound('Array.prototype.slice');\n\nvar bound = callBind.apply(polyfill);\n// eslint-disable-next-line no-unused-vars\nvar boundFindLast = function findLast(array, predicate) {\n\tRequireObjectCoercible(array);\n\treturn bound(array, $slice(arguments, 1));\n};\n\ndefine(boundFindLast, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundFindLast;\n", "/**\n * @fileoverview Prevent usage of setState in lifecycle methods\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst findLast = require('array.prototype.findlast');\n\nconst docsUrl = require('./docsUrl');\nconst report = require('./report');\nconst getAncestors = require('./eslint').getAncestors;\nconst testReactVersion = require('./version').testReactVersion;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nfunction mapTitle(methodName) {\n  const map = {\n    componentDidMount: 'did-mount',\n    componentDidUpdate: 'did-update',\n    componentWillUpdate: 'will-update',\n  };\n  const title = map[methodName];\n  if (!title) {\n    throw Error(`No docsUrl for '${methodName}'`);\n  }\n  return `no-${title}-set-state`;\n}\n\nconst messages = {\n  noSetState: 'Do not use setState in {{name}}',\n};\n\nconst methodNoopsAsOf = {\n  componentDidMount: '>= 16.3.0',\n  componentDidUpdate: '>= 16.3.0',\n};\n\nfunction shouldBeNoop(context, methodName) {\n  return methodName in methodNoopsAsOf\n    && testReactVersion(context, methodNoopsAsOf[methodName])\n    && !testReactVersion(context, '999.999.999'); // for when the version is not specified\n}\n\n// eslint-disable-next-line valid-jsdoc\n/**\n * @param {string} methodName\n * @param {(context: import('eslint').Rule.RuleContext) => boolean} [shouldCheckUnsafeCb]\n * @returns {import('eslint').Rule.RuleModule}\n */\nmodule.exports = function makeNoMethodSetStateRule(methodName, shouldCheckUnsafeCb) {\n  return {\n    meta: {\n      docs: {\n        description: `Disallow usage of setState in ${methodName}`,\n        category: 'Best Practices',\n        recommended: false,\n        url: docsUrl(mapTitle(methodName)),\n      },\n\n      messages,\n\n      schema: [{\n        enum: ['disallow-in-func'],\n      }],\n    },\n\n    create(context) {\n      const mode = context.options[0] || 'allow-in-func';\n\n      function nameMatches(name) {\n        if (name === methodName) {\n          return true;\n        }\n\n        if (typeof shouldCheckUnsafeCb === 'function' && shouldCheckUnsafeCb(context)) {\n          return name === `UNSAFE_${methodName}`;\n        }\n\n        return false;\n      }\n\n      if (shouldBeNoop(context, methodName)) {\n        return {};\n      }\n\n      // --------------------------------------------------------------------------\n      // Public\n      // --------------------------------------------------------------------------\n\n      return {\n        CallExpression(node) {\n          const callee = node.callee;\n          if (\n            callee.type !== 'MemberExpression'\n            || callee.object.type !== 'ThisExpression'\n            || !('name' in callee.property)\n            || callee.property.name !== 'setState'\n          ) {\n            return;\n          }\n          const ancestors = getAncestors(context, node);\n          let depth = 0;\n          findLast(ancestors, (ancestor) => {\n          // ancestors.some((ancestor) => {\n            if (/Function(Expression|Declaration)$/.test(ancestor.type)) {\n              depth += 1;\n            }\n            if (\n              (ancestor.type !== 'Property' && ancestor.type !== 'MethodDefinition' && ancestor.type !== 'ClassProperty' && ancestor.type !== 'PropertyDefinition')\n              || !nameMatches(ancestor.key.name)\n              || (mode !== 'disallow-in-func' && depth > 1)\n            ) {\n              return false;\n            }\n            report(context, messages.noSetState, 'noSetState', {\n              node: callee,\n              data: {\n                name: ancestor.key.name,\n              },\n            });\n            return true;\n          });\n        },\n      };\n    },\n  };\n};\n", "/**\n * @fileoverview Prevent usage of setState in componentDidMount\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst makeNoMethodSetStateRule = require('../util/makeNoMethodSetStateRule');\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = makeNoMethodSetStateRule('componentDidMount');\n", "/**\n * @fileoverview Prevent usage of setState in componentDidUpdate\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst makeNoMethodSetStateRule = require('../util/makeNoMethodSetStateRule');\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = makeNoMethodSetStateRule('componentDidUpdate');\n", "/**\n * @fileoverview Prevent direct mutation of this.state\n * @author David Petersen\n * @author Nicolas Fernandez <@burabure>\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noDirectMutation: 'Do not mutate state directly. Use setState().',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow direct mutation of this.state',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('no-direct-mutation-state'),\n    },\n\n    messages,\n  },\n\n  create: Components.detect((context, components, utils) => {\n    /**\n     * Checks if the component is valid\n     * @param {Object} component The component to process\n     * @returns {boolean} True if the component is valid, false if not.\n     */\n    function isValid(component) {\n      return !!component && !component.mutateSetState;\n    }\n\n    /**\n     * Reports undeclared proptypes for a given component\n     * @param {Object} component The component to process\n     */\n    function reportMutations(component) {\n      let mutation;\n      for (let i = 0, j = component.mutations.length; i < j; i++) {\n        mutation = component.mutations[i];\n        report(context, messages.noDirectMutation, 'noDirectMutation', {\n          node: mutation,\n        });\n      }\n    }\n\n    /**\n     * Walks through the MemberExpression to the top-most property.\n     * @param {Object} node The node to process\n     * @returns {Object} The outer-most MemberExpression\n     */\n    function getOuterMemberExpression(node) {\n      while (node.object && node.object.property) {\n        node = node.object;\n      }\n      return node;\n    }\n\n    /**\n     * Determine if we should currently ignore assignments in this component.\n     * @param {?Object} component The component to process\n     * @returns {boolean} True if we should skip assignment checks.\n     */\n    function shouldIgnoreComponent(component) {\n      return !component || (component.inConstructor && !component.inCallExpression);\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n    return {\n      MethodDefinition(node) {\n        if (node.kind === 'constructor') {\n          components.set(node, {\n            inConstructor: true,\n          });\n        }\n      },\n\n      CallExpression(node) {\n        components.set(node, {\n          inCallExpression: true,\n        });\n      },\n\n      AssignmentExpression(node) {\n        const component = components.get(utils.getParentComponent(node));\n        if (shouldIgnoreComponent(component) || !node.left || !node.left.object) {\n          return;\n        }\n        const item = getOuterMemberExpression(node.left);\n        if (componentUtil.isStateMemberExpression(item)) {\n          const mutations = (component && component.mutations) || [];\n          mutations.push(node.left.object);\n          components.set(node, {\n            mutateSetState: true,\n            mutations,\n          });\n        }\n      },\n\n      UpdateExpression(node) {\n        const component = components.get(utils.getParentComponent(node));\n        if (shouldIgnoreComponent(component) || node.argument.type !== 'MemberExpression') {\n          return;\n        }\n        const item = getOuterMemberExpression(node.argument);\n        if (componentUtil.isStateMemberExpression(item)) {\n          const mutations = (component && component.mutations) || [];\n          mutations.push(item);\n          components.set(node, {\n            mutateSetState: true,\n            mutations,\n          });\n        }\n      },\n\n      'CallExpression:exit'(node) {\n        components.set(node, {\n          inCallExpression: false,\n        });\n      },\n\n      'MethodDefinition:exit'(node) {\n        if (node.kind === 'constructor') {\n          components.set(node, {\n            inConstructor: false,\n          });\n        }\n      },\n\n      'Program:exit'() {\n        values(components.list())\n          .filter((component) => !isValid(component))\n          .forEach((component) => {\n            reportMutations(component);\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Prevent usage of findDOMNode\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noFindDOMNode: 'Do not use findDOMNode. It doesn’t work with function components and is deprecated in StrictMode. See https://reactjs.org/docs/react-dom.html#finddomnode',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of findDOMNode',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-find-dom-node'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      CallExpression(node) {\n        const callee = node.callee;\n\n        const isFindDOMNode = ('name' in callee && callee.name === 'findDOMNode') || (\n          'property' in callee\n          && callee.property\n          && 'name' in callee.property\n          && callee.property.name === 'findDOMNode'\n        );\n\n        if (!isFindDOMNode) {\n          return;\n        }\n\n        report(context, messages.noFindDOMNode, 'noFindDOMNode', {\n          node: callee,\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of isMounted\n * @author Joe Lencioni\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst getAncestors = require('../util/eslint').getAncestors;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noIsMounted: 'Do not use isMounted',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of isMounted',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-is-mounted'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      CallExpression(node) {\n        const callee = node.callee;\n        if (callee.type !== 'MemberExpression') {\n          return;\n        }\n        if (\n          callee.object.type !== 'ThisExpression'\n          || !('name' in callee.property)\n          || callee.property.name !== 'isMounted'\n        ) {\n          return;\n        }\n        const ancestors = getAncestors(context, node);\n        for (let i = 0, j = ancestors.length; i < j; i++) {\n          if (ancestors[i].type === 'Property' || ancestors[i].type === 'MethodDefinition') {\n            report(context, messages.noIsMounted, 'noIsMounted', {\n              node: callee,\n            });\n            break;\n          }\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent multiple component definition per file\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  onlyOneComponent: 'Declare only one React component per file',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow multiple component definition per file',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('no-multi-comp'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignoreStateless: {\n          default: false,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const configuration = context.options[0] || {};\n    const ignoreStateless = configuration.ignoreStateless || false;\n\n    /**\n     * Checks if the component is ignored\n     * @param {Object} component The component being checked.\n     * @returns {boolean} True if the component is ignored, false if not.\n     */\n    function isIgnored(component) {\n      return (\n        ignoreStateless && (\n          /Function/.test(component.node.type)\n          || utils.isPragmaComponentWrapper(component.node)\n        )\n      );\n    }\n\n    return {\n      'Program:exit'() {\n        if (components.length() <= 1) {\n          return;\n        }\n\n        values(components.list())\n          .filter((component) => !isIgnored(component))\n          .slice(1)\n          .forEach((component) => {\n            report(context, messages.onlyOneComponent, 'onlyOneComponent', {\n              node: component.node,\n            });\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Enforce that namespaces are not used in React elements\n * @author Yacine Hmito\n */\n\n'use strict';\n\nconst elementType = require('jsx-ast-utils/elementType');\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noNamespace: 'React component {{name}} must not be in a namespace, as React does not support them',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce that namespaces are not used in React elements',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-namespace'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    return {\n      CallExpression(node) {\n        if (isCreateElement(context, node) && node.arguments.length > 0 && node.arguments[0].type === 'Literal') {\n          const name = node.arguments[0].value;\n          if (typeof name !== 'string' || name.indexOf(':') === -1) return undefined;\n          report(context, messages.noNamespace, 'noNamespace', {\n            node,\n            data: {\n              name,\n            },\n          });\n        }\n      },\n      JSXOpeningElement(node) {\n        const name = elementType(node);\n        if (typeof name !== 'string' || name.indexOf(':') === -1) return undefined;\n        report(context, messages.noNamespace, 'noNamespace', {\n          node,\n          data: {\n            name,\n          },\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of setState\n * @author Mark Dalgleish\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noSetState: 'Do not use setState',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of setState',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('no-set-state'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    /**\n     * Checks if the component is valid\n     * @param {Object} component The component to process\n     * @returns {boolean} True if the component is valid, false if not.\n     */\n    function isValid(component) {\n      return !!component && !component.useSetState;\n    }\n\n    /**\n     * Reports usages of setState for a given component\n     * @param {Object} component The component to process\n     */\n    function reportSetStateUsages(component) {\n      for (let i = 0, j = component.setStateUsages.length; i < j; i++) {\n        const setStateUsage = component.setStateUsages[i];\n        report(context, messages.noSetState, 'noSetState', {\n          node: setStateUsage,\n        });\n      }\n    }\n\n    return {\n      CallExpression(node) {\n        const callee = node.callee;\n        if (\n          callee.type !== 'MemberExpression'\n          || callee.object.type !== 'ThisExpression'\n          || callee.property.name !== 'setState'\n        ) {\n          return;\n        }\n        const component = components.get(utils.getParentComponent(node));\n        const setStateUsages = (component && component.setStateUsages) || [];\n        setStateUsages.push(callee);\n        components.set(node, {\n          useSetState: true,\n          setStateUsages,\n        });\n      },\n\n      'Program:exit'() {\n        values(components.list())\n          .filter((component) => !isValid(component))\n          .forEach((component) => {\n            reportSetStateUsages(component);\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Prevent string definitions for references and prevent referencing this.refs\n * @author Tom Hastjarjanto\n */\n\n'use strict';\n\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst testReactVersion = require('../util/version').testReactVersion;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  thisRefsDeprecated: 'Using this.refs is deprecated.',\n  stringInRefDeprecated: 'Using string literals in ref attributes is deprecated.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow using string references',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-string-refs'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        noTemplateLiterals: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const checkRefsUsage = testReactVersion(context, '< 18.3.0'); // `this.refs` is writable in React 18.3.0 and later, see https://github.com/facebook/react/pull/28867\n    const detectTemplateLiterals = context.options[0] ? context.options[0].noTemplateLiterals : false;\n    /**\n     * Checks if we are using refs\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if we are using refs, false if not.\n     */\n    function isRefsUsage(node) {\n      return !!(\n        (componentUtil.getParentES6Component(context, node) || componentUtil.getParentES5Component(context, node))\n        && node.object.type === 'ThisExpression'\n        && node.property.name === 'refs'\n      );\n    }\n\n    /**\n     * Checks if we are using a ref attribute\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if we are using a ref attribute, false if not.\n     */\n    function isRefAttribute(node) {\n      return node.type === 'JSXAttribute'\n        && !!node.name\n        && node.name.name === 'ref';\n    }\n\n    /**\n     * Checks if a node contains a string value\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if the node contains a string value, false if not.\n     */\n    function containsStringLiteral(node) {\n      return !!node.value\n        && node.value.type === 'Literal'\n        && typeof node.value.value === 'string';\n    }\n\n    /**\n     * Checks if a node contains a string value within a jsx expression\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if the node contains a string value within a jsx expression, false if not.\n     */\n    function containsStringExpressionContainer(node) {\n      return !!node.value\n        && node.value.type === 'JSXExpressionContainer'\n        && node.value.expression\n        && ((node.value.expression.type === 'Literal' && typeof node.value.expression.value === 'string')\n        || (node.value.expression.type === 'TemplateLiteral' && detectTemplateLiterals));\n    }\n\n    return {\n      MemberExpression(node) {\n        if (checkRefsUsage && isRefsUsage(node)) {\n          report(context, messages.thisRefsDeprecated, 'thisRefsDeprecated', {\n            node,\n          });\n        }\n      },\n\n      JSXAttribute(node) {\n        if (\n          isRefAttribute(node)\n          && (containsStringLiteral(node) || containsStringExpressionContainer(node))\n        ) {\n          report(context, messages.stringInRefDeprecated, 'stringInRefDeprecated', {\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Flag shouldComponentUpdate when extending PureComponent\n */\n\n'use strict';\n\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noShouldCompUpdate: '{{component}} does not need shouldComponentUpdate when extending React.PureComponent.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of shouldComponentUpdate when extending React.PureComponent',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-redundant-should-component-update'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    /**\n     * Checks for shouldComponentUpdate property\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} Whether or not the property exists.\n     */\n    function hasShouldComponentUpdate(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties.some((property) => {\n        const name = astUtil.getPropertyName(property);\n        return name === 'shouldComponentUpdate';\n      });\n    }\n\n    /**\n     * Get name of node if available\n     * @param {ASTNode} node The AST node being checked.\n     * @return {string} The name of the node\n     */\n    function getNodeName(node) {\n      if (node.id) {\n        return node.id.name;\n      }\n      if (node.parent && node.parent.id) {\n        return node.parent.id.name;\n      }\n      return '';\n    }\n\n    /**\n     * Checks for violation of rule\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function checkForViolation(node) {\n      if (componentUtil.isPureComponent(node, context)) {\n        const hasScu = hasShouldComponentUpdate(node);\n        if (hasScu) {\n          const className = getNodeName(node);\n          report(context, messages.noShouldCompUpdate, 'noShouldCompUpdate', {\n            node,\n            data: {\n              component: className,\n            },\n          });\n        }\n      }\n    }\n\n    return {\n      ClassDeclaration: checkForViolation,\n      ClassExpression: checkForViolation,\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of the return value of React.render\n * @author Dustan Kasten\n */\n\n'use strict';\n\nconst testReactVersion = require('../util/version').testReactVersion;\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noReturnValue: 'Do not depend on the return value from {{node}}.render',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of the return value of ReactDOM.render',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('no-render-return-value'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    let calleeObjectName = /^ReactDOM$/;\n    if (testReactVersion(context, '>= 15.0.0')) {\n      calleeObjectName = /^ReactDOM$/;\n    } else if (testReactVersion(context, '^0.14.0')) {\n      calleeObjectName = /^React(DOM)?$/;\n    } else if (testReactVersion(context, '^0.13.0')) {\n      calleeObjectName = /^React$/;\n    }\n\n    return {\n      CallExpression(node) {\n        const callee = node.callee;\n        const parent = node.parent;\n        if (callee.type !== 'MemberExpression') {\n          return;\n        }\n\n        if (\n          callee.object.type !== 'Identifier'\n          || !calleeObjectName.test(callee.object.name)\n          || (!('name' in callee.property) || callee.property.name !== 'render')\n        ) {\n          return;\n        }\n\n        if (\n          parent.type === 'VariableDeclarator'\n          || parent.type === 'Property'\n          || parent.type === 'ReturnStatement'\n          || parent.type === 'ArrowFunctionExpression'\n          || parent.type === 'AssignmentExpression'\n        ) {\n          report(context, messages.noReturnValue, 'noReturnValue', {\n            node: callee,\n            data: {\n              node: callee.object.name,\n            },\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Report \"this\" being used in stateless functional components.\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noThisInSFC: 'Stateless functional components should not use `this`',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow `this` from being used in stateless functional components',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-this-in-sfc'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create: Components.detect((context, components, utils) => ({\n    MemberExpression(node) {\n      if (node.object.type === 'ThisExpression') {\n        const component = components.get(utils.getParentStatelessComponent(node));\n        if (!component || (component.node && component.node.parent && component.node.parent.type === 'Property')) {\n          return;\n        }\n        report(context, messages.noThisInSFC, 'noThisInSFC', {\n          node,\n        });\n      }\n    },\n  })),\n};\n", "/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n", "module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n", "/**\n * @fileoverview Prevent common casing typos\n */\n\n'use strict';\n\nconst PROP_TYPES = Object.keys(require('prop-types'));\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst report = require('../util/report');\nconst lifecycleMethods = require('../util/lifecycleMethods');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst STATIC_CLASS_PROPERTIES = ['propTypes', 'contextTypes', 'childContextTypes', 'defaultProps'];\n\nconst messages = {\n  typoPropTypeChain: 'Typo in prop type chain qualifier: {{name}}',\n  typoPropType: 'Typo in declared prop type: {{name}}',\n  typoStaticClassProp: 'Typo in static class property declaration',\n  typoPropDeclaration: 'Typo in property declaration',\n  typoLifecycleMethod: 'Typo in component lifecycle method declaration: {{actual}} should be {{expected}}',\n  staticLifecycleMethod: 'Lifecycle method should be static: {{method}}',\n  noPropTypesBinding: '`\\'prop-types\\'` imported without a local `PropTypes` binding.',\n  noReactBinding: '`\\'react\\'` imported without a local `React` binding.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow common typos',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('no-typos'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    let propTypesPackageName = null;\n    let reactPackageName = null;\n\n    function checkValidPropTypeQualifier(node) {\n      if (node.name !== 'isRequired') {\n        report(context, messages.typoPropTypeChain, 'typoPropTypeChain', {\n          node,\n          data: { name: node.name },\n        });\n      }\n    }\n\n    function checkValidPropType(node) {\n      if (node.name && !PROP_TYPES.some((propTypeName) => propTypeName === node.name)) {\n        report(context, messages.typoPropType, 'typoPropType', {\n          node,\n          data: { name: node.name },\n        });\n      }\n    }\n\n    function isPropTypesPackage(node) {\n      return (\n        node.type === 'Identifier'\n        && node.name === propTypesPackageName\n      ) || (\n        node.type === 'MemberExpression'\n        && node.property.name === 'PropTypes'\n        && node.object.name === reactPackageName\n      );\n    }\n\n    /* eslint-disable no-use-before-define */\n\n    function checkValidCallExpression(node) {\n      const callee = node.callee;\n      if (callee.type === 'MemberExpression' && callee.property.name === 'shape') {\n        checkValidPropObject(node.arguments[0]);\n      } else if (callee.type === 'MemberExpression' && callee.property.name === 'oneOfType') {\n        const args = node.arguments[0];\n        if (args && args.type === 'ArrayExpression') {\n          args.elements.forEach((el) => {\n            checkValidProp(el);\n          });\n        }\n      }\n    }\n\n    function checkValidProp(node) {\n      if ((!propTypesPackageName && !reactPackageName) || !node) {\n        return;\n      }\n\n      if (node.type === 'MemberExpression') {\n        if (\n          node.object.type === 'MemberExpression'\n          && isPropTypesPackage(node.object.object)\n        ) { // PropTypes.myProp.isRequired\n          checkValidPropType(node.object.property);\n          checkValidPropTypeQualifier(node.property);\n        } else if (\n          isPropTypesPackage(node.object)\n          && node.property.name !== 'isRequired'\n        ) { // PropTypes.myProp\n          checkValidPropType(node.property);\n        } else if (astUtil.isCallExpression(node.object)) {\n          checkValidPropTypeQualifier(node.property);\n          checkValidCallExpression(node.object);\n        }\n      } else if (astUtil.isCallExpression(node)) {\n        checkValidCallExpression(node);\n      }\n    }\n\n    /* eslint-enable no-use-before-define */\n\n    function checkValidPropObject(node) {\n      if (node && node.type === 'ObjectExpression') {\n        node.properties.forEach((prop) => checkValidProp(prop.value));\n      }\n    }\n\n    function reportErrorIfPropertyCasingTypo(propertyValue, propertyKey, isClassProperty) {\n      const propertyName = propertyKey.name;\n      if (propertyName === 'propTypes' || propertyName === 'contextTypes' || propertyName === 'childContextTypes') {\n        checkValidPropObject(propertyValue);\n      }\n      STATIC_CLASS_PROPERTIES.forEach((CLASS_PROP) => {\n        if (propertyName && CLASS_PROP.toLowerCase() === propertyName.toLowerCase() && CLASS_PROP !== propertyName) {\n          const messageId = isClassProperty\n            ? 'typoStaticClassProp'\n            : 'typoPropDeclaration';\n          report(context, messages[messageId], messageId, {\n            node: propertyKey,\n          });\n        }\n      });\n    }\n\n    function reportErrorIfLifecycleMethodCasingTypo(node) {\n      const key = node.key;\n      let nodeKeyName = key.name;\n      if (key.type === 'Literal') {\n        nodeKeyName = key.value;\n      }\n      if (key.type === 'PrivateName' || (node.computed && typeof nodeKeyName !== 'string')) {\n        return;\n      }\n\n      lifecycleMethods.static.forEach((method) => {\n        if (!node.static && nodeKeyName && nodeKeyName.toLowerCase() === method.toLowerCase()) {\n          report(context, messages.staticLifecycleMethod, 'staticLifecycleMethod', {\n            node,\n            data: {\n              method: nodeKeyName,\n            },\n          });\n        }\n      });\n\n      lifecycleMethods.instance.concat(lifecycleMethods.static).forEach((method) => {\n        if (nodeKeyName && method.toLowerCase() === nodeKeyName.toLowerCase() && method !== nodeKeyName) {\n          report(context, messages.typoLifecycleMethod, 'typoLifecycleMethod', {\n            node,\n            data: { actual: nodeKeyName, expected: method },\n          });\n        }\n      });\n    }\n\n    return {\n      ImportDeclaration(node) {\n        if (node.source && node.source.value === 'prop-types') { // import PropType from \"prop-types\"\n          if (node.specifiers.length > 0) {\n            propTypesPackageName = node.specifiers[0].local.name;\n          } else {\n            report(context, messages.noPropTypesBinding, 'noPropTypesBinding', {\n              node,\n            });\n          }\n        } else if (node.source && node.source.value === 'react') { // import { PropTypes } from \"react\"\n          if (node.specifiers.length > 0) {\n            reactPackageName = node.specifiers[0].local.name; // guard against accidental anonymous `import \"react\"`\n          } else {\n            report(context, messages.noReactBinding, 'noReactBinding', {\n              node,\n            });\n          }\n          if (node.specifiers.length >= 1) {\n            const propTypesSpecifier = node.specifiers.find((specifier) => (\n              specifier.imported\n              && specifier.imported.name === 'PropTypes'\n            ));\n            if (propTypesSpecifier) {\n              propTypesPackageName = propTypesSpecifier.local.name;\n            }\n          }\n        }\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!node.static || !componentUtil.isES6Component(node.parent.parent, context)) {\n          return;\n        }\n\n        reportErrorIfPropertyCasingTypo(node.value, node.key, true);\n      },\n\n      MemberExpression(node) {\n        const propertyName = node.property.name;\n\n        if (\n          !propertyName\n          || STATIC_CLASS_PROPERTIES.map((prop) => prop.toLocaleLowerCase()).indexOf(propertyName.toLowerCase()) === -1\n        ) {\n          return;\n        }\n\n        const relatedComponent = utils.getRelatedComponent(node);\n\n        if (\n          relatedComponent\n            && (componentUtil.isES6Component(relatedComponent.node, context) || (\n              relatedComponent.node.type !== 'ClassDeclaration' && utils.isReturningJSX(relatedComponent.node)))\n            && (node.parent && node.parent.type === 'AssignmentExpression' && node.parent.right)\n        ) {\n          reportErrorIfPropertyCasingTypo(node.parent.right, node.property, true);\n        }\n      },\n\n      MethodDefinition(node) {\n        if (!componentUtil.isES6Component(node.parent.parent, context)) {\n          return;\n        }\n\n        reportErrorIfLifecycleMethodCasingTypo(node);\n      },\n\n      ObjectExpression(node) {\n        const component = componentUtil.isES5Component(node, context) && components.get(node);\n\n        if (!component) {\n          return;\n        }\n\n        node.properties.filter((property) => property.type !== 'SpreadElement').forEach((property) => {\n          reportErrorIfPropertyCasingTypo(property.value, property.key, false);\n          reportErrorIfLifecycleMethodCasingTypo(property);\n        });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview HTML special characters should be escaped.\n * @author Patrick Hayes\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst getSourceCode = require('../util/eslint').getSourceCode;\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\nconst getMessageData = require('../util/message');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n// NOTE: '<' and '{' are also problematic characters, but they do not need\n// to be included here because it is a syntax error when these characters are\n// included accidentally.\nconst DEFAULTS = [{\n  char: '>',\n  alternatives: ['&gt;'],\n}, {\n  char: '\"',\n  alternatives: ['&quot;', '&ldquo;', '&#34;', '&rdquo;'],\n}, {\n  char: '\\'',\n  alternatives: ['&apos;', '&lsquo;', '&#39;', '&rsquo;'],\n}, {\n  char: '}',\n  alternatives: ['&#125;'],\n}];\n\nconst messages = {\n  unescapedEntity: 'HTML entity, `{{entity}}` , must be escaped.',\n  unescapedEntityAlts: '`{{entity}}` can be escaped with {{alts}}.',\n  replaceWithAlt: 'Replace with `{{alt}}`.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    hasSuggestions: true,\n    docs: {\n      description: 'Disallow unescaped HTML entities from appearing in markup',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('no-unescaped-entities'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        forbid: {\n          type: 'array',\n          items: {\n            anyOf: [{\n              type: 'string',\n            }, {\n              type: 'object',\n              properties: {\n                char: {\n                  type: 'string',\n                },\n                alternatives: {\n                  type: 'array',\n                  uniqueItems: true,\n                  items: {\n                    type: 'string',\n                  },\n                },\n              },\n            }],\n          },\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    function reportInvalidEntity(node) {\n      const configuration = context.options[0] || {};\n      const entities = configuration.forbid || DEFAULTS;\n\n      // HTML entities are already escaped in node.value (as well as node.raw),\n      // so pull the raw text from getSourceCode(context)\n      for (let i = node.loc.start.line; i <= node.loc.end.line; i++) {\n        let rawLine = getSourceCode(context).lines[i - 1];\n        let start = 0;\n        let end = rawLine.length;\n        if (i === node.loc.start.line) {\n          start = node.loc.start.column;\n        }\n        if (i === node.loc.end.line) {\n          end = node.loc.end.column;\n        }\n        rawLine = rawLine.slice(start, end);\n        for (let j = 0; j < entities.length; j++) {\n          for (let index = 0; index < rawLine.length; index++) {\n            const c = rawLine[index];\n            if (typeof entities[j] === 'string') {\n              if (c === entities[j]) {\n                report(context, messages.unescapedEntity, 'unescapedEntity', {\n                  node,\n                  loc: { line: i, column: start + index },\n                  data: {\n                    entity: entities[j],\n                  },\n                });\n              }\n            } else if (c === entities[j].char) {\n              report(context, messages.unescapedEntityAlts, 'unescapedEntityAlts', {\n                node,\n                loc: { line: i, column: start + index },\n                data: {\n                  entity: entities[j].char,\n                  alts: entities[j].alternatives.map((alt) => `\\`${alt}\\``).join(', '),\n                },\n                suggest: entities[j].alternatives.map((alt) => Object.assign(\n                  getMessageData('replaceWithAlt', messages.replaceWithAlt),\n                  {\n                    data: { alt },\n                    fix(fixer) {\n                      const lineToChange = i - node.loc.start.line;\n\n                      const newText = node.raw.split('\\n').map((line, idx) => {\n                        if (idx === lineToChange) {\n                          return line.slice(0, index) + alt + line.slice(index + 1);\n                        }\n\n                        return line;\n                      }).join('\\n');\n\n                      return fixer.replaceText(node, newText);\n                    },\n                  }\n                )),\n              });\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      'Literal, JSXText'(node) {\n        if (jsxUtil.isJSX(node.parent)) {\n          reportInvalidEntity(node);\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of unknown DOM property\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst docsUrl = require('../util/docsUrl');\nconst getText = require('../util/eslint').getText;\nconst testReactVersion = require('../util/version').testReactVersion;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst DEFAULTS = {\n  ignore: [],\n  requireDataLowercase: false,\n};\n\nconst DOM_ATTRIBUTE_NAMES = {\n  'accept-charset': 'acceptCharset',\n  class: 'className',\n  'http-equiv': 'httpEquiv',\n  crossorigin: 'crossOrigin',\n  for: 'htmlFor',\n  nomodule: 'noModule',\n};\n\nconst ATTRIBUTE_TAGS_MAP = {\n  abbr: ['th', 'td'],\n  charset: ['meta'],\n  checked: ['input'],\n  // image is required for SVG support, all other tags are HTML.\n  crossOrigin: ['script', 'img', 'video', 'audio', 'link', 'image'],\n  displaystyle: ['math'],\n  // https://html.spec.whatwg.org/multipage/links.html#downloading-resources\n  download: ['a', 'area'],\n  fill: [ // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill\n    // Fill color\n    'altGlyph',\n    'circle',\n    'ellipse',\n    'g',\n    'line',\n    'marker',\n    'mask',\n    'path',\n    'polygon',\n    'polyline',\n    'rect',\n    'svg',\n    'symbol',\n    'text',\n    'textPath',\n    'tref',\n    'tspan',\n    'use',\n    // Animation final state\n    'animate',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'set',\n  ],\n  focusable: ['svg'],\n  imageSizes: ['link'],\n  imageSrcSet: ['link'],\n  property: ['meta'],\n  viewBox: ['marker', 'pattern', 'svg', 'symbol', 'view'],\n  as: ['link'],\n  align: ['applet', 'caption', 'col', 'colgroup', 'hr', 'iframe', 'img', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr'], // deprecated, but known\n  valign: ['tr', 'td', 'th', 'thead', 'tbody', 'tfoot', 'colgroup', 'col'], // deprecated, but known\n  noModule: ['script'],\n  // Media events allowed only on audio and video tags, see https://github.com/facebook/react/blob/256aefbea1449869620fb26f6ec695536ab453f5/CHANGELOG.md#notable-enhancements\n  onAbort: ['audio', 'video'],\n  onCancel: ['dialog'],\n  onCanPlay: ['audio', 'video'],\n  onCanPlayThrough: ['audio', 'video'],\n  onClose: ['dialog'],\n  onDurationChange: ['audio', 'video'],\n  onEmptied: ['audio', 'video'],\n  onEncrypted: ['audio', 'video'],\n  onEnded: ['audio', 'video'],\n  onError: ['audio', 'video', 'img', 'link', 'source', 'script', 'picture', 'iframe'],\n  onLoad: ['script', 'img', 'link', 'picture', 'iframe', 'object', 'source'],\n  onLoadedData: ['audio', 'video'],\n  onLoadedMetadata: ['audio', 'video'],\n  onLoadStart: ['audio', 'video'],\n  onPause: ['audio', 'video'],\n  onPlay: ['audio', 'video'],\n  onPlaying: ['audio', 'video'],\n  onProgress: ['audio', 'video'],\n  onRateChange: ['audio', 'video'],\n  onResize: ['audio', 'video'],\n  onSeeked: ['audio', 'video'],\n  onSeeking: ['audio', 'video'],\n  onStalled: ['audio', 'video'],\n  onSuspend: ['audio', 'video'],\n  onTimeUpdate: ['audio', 'video'],\n  onVolumeChange: ['audio', 'video'],\n  onWaiting: ['audio', 'video'],\n  autoPictureInPicture: ['video'],\n  controls: ['audio', 'video'],\n  controlsList: ['audio', 'video'],\n  disablePictureInPicture: ['video'],\n  disableRemotePlayback: ['audio', 'video'],\n  loop: ['audio', 'video'],\n  muted: ['audio', 'video'],\n  playsInline: ['video'],\n  allowFullScreen: ['iframe', 'video'],\n  webkitAllowFullScreen: ['iframe', 'video'],\n  mozAllowFullScreen: ['iframe', 'video'],\n  poster: ['video'],\n  preload: ['audio', 'video'],\n  scrolling: ['iframe'],\n  returnValue: ['dialog'],\n  webkitDirectory: ['input'],\n};\n\nconst SVGDOM_ATTRIBUTE_NAMES = {\n  'accent-height': 'accentHeight',\n  'alignment-baseline': 'alignmentBaseline',\n  'arabic-form': 'arabicForm',\n  'baseline-shift': 'baselineShift',\n  'cap-height': 'capHeight',\n  'clip-path': 'clipPath',\n  'clip-rule': 'clipRule',\n  'color-interpolation': 'colorInterpolation',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  'color-profile': 'colorProfile',\n  'color-rendering': 'colorRendering',\n  'dominant-baseline': 'dominantBaseline',\n  'enable-background': 'enableBackground',\n  'fill-opacity': 'fillOpacity',\n  'fill-rule': 'fillRule',\n  'flood-color': 'floodColor',\n  'flood-opacity': 'floodOpacity',\n  'font-family': 'fontFamily',\n  'font-size': 'fontSize',\n  'font-size-adjust': 'fontSizeAdjust',\n  'font-stretch': 'fontStretch',\n  'font-style': 'fontStyle',\n  'font-variant': 'fontVariant',\n  'font-weight': 'fontWeight',\n  'glyph-name': 'glyphName',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  'horiz-adv-x': 'horizAdvX',\n  'horiz-origin-x': 'horizOriginX',\n  'image-rendering': 'imageRendering',\n  'letter-spacing': 'letterSpacing',\n  'lighting-color': 'lightingColor',\n  'marker-end': 'markerEnd',\n  'marker-mid': 'markerMid',\n  'marker-start': 'markerStart',\n  'overline-position': 'overlinePosition',\n  'overline-thickness': 'overlineThickness',\n  'paint-order': 'paintOrder',\n  'panose-1': 'panose1',\n  'pointer-events': 'pointerEvents',\n  'rendering-intent': 'renderingIntent',\n  'shape-rendering': 'shapeRendering',\n  'stop-color': 'stopColor',\n  'stop-opacity': 'stopOpacity',\n  'strikethrough-position': 'strikethroughPosition',\n  'strikethrough-thickness': 'strikethroughThickness',\n  'stroke-dasharray': 'strokeDasharray',\n  'stroke-dashoffset': 'strokeDashoffset',\n  'stroke-linecap': 'strokeLinecap',\n  'stroke-linejoin': 'strokeLinejoin',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  'stroke-opacity': 'strokeOpacity',\n  'stroke-width': 'strokeWidth',\n  'text-anchor': 'textAnchor',\n  'text-decoration': 'textDecoration',\n  'text-rendering': 'textRendering',\n  'underline-position': 'underlinePosition',\n  'underline-thickness': 'underlineThickness',\n  'unicode-bidi': 'unicodeBidi',\n  'unicode-range': 'unicodeRange',\n  'units-per-em': 'unitsPerEm',\n  'v-alphabetic': 'vAlphabetic',\n  'v-hanging': 'vHanging',\n  'v-ideographic': 'vIdeographic',\n  'v-mathematical': 'vMathematical',\n  'vector-effect': 'vectorEffect',\n  'vert-adv-y': 'vertAdvY',\n  'vert-origin-x': 'vertOriginX',\n  'vert-origin-y': 'vertOriginY',\n  'word-spacing': 'wordSpacing',\n  'writing-mode': 'writingMode',\n  'x-height': 'xHeight',\n  'xlink:actuate': 'xlinkActuate',\n  'xlink:arcrole': 'xlinkArcrole',\n  'xlink:href': 'xlinkHref',\n  'xlink:role': 'xlinkRole',\n  'xlink:show': 'xlinkShow',\n  'xlink:title': 'xlinkTitle',\n  'xlink:type': 'xlinkType',\n  'xml:base': 'xmlBase',\n  'xml:lang': 'xmlLang',\n  'xml:space': 'xmlSpace',\n};\n\nconst DOM_PROPERTY_NAMES_ONE_WORD = [\n  // Global attributes - can be used on any HTML/DOM element\n  // See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\n  'dir', 'draggable', 'hidden', 'id', 'lang', 'nonce', 'part', 'slot', 'style', 'title', 'translate', 'inert',\n  // Element specific attributes\n  // See https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes (includes global attributes too)\n  // To be considered if these should be added also to ATTRIBUTE_TAGS_MAP\n  'accept', 'action', 'allow', 'alt', 'as', 'async', 'buffered', 'capture', 'challenge', 'cite', 'code', 'cols',\n  'content', 'coords', 'csp', 'data', 'decoding', 'default', 'defer', 'disabled', 'form',\n  'headers', 'height', 'high', 'href', 'icon', 'importance', 'integrity', 'kind', 'label',\n  'language', 'loading', 'list', 'loop', 'low', 'manifest', 'max', 'media', 'method', 'min', 'multiple', 'muted',\n  'name', 'open', 'optimum', 'pattern', 'ping', 'placeholder', 'poster', 'preload', 'profile',\n  'rel', 'required', 'reversed', 'role', 'rows', 'sandbox', 'scope', 'seamless', 'selected', 'shape', 'size', 'sizes',\n  'span', 'src', 'start', 'step', 'summary', 'target', 'type', 'value', 'width', 'wmode', 'wrap',\n  // SVG attributes\n  // See https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\n  'accumulate', 'additive', 'alphabetic', 'amplitude', 'ascent', 'azimuth', 'bbox', 'begin',\n  'bias', 'by', 'clip', 'color', 'cursor', 'cx', 'cy', 'd', 'decelerate', 'descent', 'direction',\n  'display', 'divisor', 'dur', 'dx', 'dy', 'elevation', 'end', 'exponent', 'fill', 'filter',\n  'format', 'from', 'fr', 'fx', 'fy', 'g1', 'g2', 'hanging', 'height', 'hreflang', 'ideographic',\n  'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'local', 'mask', 'mode',\n  'offset', 'opacity', 'operator', 'order', 'orient', 'orientation', 'origin', 'overflow', 'path',\n  'ping', 'points', 'r', 'radius', 'rel', 'restart', 'result', 'rotate', 'rx', 'ry', 'scale',\n  'seed', 'slope', 'spacing', 'speed', 'stemh', 'stemv', 'string', 'stroke', 'to', 'transform',\n  'u1', 'u2', 'unicode', 'values', 'version', 'visibility', 'widths', 'x', 'x1', 'x2', 'xmlns',\n  'y', 'y1', 'y2', 'z',\n  // OpenGraph meta tag attributes\n  'property',\n  // React specific attributes\n  'ref', 'key', 'children',\n  // Non-standard\n  'results', 'security',\n  // Video specific\n  'controls',\n  // popovers\n  'popover', 'popovertarget', 'popovertargetaction',\n];\n\nconst DOM_PROPERTY_NAMES_TWO_WORDS = [\n  // Global attributes - can be used on any HTML/DOM element\n  // See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\n  'accessKey', 'autoCapitalize', 'autoFocus', 'contentEditable', 'enterKeyHint', 'exportParts',\n  'inputMode', 'itemID', 'itemRef', 'itemProp', 'itemScope', 'itemType', 'spellCheck', 'tabIndex',\n  // Element specific attributes\n  // See https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes (includes global attributes too)\n  // To be considered if these should be added also to ATTRIBUTE_TAGS_MAP\n  'acceptCharset', 'autoComplete', 'autoPlay', 'border', 'cellPadding', 'cellSpacing', 'classID', 'codeBase',\n  'colSpan', 'contextMenu', 'dateTime', 'encType', 'formAction', 'formEncType', 'formMethod', 'formNoValidate', 'formTarget',\n  'frameBorder', 'hrefLang', 'httpEquiv', 'imageSizes', 'imageSrcSet', 'isMap', 'keyParams', 'keyType', 'marginHeight', 'marginWidth',\n  'maxLength', 'mediaGroup', 'minLength', 'noValidate', 'onAnimationEnd', 'onAnimationIteration', 'onAnimationStart',\n  'onBlur', 'onChange', 'onClick', 'onContextMenu', 'onCopy', 'onCompositionEnd', 'onCompositionStart',\n  'onCompositionUpdate', 'onCut', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave',\n  'onError', 'onFocus', 'onInput', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onLoad', 'onWheel', 'onDragOver',\n  'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver',\n  'onMouseUp', 'onPaste', 'onScroll', 'onSelect', 'onSubmit', 'onToggle', 'onTransitionEnd', 'radioGroup', 'readOnly', 'referrerPolicy',\n  'rowSpan', 'srcDoc', 'srcLang', 'srcSet', 'useMap', 'fetchPriority',\n  // SVG attributes\n  // See https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute\n  'crossOrigin', 'accentHeight', 'alignmentBaseline', 'arabicForm', 'attributeName',\n  'attributeType', 'baseFrequency', 'baselineShift', 'baseProfile', 'calcMode', 'capHeight',\n  'clipPathUnits', 'clipPath', 'clipRule', 'colorInterpolation', 'colorInterpolationFilters',\n  'colorProfile', 'colorRendering', 'contentScriptType', 'contentStyleType', 'diffuseConstant',\n  'dominantBaseline', 'edgeMode', 'enableBackground', 'fillOpacity', 'fillRule', 'filterRes',\n  'filterUnits', 'floodColor', 'floodOpacity', 'fontFamily', 'fontSize', 'fontSizeAdjust',\n  'fontStretch', 'fontStyle', 'fontVariant', 'fontWeight', 'glyphName',\n  'glyphOrientationHorizontal', 'glyphOrientationVertical', 'glyphRef', 'gradientTransform',\n  'gradientUnits', 'horizAdvX', 'horizOriginX', 'imageRendering', 'kernelMatrix',\n  'kernelUnitLength', 'keyPoints', 'keySplines', 'keyTimes', 'lengthAdjust', 'letterSpacing',\n  'lightingColor', 'limitingConeAngle', 'markerEnd', 'markerMid', 'markerStart', 'markerHeight',\n  'markerUnits', 'markerWidth', 'maskContentUnits', 'maskUnits', 'mathematical', 'numOctaves',\n  'overlinePosition', 'overlineThickness', 'panose1', 'paintOrder', 'pathLength',\n  'patternContentUnits', 'patternTransform', 'patternUnits', 'pointerEvents', 'pointsAtX',\n  'pointsAtY', 'pointsAtZ', 'preserveAlpha', 'preserveAspectRatio', 'primitiveUnits',\n  'referrerPolicy', 'refX', 'refY', 'rendering-intent', 'repeatCount', 'repeatDur',\n  'requiredExtensions', 'requiredFeatures', 'shapeRendering', 'specularConstant',\n  'specularExponent', 'spreadMethod', 'startOffset', 'stdDeviation', 'stitchTiles', 'stopColor',\n  'stopOpacity', 'strikethroughPosition', 'strikethroughThickness', 'strokeDasharray',\n  'strokeDashoffset', 'strokeLinecap', 'strokeLinejoin', 'strokeMiterlimit', 'strokeOpacity',\n  'strokeWidth', 'surfaceScale', 'systemLanguage', 'tableValues', 'targetX', 'targetY',\n  'textAnchor', 'textDecoration', 'textRendering', 'textLength', 'transformOrigin',\n  'underlinePosition', 'underlineThickness', 'unicodeBidi', 'unicodeRange', 'unitsPerEm',\n  'vAlphabetic', 'vHanging', 'vIdeographic', 'vMathematical', 'vectorEffect', 'vertAdvY',\n  'vertOriginX', 'vertOriginY', 'viewBox', 'viewTarget', 'wordSpacing', 'writingMode', 'xHeight',\n  'xChannelSelector', 'xlinkActuate', 'xlinkArcrole', 'xlinkHref', 'xlinkRole', 'xlinkShow',\n  'xlinkTitle', 'xlinkType', 'xmlBase', 'xmlLang', 'xmlnsXlink', 'xmlSpace', 'yChannelSelector',\n  'zoomAndPan',\n  // Safari/Apple specific, no listing available\n  'autoCorrect', // https://stackoverflow.com/questions/47985384/html-autocorrect-for-text-input-is-not-working\n  'autoSave', // https://stackoverflow.com/questions/25456396/what-is-autosave-attribute-supposed-to-do-how-do-i-use-it\n  // React specific attributes https://reactjs.org/docs/dom-elements.html#differences-in-attributes\n  'className', 'dangerouslySetInnerHTML', 'defaultValue', 'defaultChecked', 'htmlFor',\n  // Events' capture events\n  'onBeforeInput', 'onChange',\n  'onInvalid', 'onReset', 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'suppressContentEditableWarning', 'suppressHydrationWarning',\n  'onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded',\n  'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onResize',\n  'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting',\n  'onCopyCapture', 'onCutCapture', 'onPasteCapture', 'onCompositionEndCapture', 'onCompositionStartCapture', 'onCompositionUpdateCapture',\n  'onFocusCapture', 'onBlurCapture', 'onChangeCapture', 'onBeforeInputCapture', 'onInputCapture', 'onResetCapture', 'onSubmitCapture',\n  'onInvalidCapture', 'onLoadCapture', 'onErrorCapture', 'onKeyDownCapture', 'onKeyPressCapture', 'onKeyUpCapture',\n  'onAbortCapture', 'onCanPlayCapture', 'onCanPlayThroughCapture', 'onDurationChangeCapture', 'onEmptiedCapture', 'onEncryptedCapture',\n  'onEndedCapture', 'onLoadedDataCapture', 'onLoadedMetadataCapture', 'onLoadStartCapture', 'onPauseCapture', 'onPlayCapture',\n  'onPlayingCapture', 'onProgressCapture', 'onRateChangeCapture', 'onSeekedCapture', 'onSeekingCapture', 'onStalledCapture', 'onSuspendCapture',\n  'onTimeUpdateCapture', 'onVolumeChangeCapture', 'onWaitingCapture', 'onSelectCapture', 'onTouchCancelCapture', 'onTouchEndCapture',\n  'onTouchMoveCapture', 'onTouchStartCapture', 'onScrollCapture', 'onWheelCapture', 'onAnimationEndCapture', 'onAnimationIteration',\n  'onAnimationStartCapture', 'onTransitionEndCapture',\n  'onAuxClick', 'onAuxClickCapture', 'onClickCapture', 'onContextMenuCapture', 'onDoubleClickCapture',\n  'onDragCapture', 'onDragEndCapture', 'onDragEnterCapture', 'onDragExitCapture', 'onDragLeaveCapture',\n  'onDragOverCapture', 'onDragStartCapture', 'onDropCapture', 'onMouseDown', 'onMouseDownCapture',\n  'onMouseMoveCapture', 'onMouseOutCapture', 'onMouseOverCapture', 'onMouseUpCapture',\n  // Video specific\n  'autoPictureInPicture', 'controlsList', 'disablePictureInPicture', 'disableRemotePlayback',\n];\n\nconst DOM_PROPERTIES_IGNORE_CASE = ['charset', 'allowFullScreen', 'webkitAllowFullScreen', 'mozAllowFullScreen', 'webkitDirectory'];\n\nconst ARIA_PROPERTIES = [\n  // See https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes\n  // Global attributes\n  'aria-atomic', 'aria-braillelabel', 'aria-brailleroledescription', 'aria-busy', 'aria-controls', 'aria-current',\n  'aria-describedby', 'aria-description', 'aria-details',\n  'aria-disabled', 'aria-dropeffect', 'aria-errormessage', 'aria-flowto', 'aria-grabbed', 'aria-haspopup',\n  'aria-hidden', 'aria-invalid', 'aria-keyshortcuts', 'aria-label', 'aria-labelledby', 'aria-live',\n  'aria-owns', 'aria-relevant', 'aria-roledescription',\n  // Widget attributes\n  'aria-autocomplete', 'aria-checked', 'aria-expanded', 'aria-level', 'aria-modal', 'aria-multiline', 'aria-multiselectable',\n  'aria-orientation', 'aria-placeholder', 'aria-pressed', 'aria-readonly', 'aria-required', 'aria-selected',\n  'aria-sort', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext',\n  // Relationship attributes\n  'aria-activedescendant', 'aria-colcount', 'aria-colindex', 'aria-colindextext', 'aria-colspan',\n  'aria-posinset', 'aria-rowcount', 'aria-rowindex', 'aria-rowindextext', 'aria-rowspan', 'aria-setsize',\n];\n\nconst REACT_ON_PROPS = [\n  'onGotPointerCapture',\n  'onGotPointerCaptureCapture',\n  'onLostPointerCapture',\n  'onLostPointerCapture',\n  'onLostPointerCaptureCapture',\n  'onPointerCancel',\n  'onPointerCancelCapture',\n  'onPointerDown',\n  'onPointerDownCapture',\n  'onPointerEnter',\n  'onPointerEnterCapture',\n  'onPointerLeave',\n  'onPointerLeaveCapture',\n  'onPointerMove',\n  'onPointerMoveCapture',\n  'onPointerOut',\n  'onPointerOutCapture',\n  'onPointerOver',\n  'onPointerOverCapture',\n  'onPointerUp',\n  'onPointerUpCapture',\n];\n\nfunction getDOMPropertyNames(context) {\n  const ALL_DOM_PROPERTY_NAMES = DOM_PROPERTY_NAMES_TWO_WORDS.concat(DOM_PROPERTY_NAMES_ONE_WORD);\n  // this was removed in React v16.1+, see https://github.com/facebook/react/pull/10823\n  if (!testReactVersion(context, '>= 16.1.0')) {\n    return ALL_DOM_PROPERTY_NAMES.concat('allowTransparency');\n  }\n  // these were added in React v16.4.0, see https://reactjs.org/blog/2018/05/23/react-v-16-4.html and https://github.com/facebook/react/pull/12507\n  if (testReactVersion(context, '>= 16.4.0')) {\n    return ALL_DOM_PROPERTY_NAMES.concat(REACT_ON_PROPS);\n  }\n  return ALL_DOM_PROPERTY_NAMES;\n}\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Checks if a node's parent is a JSX tag that is written with lowercase letters,\n * and is not a custom web component. Custom web components have a hyphen in tag name,\n * or have an `is=\"some-elem\"` attribute.\n *\n * Note: does not check if a tag's parent against a list of standard HTML/DOM tags. For example,\n * a `<fake>`'s child would return `true` because \"fake\" is written only with lowercase letters\n * without a hyphen and does not have a `is=\"some-elem\"` attribute.\n *\n * @param {Object} childNode - JSX element being tested.\n * @returns {boolean} Whether or not the node name match the JSX tag convention.\n */\nfunction isValidHTMLTagInJSX(childNode) {\n  const tagConvention = /^[a-z][^-]*$/;\n  if (tagConvention.test(childNode.parent.name.name)) {\n    return !childNode.parent.attributes.some((attrNode) => (\n      attrNode.type === 'JSXAttribute'\n        && attrNode.name.type === 'JSXIdentifier'\n        && attrNode.name.name === 'is'\n        // To learn more about custom web components and `is` attribute,\n        // see https://html.spec.whatwg.org/multipage/custom-elements.html#custom-elements-customized-builtin-example\n\n    ));\n  }\n  return false;\n}\n\n/**\n * Checks if the attribute name is included in the attributes that are excluded\n * from the camel casing.\n *\n * // returns 'charSet'\n * @example normalizeAttributeCase('charset')\n *\n * Note - these exclusions are not made by React core team, but `eslint-plugin-react` community.\n *\n * @param {string} name - Attribute name to be normalized\n * @returns {string} Result\n */\nfunction normalizeAttributeCase(name) {\n  return DOM_PROPERTIES_IGNORE_CASE.find((element) => element.toLowerCase() === name.toLowerCase()) || name;\n}\n\n/**\n * Checks if an attribute name is a valid `data-*` attribute:\n * if the name starts with \"data-\" and has alphanumeric words (browsers require lowercase, but React and TS lowercase them),\n * not start with any casing of \"xml\", and separated by hyphens (-) (which is also called \"kebab case\" or \"dash case\"),\n * then the attribute is a valid data attribute.\n *\n * @param {string} name - Attribute name to be tested\n * @returns {boolean} Result\n */\nfunction isValidDataAttribute(name) {\n  return !/^data-xml/i.test(name) && /^data-[^:]*$/.test(name);\n}\n\n/**\n * Checks if an attribute name has at least one uppercase characters\n *\n * @param {string} name\n * @returns {boolean} Result\n */\nfunction hasUpperCaseCharacter(name) {\n  return name.toLowerCase() !== name;\n}\n\n/**\n * Checks if an attribute name is a standard aria attribute by compering it to a list\n * of standard aria property names\n *\n * @param {string} name - Attribute name to be tested\n * @returns {boolean} Result\n */\n\nfunction isValidAriaAttribute(name) {\n  return ARIA_PROPERTIES.some((element) => element === name);\n}\n\n/**\n * Extracts the tag name for the JSXAttribute\n * @param {JSXAttribute} node - JSXAttribute being tested.\n * @returns {string | null} tag name\n */\nfunction getTagName(node) {\n  if (\n    node\n    && node.parent\n    && node.parent.name\n  ) {\n    return node.parent.name.name;\n  }\n  return null;\n}\n\n/**\n * Test wether the tag name for the JSXAttribute is\n * something like <Foo.bar />\n * @param {JSXAttribute} node - JSXAttribute being tested.\n * @returns {boolean} result\n */\nfunction tagNameHasDot(node) {\n  return !!(\n    node.parent\n    && node.parent.name\n    && node.parent.name.type === 'JSXMemberExpression'\n  );\n}\n\n/**\n * Get the standard name of the attribute.\n * @param {string} name - Name of the attribute.\n * @param {object} context - eslint context\n * @returns {string | undefined} The standard name of the attribute, or undefined if no standard name was found.\n */\nfunction getStandardName(name, context) {\n  if (has(DOM_ATTRIBUTE_NAMES, name)) {\n    return DOM_ATTRIBUTE_NAMES[/** @type {keyof DOM_ATTRIBUTE_NAMES} */ (name)];\n  }\n  if (has(SVGDOM_ATTRIBUTE_NAMES, name)) {\n    return SVGDOM_ATTRIBUTE_NAMES[/** @type {keyof SVGDOM_ATTRIBUTE_NAMES} */ (name)];\n  }\n  const names = getDOMPropertyNames(context);\n  // Let's find a possible attribute match with a case-insensitive search.\n  return names.find((element) => element.toLowerCase() === name.toLowerCase());\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  invalidPropOnTag: 'Invalid property \\'{{name}}\\' found on tag \\'{{tagName}}\\', but it is only allowed on: {{allowedTags}}',\n  unknownPropWithStandardName: 'Unknown property \\'{{name}}\\' found, use \\'{{standardName}}\\' instead',\n  unknownProp: 'Unknown property \\'{{name}}\\' found',\n  dataLowercaseRequired: 'React does not recognize data-* props with uppercase characters on a DOM element. Found \\'{{name}}\\', use \\'{{lowerCaseName}}\\' instead',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of unknown DOM property',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('no-unknown-property'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignore: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        requireDataLowercase: {\n          type: 'boolean',\n          default: false,\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    function getIgnoreConfig() {\n      return (context.options[0] && context.options[0].ignore) || DEFAULTS.ignore;\n    }\n\n    function getRequireDataLowercase() {\n      return (context.options[0] && typeof context.options[0].requireDataLowercase !== 'undefined')\n        ? !!context.options[0].requireDataLowercase\n        : DEFAULTS.requireDataLowercase;\n    }\n\n    return {\n      JSXAttribute(node) {\n        const ignoreNames = getIgnoreConfig();\n        const actualName = getText(context, node.name);\n        if (ignoreNames.indexOf(actualName) >= 0) {\n          return;\n        }\n        const name = normalizeAttributeCase(actualName);\n\n        // Ignore tags like <Foo.bar />\n        if (tagNameHasDot(node)) {\n          return;\n        }\n\n        if (isValidDataAttribute(name)) {\n          if (getRequireDataLowercase() && hasUpperCaseCharacter(name)) {\n            report(context, messages.dataLowercaseRequired, 'dataLowercaseRequired', {\n              node,\n              data: {\n                name: actualName,\n                lowerCaseName: actualName.toLowerCase(),\n              },\n            });\n          }\n\n          return;\n        }\n\n        if (isValidAriaAttribute(name)) { return; }\n\n        const tagName = getTagName(node);\n\n        if (tagName === 'fbt' || tagName === 'fbs') { return; } // fbt/fbs nodes are bonkers, let's not go there\n\n        if (!isValidHTMLTagInJSX(node)) { return; }\n\n        // Let's dive deeper into tags that are HTML/DOM elements (`<button>`), and not React components (`<Button />`)\n\n        // Some attributes are allowed on some tags only\n        const allowedTags = has(ATTRIBUTE_TAGS_MAP, name)\n          ? ATTRIBUTE_TAGS_MAP[/** @type {keyof ATTRIBUTE_TAGS_MAP} */ (name)]\n          : null;\n        if (tagName && allowedTags) {\n          // Scenario 1A: Allowed attribute found where not supposed to, report it\n          if (allowedTags.indexOf(tagName) === -1) {\n            report(context, messages.invalidPropOnTag, 'invalidPropOnTag', {\n              node,\n              data: {\n                name: actualName,\n                tagName,\n                allowedTags: allowedTags.join(', '),\n              },\n            });\n          }\n          // Scenario 1B: There are allowed attributes on allowed tags, no need to report it\n          return;\n        }\n\n        // Let's see if the attribute is a close version to some standard property name\n        const standardName = getStandardName(name, context);\n\n        const hasStandardNameButIsNotUsed = standardName && standardName !== name;\n        const usesStandardName = standardName && standardName === name;\n\n        if (usesStandardName) {\n          // Scenario 2A: The attribute name is the standard name, no need to report it\n          return;\n        }\n\n        if (hasStandardNameButIsNotUsed) {\n          // Scenario 2B: The name of the attribute is close to a standard one, report it with the standard name\n          report(context, messages.unknownPropWithStandardName, 'unknownPropWithStandardName', {\n            node,\n            data: {\n              name: actualName,\n              standardName,\n            },\n            fix(fixer) {\n              return fixer.replaceText(node.name, standardName);\n            },\n          });\n          return;\n        }\n\n        // Scenario 3: We have an attribute that is unknown, report it\n        report(context, messages.unknownProp, 'unknownProp', {\n          node,\n          data: {\n            name: actualName,\n          },\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of unsafe lifecycle methods\n * @author Sergei Startsev\n */\n\n'use strict';\n\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst testReactVersion = require('../util/version').testReactVersion;\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  unsafeMethod: '{{method}} is unsafe for use in async rendering. Update the component to use {{newMethod}} instead. {{details}}',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of unsafe lifecycle methods',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-unsafe'),\n    },\n\n    messages,\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          checkAliases: {\n            default: false,\n            type: 'boolean',\n          },\n        },\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create(context) {\n    const config = context.options[0] || {};\n    const checkAliases = config.checkAliases || false;\n\n    const isApplicable = testReactVersion(context, '>= 16.3.0');\n    if (!isApplicable) {\n      return {};\n    }\n\n    const unsafe = {\n      UNSAFE_componentWillMount: {\n        newMethod: 'componentDidMount',\n        details: 'See https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html.',\n      },\n      UNSAFE_componentWillReceiveProps: {\n        newMethod: 'getDerivedStateFromProps',\n        details: 'See https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html.',\n      },\n      UNSAFE_componentWillUpdate: {\n        newMethod: 'componentDidUpdate',\n        details: 'See https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html.',\n      },\n    };\n    if (checkAliases) {\n      unsafe.componentWillMount = unsafe.UNSAFE_componentWillMount;\n      unsafe.componentWillReceiveProps = unsafe.UNSAFE_componentWillReceiveProps;\n      unsafe.componentWillUpdate = unsafe.UNSAFE_componentWillUpdate;\n    }\n\n    /**\n     * Returns a list of unsafe methods\n     * @returns {Array} A list of unsafe methods\n     */\n    function getUnsafeMethods() {\n      return Object.keys(unsafe);\n    }\n\n    /**\n     * Checks if a passed method is unsafe\n     * @param {string} method Life cycle method\n     * @returns {boolean} Returns true for unsafe methods, otherwise returns false\n     */\n    function isUnsafe(method) {\n      const unsafeMethods = getUnsafeMethods();\n      return unsafeMethods.indexOf(method) !== -1;\n    }\n\n    /**\n     * Reports the error for an unsafe method\n     * @param {ASTNode} node The AST node being checked\n     * @param {string} method Life cycle method\n     */\n    function checkUnsafe(node, method) {\n      if (!isUnsafe(method)) {\n        return;\n      }\n\n      const meta = unsafe[method];\n      const newMethod = meta.newMethod;\n      const details = meta.details;\n\n      const propertyNode = astUtil.getComponentProperties(node)\n        .find((property) => astUtil.getPropertyName(property) === method);\n\n      report(context, messages.unsafeMethod, 'unsafeMethod', {\n        node: propertyNode,\n        data: {\n          method,\n          newMethod,\n          details,\n        },\n      });\n    }\n\n    /**\n     * Returns life cycle methods if available\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {Array} The array of methods.\n     */\n    function getLifeCycleMethods(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties.map((property) => astUtil.getPropertyName(property));\n    }\n\n    /**\n     * Checks life cycle methods\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function checkLifeCycleMethods(node) {\n      if (componentUtil.isES5Component(node, context) || componentUtil.isES6Component(node, context)) {\n        const methods = getLifeCycleMethods(node);\n        methods\n          .sort((a, b) => a.localeCompare(b))\n          .forEach((method) => checkUnsafe(node, method));\n      }\n    }\n\n    return {\n      ClassDeclaration: checkLifeCycleMethods,\n      ClassExpression: checkLifeCycleMethods,\n      ObjectExpression: checkLifeCycleMethods,\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent creating unstable components inside components\n * @author Ari Perkkiö\n */\n\n'use strict';\n\nconst minimatch = require('minimatch');\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Constants\n// ------------------------------------------------------------------------------\n\nconst COMPONENT_AS_PROPS_INFO = ' If you want to allow component creation in props, set allowAsProps option to true.';\nconst HOOK_REGEXP = /^use[A-Z0-9].*$/;\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n/**\n * Generate error message with given parent component name\n * @param {string} parentName Name of the parent component, if known\n * @returns {string} Error message with parent component name\n */\nfunction generateErrorMessageWithParentName(parentName) {\n  return `Do not define components during render. React will see a new component type on every render and destroy the entire subtree’s DOM nodes and state (https://reactjs.org/docs/reconciliation.html#elements-of-different-types). Instead, move this component definition out of the parent component${parentName ? ` “${parentName}” ` : ' '}and pass data as props.`;\n}\n\n/**\n * Check whether given text matches the pattern passed in.\n * @param {string} text Text to validate\n * @param {string} pattern Pattern to match against\n * @returns {boolean}\n */\nfunction propMatchesRenderPropPattern(text, pattern) {\n  return typeof text === 'string' && minimatch(text, pattern);\n}\n\n/**\n * Get closest parent matching given matcher\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @param {Function} matcher Method used to match the parent\n * @returns {ASTNode} The matching parent node, if any\n */\nfunction getClosestMatchingParent(node, context, matcher) {\n  if (!node || !node.parent || node.parent.type === 'Program') {\n    return;\n  }\n\n  if (matcher(node.parent, context)) {\n    return node.parent;\n  }\n\n  return getClosestMatchingParent(node.parent, context, matcher);\n}\n\n/**\n * Matcher used to check whether given node is a `createElement` call\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @returns {boolean} True if node is a `createElement` call, false if not\n */\nfunction isCreateElementMatcher(node, context) {\n  return (\n    astUtil.isCallExpression(node)\n    && isCreateElement(context, node)\n  );\n}\n\n/**\n * Matcher used to check whether given node is a `ObjectExpression`\n * @param {ASTNode} node The AST node\n * @returns {boolean} True if node is a `ObjectExpression`, false if not\n */\nfunction isObjectExpressionMatcher(node) {\n  return node && node.type === 'ObjectExpression';\n}\n\n/**\n * Matcher used to check whether given node is a `JSXExpressionContainer`\n * @param {ASTNode} node The AST node\n * @returns {boolean} True if node is a `JSXExpressionContainer`, false if not\n */\nfunction isJSXExpressionContainerMatcher(node) {\n  return node && node.type === 'JSXExpressionContainer';\n}\n\n/**\n * Matcher used to check whether given node is a `JSXAttribute` of `JSXExpressionContainer`\n * @param {ASTNode} node The AST node\n * @returns {boolean} True if node is a `JSXAttribute` of `JSXExpressionContainer`, false if not\n */\nfunction isJSXAttributeOfExpressionContainerMatcher(node) {\n  return (\n    node\n    && node.type === 'JSXAttribute'\n    && node.value\n    && node.value.type === 'JSXExpressionContainer'\n  );\n}\n\n/**\n * Matcher used to check whether given node is an object `Property`\n * @param {ASTNode} node The AST node\n * @returns {boolean} True if node is a `Property`, false if not\n */\nfunction isPropertyOfObjectExpressionMatcher(node) {\n  return (\n    node\n    && node.parent\n    && node.parent.type === 'Property'\n  );\n}\n\n/**\n * Check whether given node or its parent is directly inside `map` call\n * ```jsx\n * {items.map(item => <li />)}\n * ```\n * @param {ASTNode} node The AST node\n * @returns {boolean} True if node is directly inside `map` call, false if not\n */\nfunction isMapCall(node) {\n  return (\n    node\n    && node.callee\n    && node.callee.property\n    && node.callee.property.name === 'map'\n  );\n}\n\n/**\n * Check whether given node is `ReturnStatement` of a React hook\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @returns {boolean} True if node is a `ReturnStatement` of a React hook, false if not\n */\nfunction isReturnStatementOfHook(node, context) {\n  if (\n    !node\n    || !node.parent\n    || node.parent.type !== 'ReturnStatement'\n  ) {\n    return false;\n  }\n\n  const callExpression = getClosestMatchingParent(node, context, astUtil.isCallExpression);\n  return (\n    callExpression\n    && callExpression.callee\n    && HOOK_REGEXP.test(callExpression.callee.name)\n  );\n}\n\n/**\n * Check whether given node is declared inside a render prop\n * ```jsx\n * <Component renderFooter={() => <div />} />\n * <Component>{() => <div />}</Component>\n * ```\n * @param {ASTNode} node The AST node\n * @param {Context} context eslint context\n * @param {string} propNamePattern a pattern to match render props against\n * @returns {boolean} True if component is declared inside a render prop, false if not\n */\nfunction isComponentInRenderProp(node, context, propNamePattern) {\n  if (\n    node\n    && node.parent\n    && node.parent.type === 'Property'\n    && node.parent.key\n    && propMatchesRenderPropPattern(node.parent.key.name, propNamePattern)\n  ) {\n    return true;\n  }\n\n  // Check whether component is a render prop used as direct children, e.g. <Component>{() => <div />}</Component>\n  if (\n    node\n    && node.parent\n    && node.parent.type === 'JSXExpressionContainer'\n    && node.parent.parent\n    && node.parent.parent.type === 'JSXElement'\n  ) {\n    return true;\n  }\n\n  const jsxExpressionContainer = getClosestMatchingParent(node, context, isJSXExpressionContainerMatcher);\n\n  // Check whether prop name indicates accepted patterns\n  if (\n    jsxExpressionContainer\n    && jsxExpressionContainer.parent\n    && jsxExpressionContainer.parent.type === 'JSXAttribute'\n    && jsxExpressionContainer.parent.name\n    && jsxExpressionContainer.parent.name.type === 'JSXIdentifier'\n  ) {\n    const propName = jsxExpressionContainer.parent.name.name;\n\n    // Starts with render, e.g. <Component renderFooter={() => <div />} />\n    if (propMatchesRenderPropPattern(propName, propNamePattern)) {\n      return true;\n    }\n\n    // Uses children prop explicitly, e.g. <Component children={() => <div />} />\n    if (propName === 'children') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Check whether given node is declared directly inside a render property\n * ```jsx\n * const rows = { render: () => <div /> }\n * <Component rows={ [{ render: () => <div /> }] } />\n *  ```\n * @param {ASTNode} node The AST node\n * @param {string} propNamePattern The pattern to match render props against\n * @returns {boolean} True if component is declared inside a render property, false if not\n */\nfunction isDirectValueOfRenderProperty(node, propNamePattern) {\n  return (\n    node\n    && node.parent\n    && node.parent.type === 'Property'\n    && node.parent.key\n    && node.parent.key.type === 'Identifier'\n    && propMatchesRenderPropPattern(node.parent.key.name, propNamePattern)\n  );\n}\n\n/**\n * Resolve the component name of given node\n * @param {ASTNode} node The AST node of the component\n * @returns {string} Name of the component, if any\n */\nfunction resolveComponentName(node) {\n  const parentName = node.id && node.id.name;\n  if (parentName) return parentName;\n\n  return (\n    node.type === 'ArrowFunctionExpression'\n    && node.parent\n    && node.parent.id\n    && node.parent.id.name\n  );\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow creating unstable components inside components',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('no-unstable-nested-components'),\n    },\n    schema: [{\n      type: 'object',\n      properties: {\n        customValidators: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        allowAsProps: {\n          type: 'boolean',\n        },\n        propNamePattern: {\n          type: 'string',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const allowAsProps = context.options.some((option) => option && option.allowAsProps);\n    const propNamePattern = (context.options[0] || {}).propNamePattern || 'render*';\n\n    /**\n     * Check whether given node is declared inside class component's render block\n     * ```jsx\n     * class Component extends React.Component {\n     *   render() {\n     *     class NestedClassComponent extends React.Component {\n     * ...\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {boolean} True if node is inside class component's render block, false if not\n     */\n    function isInsideRenderMethod(node) {\n      const parentComponent = utils.getParentComponent(node);\n\n      if (!parentComponent || parentComponent.type !== 'ClassDeclaration') {\n        return false;\n      }\n\n      return (\n        node\n        && node.parent\n        && node.parent.type === 'MethodDefinition'\n        && node.parent.key\n        && node.parent.key.name === 'render'\n      );\n    }\n\n    /**\n     * Check whether given node is a function component declared inside class component.\n     * Util's component detection fails to detect function components inside class components.\n     * ```jsx\n     * class Component extends React.Component {\n     *  render() {\n     *    const NestedComponent = () => <div />;\n     * ...\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {boolean} True if given node a function component declared inside class component, false if not\n     */\n    function isFunctionComponentInsideClassComponent(node) {\n      const parentComponent = utils.getParentComponent(node);\n      const parentStatelessComponent = utils.getParentStatelessComponent(node);\n\n      return (\n        parentComponent\n        && parentStatelessComponent\n        && parentComponent.type === 'ClassDeclaration'\n        && utils.getStatelessComponent(parentStatelessComponent)\n        && utils.isReturningJSX(node)\n      );\n    }\n\n    /**\n     * Check whether given node is declared inside `createElement` call's props\n     * ```js\n     * React.createElement(Component, {\n     *   footer: () => React.createElement(\"div\", null)\n     * })\n     * ```\n     * @param {ASTNode} node The AST node\n     * @returns {boolean} True if node is declare inside `createElement` call's props, false if not\n     */\n    function isComponentInsideCreateElementsProp(node) {\n      if (!components.get(node)) {\n        return false;\n      }\n\n      const createElementParent = getClosestMatchingParent(node, context, isCreateElementMatcher);\n\n      return (\n        createElementParent\n        && createElementParent.arguments\n        && createElementParent.arguments[1] === getClosestMatchingParent(node, context, isObjectExpressionMatcher)\n      );\n    }\n\n    /**\n     * Check whether given node is declared inside a component/object prop.\n     * ```jsx\n     * <Component footer={() => <div />} />\n     * { footer: () => <div /> }\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {boolean} True if node is a component declared inside prop, false if not\n     */\n    function isComponentInProp(node) {\n      if (isPropertyOfObjectExpressionMatcher(node)) {\n        return utils.isReturningJSX(node);\n      }\n\n      const jsxAttribute = getClosestMatchingParent(node, context, isJSXAttributeOfExpressionContainerMatcher);\n\n      if (!jsxAttribute) {\n        return isComponentInsideCreateElementsProp(node);\n      }\n\n      return utils.isReturningJSX(node);\n    }\n\n    /**\n     * Check whether given node is a stateless component returning non-JSX\n     * ```jsx\n     * {{ a: () => null }}\n     * ```\n     * @param {ASTNode} node The AST node being checked\n     * @returns {boolean} True if node is a stateless component returning non-JSX, false if not\n     */\n    function isStatelessComponentReturningNull(node) {\n      const component = utils.getStatelessComponent(node);\n\n      return component && !utils.isReturningJSX(component);\n    }\n\n    /**\n     * Check whether given node is a unstable nested component\n     * @param {ASTNode} node The AST node being checked\n     */\n    function validate(node) {\n      if (!node || !node.parent) {\n        return;\n      }\n\n      const isDeclaredInsideProps = isComponentInProp(node);\n\n      if (\n        !components.get(node)\n        && !isFunctionComponentInsideClassComponent(node)\n        && !isDeclaredInsideProps) {\n        return;\n      }\n\n      if (\n        // Support allowAsProps option\n        (isDeclaredInsideProps && (allowAsProps || isComponentInRenderProp(node, context, propNamePattern)))\n\n        // Prevent reporting components created inside Array.map calls\n        || isMapCall(node)\n        || isMapCall(node.parent)\n\n        // Do not mark components declared inside hooks (or falsy '() => null' clean-up methods)\n        || isReturnStatementOfHook(node, context)\n\n        // Do not mark objects containing render methods\n        || isDirectValueOfRenderProperty(node, propNamePattern)\n\n        // Prevent reporting nested class components twice\n        || isInsideRenderMethod(node)\n\n        // Prevent falsely reporting detected \"components\" which do not return JSX\n        || isStatelessComponentReturningNull(node)\n      ) {\n        return;\n      }\n\n      // Get the closest parent component\n      const parentComponent = getClosestMatchingParent(\n        node,\n        context,\n        (nodeToMatch) => components.get(nodeToMatch)\n      );\n\n      if (parentComponent) {\n        const parentName = resolveComponentName(parentComponent);\n\n        // Exclude lowercase parents, e.g. function createTestComponent()\n        // React-dom prevents creating lowercase components\n        if (parentName && parentName[0] === parentName[0].toLowerCase()) {\n          return;\n        }\n\n        let message = generateErrorMessageWithParentName(parentName);\n\n        // Add information about allowAsProps option when component is declared inside prop\n        if (isDeclaredInsideProps && !allowAsProps) {\n          message += COMPONENT_AS_PROPS_INFO;\n        }\n\n        report(context, message, null, {\n          node,\n        });\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      FunctionDeclaration(node) { validate(node); },\n      ArrowFunctionExpression(node) { validate(node); },\n      FunctionExpression(node) { validate(node); },\n      ClassDeclaration(node) { validate(node); },\n      CallExpression(node) { validate(node); },\n    };\n  }),\n};\n", "/**\n * @fileoverview Prevent declaring unused methods and properties of component class\n * @author Paweł Nowak, Berton Zhu\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst componentUtil = require('../util/componentUtil');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst LIFECYCLE_METHODS = new Set([\n  'constructor',\n  'componentDidCatch',\n  'componentDidMount',\n  'componentDidUpdate',\n  'componentWillMount',\n  'componentWillReceiveProps',\n  'componentWillUnmount',\n  'componentWillUpdate',\n  'getChildContext',\n  'getSnapshotBeforeUpdate',\n  'render',\n  'shouldComponentUpdate',\n  'UNSAFE_componentWillMount',\n  'UNSAFE_componentWillReceiveProps',\n  'UNSAFE_componentWillUpdate',\n]);\n\nconst ES6_LIFECYCLE = new Set([\n  'state',\n]);\n\nconst ES5_LIFECYCLE = new Set([\n  'getInitialState',\n  'getDefaultProps',\n  'mixins',\n]);\n\nfunction isKeyLiteralLike(node, property) {\n  return property.type === 'Literal'\n     || (property.type === 'TemplateLiteral' && property.expressions.length === 0)\n     || (node.computed === false && property.type === 'Identifier');\n}\n\n// Descend through all wrapping TypeCastExpressions and return the expression\n// that was cast.\nfunction uncast(node) {\n  while (node.type === 'TypeCastExpression') {\n    node = node.expression;\n  }\n  return node;\n}\n\n// Return the name of an identifier or the string value of a literal. Useful\n// anywhere that a literal may be used as a key (e.g., member expressions,\n// method definitions, ObjectExpression property keys).\nfunction getName(node) {\n  node = uncast(node);\n  const type = node.type;\n\n  if (type === 'Identifier') {\n    return node.name;\n  }\n  if (type === 'Literal') {\n    return String(node.value);\n  }\n  if (type === 'TemplateLiteral' && node.expressions.length === 0) {\n    return node.quasis[0].value.raw;\n  }\n  return null;\n}\n\nfunction isThisExpression(node) {\n  return uncast(node).type === 'ThisExpression';\n}\n\nfunction getInitialClassInfo(node, isClass) {\n  return {\n    classNode: node,\n    isClass,\n    // Set of nodes where properties were defined.\n    properties: new Set(),\n\n    // Set of names of properties that we've seen used.\n    usedProperties: new Set(),\n\n    inStatic: false,\n  };\n}\n\nconst messages = {\n  unused: 'Unused method or property \"{{name}}\"',\n  unusedWithClass: 'Unused method or property \"{{name}}\" of class \"{{className}}\"',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow declaring unused methods of component class',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-unused-class-component-methods'),\n    },\n    messages,\n    schema: [],\n  },\n\n  create: ((context) => {\n    let classInfo = null;\n\n    // Takes an ObjectExpression node and adds all named Property nodes to the\n    // current set of properties.\n    function addProperty(node) {\n      classInfo.properties.add(node);\n    }\n\n    // Adds the name of the given node as a used property if the node is an\n    // Identifier or a Literal. Other node types are ignored.\n    function addUsedProperty(node) {\n      const name = getName(node);\n      if (name) {\n        classInfo.usedProperties.add(name);\n      }\n    }\n\n    function reportUnusedProperties() {\n      // Report all unused properties.\n      for (const node of classInfo.properties) { // eslint-disable-line no-restricted-syntax\n        const name = getName(node);\n        if (\n          !classInfo.usedProperties.has(name)\n           && !LIFECYCLE_METHODS.has(name)\n           && (classInfo.isClass ? !ES6_LIFECYCLE.has(name) : !ES5_LIFECYCLE.has(name))\n        ) {\n          const className = (classInfo.classNode.id && classInfo.classNode.id.name) || '';\n\n          const messageID = className ? 'unusedWithClass' : 'unused';\n          report(\n            context,\n            messages[messageID],\n            messageID,\n            {\n              node,\n              data: {\n                name,\n                className,\n              },\n            }\n          );\n        }\n      }\n    }\n\n    function exitMethod() {\n      if (!classInfo || !classInfo.inStatic) {\n        return;\n      }\n\n      classInfo.inStatic = false;\n    }\n\n    return {\n      ClassDeclaration(node) {\n        if (componentUtil.isES6Component(node, context)) {\n          classInfo = getInitialClassInfo(node, true);\n        }\n      },\n\n      ObjectExpression(node) {\n        if (componentUtil.isES5Component(node, context)) {\n          classInfo = getInitialClassInfo(node, false);\n        }\n      },\n\n      'ClassDeclaration:exit'() {\n        if (!classInfo) {\n          return;\n        }\n        reportUnusedProperties();\n        classInfo = null;\n      },\n\n      'ObjectExpression:exit'(node) {\n        if (!classInfo || classInfo.classNode !== node) {\n          return;\n        }\n        reportUnusedProperties();\n        classInfo = null;\n      },\n\n      Property(node) {\n        if (!classInfo || classInfo.classNode !== node.parent) {\n          return;\n        }\n\n        if (isKeyLiteralLike(node, node.key)) {\n          addProperty(node.key);\n        }\n      },\n\n      'ClassProperty, MethodDefinition, PropertyDefinition'(node) {\n        if (!classInfo) {\n          return;\n        }\n\n        if (node.static) {\n          classInfo.inStatic = true;\n          return;\n        }\n\n        if (isKeyLiteralLike(node, node.key)) {\n          addProperty(node.key);\n        }\n      },\n\n      'ClassProperty:exit': exitMethod,\n      'MethodDefinition:exit': exitMethod,\n      'PropertyDefinition:exit': exitMethod,\n\n      MemberExpression(node) {\n        if (!classInfo || classInfo.inStatic) {\n          return;\n        }\n\n        if (isThisExpression(node.object) && isKeyLiteralLike(node, node.property)) {\n          if (node.parent.type === 'AssignmentExpression' && node.parent.left === node) {\n            // detect `this.property = xxx`\n            addProperty(node.property);\n          } else {\n            // detect `this.property()`, `x = this.property`, etc.\n            addUsedProperty(node.property);\n          }\n        }\n      },\n\n      VariableDeclarator(node) {\n        if (!classInfo || classInfo.inStatic) {\n          return;\n        }\n\n        // detect `{ foo, bar: baz } = this`\n        if (node.init && isThisExpression(node.init) && node.id.type === 'ObjectPattern') {\n          node.id.properties\n            .filter((prop) => prop.type === 'Property' && isKeyLiteralLike(prop, prop.key))\n            .forEach((prop) => {\n              addUsedProperty('key' in prop ? prop.key : undefined);\n            });\n        }\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Prevent definitions of unused prop types\n * @author Evgueni Naverniouk\n */\n\n'use strict';\n\nconst values = require('object.values');\n\n// As for exceptions for props.children or props.className (and alike) look at\n// https://github.com/jsx-eslint/eslint-plugin-react/issues/7\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n/**\n * Checks if the component must be validated\n * @param {Object} component The component to process\n * @returns {boolean} True if the component must be validated, false if not.\n */\nfunction mustBeValidated(component) {\n  return !!component && !component.ignoreUnusedPropTypesValidation;\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  unusedPropType: '\\'{{name}}\\' PropType is defined but prop is never used',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow definitions of unused propTypes',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-unused-prop-types'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignore: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n          uniqueItems: true,\n        },\n        customValidators: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        skipShapeProps: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components) => {\n    const defaults = { skipShapeProps: true, customValidators: [], ignore: [] };\n    const configuration = Object.assign({}, defaults, context.options[0] || {});\n\n    /**\n     * Checks if the prop is ignored\n     * @param {string} name Name of the prop to check.\n     * @returns {boolean} True if the prop is ignored, false if not.\n     */\n    function isIgnored(name) {\n      return configuration.ignore.indexOf(name) !== -1;\n    }\n\n    /**\n     * Checks if a prop is used\n     * @param {ASTNode} node The AST node being checked.\n     * @param {Object} prop Declared prop object\n     * @returns {boolean} True if the prop is used, false if not.\n     */\n    function isPropUsed(node, prop) {\n      const usedPropTypes = node.usedPropTypes || [];\n      for (let i = 0, l = usedPropTypes.length; i < l; i++) {\n        const usedProp = usedPropTypes[i];\n        if (\n          prop.type === 'shape'\n          || prop.type === 'exact'\n          || prop.name === '__ANY_KEY__'\n          || usedProp.name === prop.name\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Used to recursively loop through each declared prop type\n     * @param {Object} component The component to process\n     * @param {ASTNode[]|true} props List of props to validate\n     */\n    function reportUnusedPropType(component, props) {\n      // Skip props that check instances\n      if (props === true) {\n        return;\n      }\n\n      Object.keys(props || {}).forEach((key) => {\n        const prop = props[key];\n        // Skip props that check instances\n        if (prop === true) {\n          return;\n        }\n\n        if ((prop.type === 'shape' || prop.type === 'exact') && configuration.skipShapeProps) {\n          return;\n        }\n\n        if (prop.node && prop.node.typeAnnotation && prop.node.typeAnnotation.typeAnnotation\n          && prop.node.typeAnnotation.typeAnnotation.type === 'TSNeverKeyword') {\n          return;\n        }\n\n        if (prop.node && !isIgnored(prop.fullName) && !isPropUsed(component, prop)) {\n          report(context, messages.unusedPropType, 'unusedPropType', {\n            node: prop.node.key || prop.node,\n            data: {\n              name: prop.fullName,\n            },\n          });\n        }\n\n        if (prop.children) {\n          reportUnusedPropType(component, prop.children);\n        }\n      });\n    }\n\n    /**\n     * Reports unused proptypes for a given component\n     * @param {Object} component The component to process\n     */\n    function reportUnusedPropTypes(component) {\n      reportUnusedPropType(component, component.declaredPropTypes);\n    }\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    return {\n      'Program:exit'() {\n        // Report undeclared proptypes for all classes\n        values(components.list())\n          .filter((component) => mustBeValidated(component))\n          .forEach((component) => {\n            reportUnusedPropTypes(component);\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview  Attempts to discover all state fields in a React component and\n * warn if any of them are never read.\n *\n * State field definitions are collected from `this.state = {}` assignments in\n * the constructor, objects passed to `this.setState()`, and `state = {}` class\n * property assignments.\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst report = require('../util/report');\nconst getScope = require('../util/eslint').getScope;\n\n// Descend through all wrapping TypeCastExpressions and return the expression\n// that was cast.\nfunction uncast(node) {\n  while (node.type === 'TypeCastExpression') {\n    node = node.expression;\n  }\n  return node;\n}\n\n// Return the name of an identifier or the string value of a literal. Useful\n// anywhere that a literal may be used as a key (e.g., member expressions,\n// method definitions, ObjectExpression property keys).\nfunction getName(node) {\n  node = uncast(node);\n  const type = node.type;\n\n  if (type === 'Identifier') {\n    return node.name;\n  }\n  if (type === 'Literal') {\n    return String(node.value);\n  }\n  if (type === 'TemplateLiteral' && node.expressions.length === 0) {\n    return node.quasis[0].value.raw;\n  }\n  return null;\n}\n\nfunction isThisExpression(node) {\n  return astUtil.unwrapTSAsExpression(uncast(node)).type === 'ThisExpression';\n}\n\nfunction getInitialClassInfo() {\n  return {\n    // Set of nodes where state fields were defined.\n    stateFields: new Set(),\n\n    // Set of names of state fields that we've seen used.\n    usedStateFields: new Set(),\n\n    // Names of local variables that may be pointing to this.state. To\n    // track this properly, we would need to keep track of all locals,\n    // shadowing, assignments, etc. To keep things simple, we only\n    // maintain one set of aliases per method and accept that it will\n    // produce some false negatives.\n    aliases: null,\n  };\n}\n\nfunction isSetStateCall(node) {\n  const unwrappedCalleeNode = astUtil.unwrapTSAsExpression(node.callee);\n\n  return (\n    unwrappedCalleeNode.type === 'MemberExpression'\n    && isThisExpression(unwrappedCalleeNode.object)\n    && getName(unwrappedCalleeNode.property) === 'setState'\n  );\n}\n\nconst messages = {\n  unusedStateField: 'Unused state field: \\'{{name}}\\'',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow definitions of unused state',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-unused-state'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    // Non-null when we are inside a React component ClassDeclaration and we have\n    // not yet encountered any use of this.state which we have chosen not to\n    // analyze. If we encounter any such usage (like this.state being spread as\n    // JSX attributes), then this is again set to null.\n    let classInfo = null;\n\n    function isStateParameterReference(node) {\n      const classMethods = [\n        'shouldComponentUpdate',\n        'componentWillUpdate',\n        'UNSAFE_componentWillUpdate',\n        'getSnapshotBeforeUpdate',\n        'componentDidUpdate',\n      ];\n\n      let scope = getScope(context, node);\n      while (scope) {\n        const parent = scope.block && scope.block.parent;\n        if (\n          parent\n          && parent.type === 'MethodDefinition' && (\n            (parent.static && parent.key.name === 'getDerivedStateFromProps')\n            || classMethods.indexOf(parent.key.name) !== -1\n          )\n          && parent.value.type === 'FunctionExpression'\n          && parent.value.params[1]\n          && parent.value.params[1].name === node.name\n        ) {\n          return true;\n        }\n        scope = scope.upper;\n      }\n\n      return false;\n    }\n\n    // Returns true if the given node is possibly a reference to `this.state` or the state parameter of\n    // a lifecycle method.\n    function isStateReference(node) {\n      node = uncast(node);\n\n      const isDirectStateReference = node.type === 'MemberExpression'\n        && isThisExpression(node.object)\n        && node.property.name === 'state';\n\n      const isAliasedStateReference = node.type === 'Identifier'\n        && classInfo.aliases\n        && classInfo.aliases.has(node.name);\n\n      return isDirectStateReference || isAliasedStateReference || isStateParameterReference(node);\n    }\n\n    // Takes an ObjectExpression node and adds all named Property nodes to the\n    // current set of state fields.\n    function addStateFields(node) {\n      node.properties.filter((prop) => (\n        prop.type === 'Property'\n          && (prop.key.type === 'Literal'\n          || (prop.key.type === 'TemplateLiteral' && prop.key.expressions.length === 0)\n          || (prop.computed === false && prop.key.type === 'Identifier'))\n          && getName(prop.key) !== null\n      )).forEach((prop) => {\n        classInfo.stateFields.add(prop);\n      });\n    }\n\n    // Adds the name of the given node as a used state field if the node is an\n    // Identifier or a Literal. Other node types are ignored.\n    function addUsedStateField(node) {\n      if (!classInfo) {\n        return;\n      }\n      const name = getName(node);\n      if (name) {\n        classInfo.usedStateFields.add(name);\n      }\n    }\n\n    // Records used state fields and new aliases for an ObjectPattern which\n    // destructures `this.state`.\n    function handleStateDestructuring(node) {\n      node.properties.forEach((prop) => {\n        if (prop.type === 'Property') {\n          addUsedStateField(prop.key);\n        } else if (\n          (prop.type === 'ExperimentalRestProperty' || prop.type === 'RestElement')\n          && classInfo.aliases\n        ) {\n          classInfo.aliases.add(getName(prop.argument));\n        }\n      });\n    }\n\n    // Used to record used state fields and new aliases for both\n    // AssignmentExpressions and VariableDeclarators.\n    function handleAssignment(left, right) {\n      const unwrappedRight = astUtil.unwrapTSAsExpression(right);\n\n      switch (left.type) {\n        case 'Identifier':\n          if (isStateReference(unwrappedRight) && classInfo.aliases) {\n            classInfo.aliases.add(left.name);\n          }\n          break;\n        case 'ObjectPattern':\n          if (isStateReference(unwrappedRight)) {\n            handleStateDestructuring(left);\n          } else if (isThisExpression(unwrappedRight) && classInfo.aliases) {\n            left.properties.forEach((prop) => {\n              if (prop.type === 'Property' && getName(prop.key) === 'state') {\n                const name = getName(prop.value);\n                if (name) {\n                  classInfo.aliases.add(name);\n                } else if (prop.value.type === 'ObjectPattern') {\n                  handleStateDestructuring(prop.value);\n                }\n              }\n            });\n          }\n          break;\n        default:\n        // pass\n      }\n    }\n\n    function reportUnusedFields() {\n      // Report all unused state fields.\n      classInfo.stateFields.forEach((node) => {\n        const name = getName(node.key);\n        if (!classInfo.usedStateFields.has(name)) {\n          report(context, messages.unusedStateField, 'unusedStateField', {\n            node,\n            data: {\n              name,\n            },\n          });\n        }\n      });\n    }\n\n    function handleES6ComponentEnter(node) {\n      if (componentUtil.isES6Component(node, context)) {\n        classInfo = getInitialClassInfo();\n      }\n    }\n\n    function handleES6ComponentExit() {\n      if (!classInfo) {\n        return;\n      }\n      reportUnusedFields();\n      classInfo = null;\n    }\n\n    function isGDSFP(node) {\n      const name = getName(node.key);\n      if (\n        !node.static\n        || name !== 'getDerivedStateFromProps'\n        || !node.value\n        || !node.value.params\n        || node.value.params.length < 2 // no `state` argument\n      ) {\n        return false;\n      }\n      return true;\n    }\n\n    return {\n      ClassDeclaration: handleES6ComponentEnter,\n\n      'ClassDeclaration:exit': handleES6ComponentExit,\n\n      ClassExpression: handleES6ComponentEnter,\n\n      'ClassExpression:exit': handleES6ComponentExit,\n\n      ObjectExpression(node) {\n        if (componentUtil.isES5Component(node, context)) {\n          classInfo = getInitialClassInfo();\n        }\n      },\n\n      'ObjectExpression:exit'(node) {\n        if (!classInfo) {\n          return;\n        }\n\n        if (componentUtil.isES5Component(node, context)) {\n          reportUnusedFields();\n          classInfo = null;\n        }\n      },\n\n      CallExpression(node) {\n        if (!classInfo) {\n          return;\n        }\n\n        const unwrappedNode = astUtil.unwrapTSAsExpression(node);\n        const unwrappedArgumentNode = astUtil.unwrapTSAsExpression(unwrappedNode.arguments[0]);\n\n        // If we're looking at a `this.setState({})` invocation, record all the\n        // properties as state fields.\n        if (\n          isSetStateCall(unwrappedNode)\n          && unwrappedNode.arguments.length > 0\n          && unwrappedArgumentNode.type === 'ObjectExpression'\n        ) {\n          addStateFields(unwrappedArgumentNode);\n        } else if (\n          isSetStateCall(unwrappedNode)\n          && unwrappedNode.arguments.length > 0\n          && unwrappedArgumentNode.type === 'ArrowFunctionExpression'\n        ) {\n          const unwrappedBodyNode = astUtil.unwrapTSAsExpression(unwrappedArgumentNode.body);\n\n          if (unwrappedBodyNode.type === 'ObjectExpression') {\n            addStateFields(unwrappedBodyNode);\n          }\n          if (unwrappedArgumentNode.params.length > 0 && classInfo.aliases) {\n            const firstParam = unwrappedArgumentNode.params[0];\n            if (firstParam.type === 'ObjectPattern') {\n              handleStateDestructuring(firstParam);\n            } else {\n              classInfo.aliases.add(getName(firstParam));\n            }\n          }\n        }\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!classInfo) {\n          return;\n        }\n        // If we see state being assigned as a class property using an object\n        // expression, record all the fields of that object as state fields.\n        const unwrappedValueNode = astUtil.unwrapTSAsExpression(node.value);\n\n        const name = getName(node.key);\n        if (\n          name === 'state'\n          && !node.static\n          && unwrappedValueNode\n          && unwrappedValueNode.type === 'ObjectExpression'\n        ) {\n          addStateFields(unwrappedValueNode);\n        }\n\n        if (\n          !node.static\n          && unwrappedValueNode\n          && unwrappedValueNode.type === 'ArrowFunctionExpression'\n        ) {\n          // Create a new set for this.state aliases local to this method.\n          classInfo.aliases = new Set();\n        }\n      },\n\n      'ClassProperty:exit'(node) {\n        if (\n          classInfo\n          && !node.static\n          && node.value\n          && node.value.type === 'ArrowFunctionExpression'\n        ) {\n          // Forget our set of local aliases.\n          classInfo.aliases = null;\n        }\n      },\n\n      'PropertyDefinition, ClassProperty'(node) {\n        if (!isGDSFP(node)) {\n          return;\n        }\n\n        const childScope = getScope(context, node).childScopes.find((x) => x.block === node.value);\n        if (!childScope) {\n          return;\n        }\n        const scope = childScope.variableScope.childScopes.find((x) => x.block === node.value);\n        const stateArg = node.value.params[1]; // probably \"state\"\n        if (!scope || !scope.variables) {\n          return;\n        }\n        const argVar = scope.variables.find((x) => x.name === stateArg.name);\n\n        if (argVar) {\n          const stateRefs = argVar.references;\n\n          stateRefs.forEach((ref) => {\n            const identifier = ref.identifier;\n            if (identifier && identifier.parent && identifier.parent.type === 'MemberExpression') {\n              addUsedStateField(identifier.parent.property);\n            }\n          });\n        }\n      },\n\n      'PropertyDefinition:exit'(node) {\n        if (\n          classInfo\n          && !node.static\n          && node.value\n          && node.value.type === 'ArrowFunctionExpression'\n          && !isGDSFP(node)\n        ) {\n          // Forget our set of local aliases.\n          classInfo.aliases = null;\n        }\n      },\n\n      MethodDefinition() {\n        if (!classInfo) {\n          return;\n        }\n        // Create a new set for this.state aliases local to this method.\n        classInfo.aliases = new Set();\n      },\n\n      'MethodDefinition:exit'() {\n        if (!classInfo) {\n          return;\n        }\n        // Forget our set of local aliases.\n        classInfo.aliases = null;\n      },\n\n      FunctionExpression(node) {\n        if (!classInfo) {\n          return;\n        }\n\n        const parent = node.parent;\n        if (!componentUtil.isES5Component(parent.parent, context)) {\n          return;\n        }\n\n        if (\n          'key' in parent\n          && 'name' in parent.key\n          && parent.key.name === 'getInitialState'\n        ) {\n          const body = node.body.body;\n          const lastBodyNode = body[body.length - 1];\n\n          if (\n            lastBodyNode.type === 'ReturnStatement'\n            && lastBodyNode.argument.type === 'ObjectExpression'\n          ) {\n            addStateFields(lastBodyNode.argument);\n          }\n        } else {\n          // Create a new set for this.state aliases local to this method.\n          classInfo.aliases = new Set();\n        }\n      },\n\n      AssignmentExpression(node) {\n        if (!classInfo) {\n          return;\n        }\n\n        const unwrappedLeft = astUtil.unwrapTSAsExpression(node.left);\n        const unwrappedRight = astUtil.unwrapTSAsExpression(node.right);\n\n        // Check for assignments like `this.state = {}`\n        if (\n          unwrappedLeft.type === 'MemberExpression'\n          && isThisExpression(unwrappedLeft.object)\n          && getName(unwrappedLeft.property) === 'state'\n          && unwrappedRight.type === 'ObjectExpression'\n        ) {\n          // Find the nearest function expression containing this assignment.\n          /** @type {import(\"eslint\").Rule.Node} */\n          let fn = node;\n          while (fn.type !== 'FunctionExpression' && fn.parent) {\n            fn = fn.parent;\n          }\n          // If the nearest containing function is the constructor, then we want\n          // to record all the assigned properties as state fields.\n          if (\n            fn.parent\n            && fn.parent.type === 'MethodDefinition'\n            && fn.parent.kind === 'constructor'\n          ) {\n            addStateFields(unwrappedRight);\n          }\n        } else {\n          // Check for assignments like `alias = this.state` and record the alias.\n          handleAssignment(unwrappedLeft, unwrappedRight);\n        }\n      },\n\n      VariableDeclarator(node) {\n        if (!classInfo || !node.init) {\n          return;\n        }\n        handleAssignment(node.id, node.init);\n      },\n\n      'MemberExpression, OptionalMemberExpression'(node) {\n        if (!classInfo) {\n          return;\n        }\n        if (isStateReference(astUtil.unwrapTSAsExpression(node.object))) {\n          // If we see this.state[foo] access, give up.\n          if (node.computed && node.property.type !== 'Literal') {\n            classInfo = null;\n            return;\n          }\n          // Otherwise, record that we saw this property being accessed.\n          addUsedStateField(node.property);\n        // If we see a `this.state` access in a CallExpression, give up.\n        } else if (isStateReference(node) && astUtil.isCallExpression(node.parent)) {\n          classInfo = null;\n        }\n      },\n\n      JSXSpreadAttribute(node) {\n        if (classInfo && isStateReference(node.argument)) {\n          classInfo = null;\n        }\n      },\n\n      'ExperimentalSpreadProperty, SpreadElement'(node) {\n        if (classInfo && isStateReference(node.argument)) {\n          classInfo = null;\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent usage of referential-type variables as default param in functional component\n * @author Chang Yan\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst report = require('../util/report');\n\nconst FORBIDDEN_TYPES_MAP = {\n  ArrowFunctionExpression: 'arrow function',\n  FunctionExpression: 'function expression',\n  ObjectExpression: 'object literal',\n  ArrayExpression: 'array literal',\n  ClassExpression: 'class expression',\n  NewExpression: 'construction expression',\n  JSXElement: 'JSX element',\n};\n\nconst FORBIDDEN_TYPES = new Set(Object.keys(FORBIDDEN_TYPES_MAP));\nconst MESSAGE_ID = 'forbiddenTypeDefaultParam';\n\nconst messages = {\n  [MESSAGE_ID]: '{{propName}} has a/an {{forbiddenType}} as default prop. This could lead to potential infinite render loop in React. Use a variable reference instead of {{forbiddenType}}.',\n};\nfunction hasUsedObjectDestructuringSyntax(params) {\n  return (\n    params != null\n    && params.length >= 1\n    && params[0].type === 'ObjectPattern'\n  );\n}\n\nfunction verifyDefaultPropsDestructuring(context, properties) {\n  // Loop through each of the default params\n  properties.filter((prop) => prop.type === 'Property' && prop.value.type === 'AssignmentPattern').forEach((prop) => {\n    const propName = prop.key.name;\n    const propDefaultValue = prop.value;\n\n    const propDefaultValueType = propDefaultValue.right.type;\n\n    if (\n      propDefaultValueType === 'Literal'\n      && propDefaultValue.right.regex != null\n    ) {\n      report(context, messages[MESSAGE_ID], MESSAGE_ID, {\n        node: propDefaultValue,\n        data: {\n          propName,\n          forbiddenType: 'regex literal',\n        },\n      });\n    } else if (\n      astUtil.isCallExpression(propDefaultValue.right)\n      && propDefaultValue.right.callee.type === 'Identifier'\n      && propDefaultValue.right.callee.name === 'Symbol'\n    ) {\n      report(context, messages[MESSAGE_ID], MESSAGE_ID, {\n        node: propDefaultValue,\n        data: {\n          propName,\n          forbiddenType: 'Symbol literal',\n        },\n      });\n    } else if (FORBIDDEN_TYPES.has(propDefaultValueType)) {\n      report(context, messages[MESSAGE_ID], MESSAGE_ID, {\n        node: propDefaultValue,\n        data: {\n          propName,\n          forbiddenType: FORBIDDEN_TYPES_MAP[propDefaultValueType],\n        },\n      });\n    }\n  });\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow usage of referential-type variables as default param in functional component',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('no-object-type-as-default-prop'),\n    },\n    messages,\n  },\n  create: Components.detect((context, components) => ({\n    'Program:exit'() {\n      const list = components.list();\n      values(list)\n        .filter((component) => hasUsedObjectDestructuringSyntax(component.node.params))\n        .forEach((component) => {\n          const node = component.node;\n          const properties = node.params[0].properties;\n          verifyDefaultPropsDestructuring(context, properties);\n        });\n    },\n  })),\n};\n", "/**\n * @fileoverview Prevent usage of setState in componentWillUpdate\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst makeNoMethodSetStateRule = require('../util/makeNoMethodSetStateRule');\nconst testReactVersion = require('../util/version').testReactVersion;\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = makeNoMethodSetStateRule(\n  'componentWillUpdate',\n  (context) => testReactVersion(context, '>= 16.3.0')\n);\n", "/**\n * @fileoverview Enforce ES5 or ES6 class for React Components\n * @author Dan Hamilton\n */\n\n'use strict';\n\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  shouldUseES6Class: 'Component should use es6 class instead of createClass',\n  shouldUseCreateClass: 'Component should use createClass instead of es6 class',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce ES5 or ES6 class for React Components',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('prefer-es6-class'),\n    },\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || 'always';\n\n    return {\n      ObjectExpression(node) {\n        if (componentUtil.isES5Component(node, context) && configuration === 'always') {\n          report(context, messages.shouldUseES6Class, 'shouldUseES6Class', {\n            node,\n          });\n        }\n      },\n      ClassDeclaration(node) {\n        if (componentUtil.isES6Component(node, context) && configuration === 'never') {\n          report(context, messages.shouldUseCreateClass, 'shouldUseCreateClass', {\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prefer exact proptype definitions\n */\n\n'use strict';\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst propsUtil = require('../util/props');\nconst propWrapperUtil = require('../util/propWrapper');\nconst variableUtil = require('../util/variable');\nconst report = require('../util/report');\nconst getText = require('../util/eslint').getText;\n\n// -----------------------------------------------------------------------------\n// Rule Definition\n// -----------------------------------------------------------------------------\n\nconst messages = {\n  propTypes: 'Component propTypes should be exact by using {{exactPropWrappers}}.',\n  flow: 'Component flow props should be set with exact objects.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Prefer exact proptype definitions',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('prefer-exact-props'),\n    },\n    messages,\n    schema: [],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const typeAliases = {};\n    const exactWrappers = propWrapperUtil.getExactPropWrapperFunctions(context);\n\n    function getPropTypesErrorMessage() {\n      const formattedWrappers = propWrapperUtil.formatPropWrapperFunctions(exactWrappers);\n      const message = exactWrappers.size > 1 ? `one of ${formattedWrappers}` : formattedWrappers;\n      return { exactPropWrappers: message };\n    }\n\n    function isNonExactObjectTypeAnnotation(node) {\n      return (\n        node\n        && node.type === 'ObjectTypeAnnotation'\n        && node.properties.length > 0\n        && !node.exact\n      );\n    }\n\n    function hasNonExactObjectTypeAnnotation(node) {\n      const typeAnnotation = node.typeAnnotation;\n      return (\n        typeAnnotation\n        && typeAnnotation.typeAnnotation\n        && isNonExactObjectTypeAnnotation(typeAnnotation.typeAnnotation)\n      );\n    }\n\n    function hasGenericTypeAnnotation(node) {\n      const typeAnnotation = node.typeAnnotation;\n      return (\n        typeAnnotation\n        && typeAnnotation.typeAnnotation\n        && typeAnnotation.typeAnnotation.type === 'GenericTypeAnnotation'\n      );\n    }\n\n    function isNonEmptyObjectExpression(node) {\n      return (\n        node\n        && node.type === 'ObjectExpression'\n        && node.properties.length > 0\n      );\n    }\n\n    function isNonExactPropWrapperFunction(node) {\n      return (\n        astUtil.isCallExpression(node)\n        && !propWrapperUtil.isExactPropWrapperFunction(context, getText(context, node.callee))\n      );\n    }\n\n    function reportPropTypesError(node) {\n      report(context, messages.propTypes, 'propTypes', {\n        node,\n        data: getPropTypesErrorMessage(),\n      });\n    }\n\n    function reportFlowError(node) {\n      report(context, messages.flow, 'flow', {\n        node,\n      });\n    }\n\n    return {\n      TypeAlias(node) {\n        // working around an issue with eslint@3 and babel-eslint not finding the TypeAlias in scope\n        typeAliases[node.id.name] = node;\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!propsUtil.isPropTypesDeclaration(node)) {\n          return;\n        }\n\n        if (hasNonExactObjectTypeAnnotation(node)) {\n          reportFlowError(node);\n        } else if (exactWrappers.size > 0 && isNonEmptyObjectExpression(node.value)) {\n          reportPropTypesError(node);\n        } else if (exactWrappers.size > 0 && isNonExactPropWrapperFunction(node.value)) {\n          reportPropTypesError(node);\n        }\n      },\n\n      Identifier(node) {\n        if (!utils.getStatelessComponent(node.parent)) {\n          return;\n        }\n\n        if (hasNonExactObjectTypeAnnotation(node)) {\n          reportFlowError(node);\n        } else if (hasGenericTypeAnnotation(node)) {\n          const identifier = node.typeAnnotation.typeAnnotation.id.name;\n          const typeAlias = typeAliases[identifier];\n          const propsDefinition = typeAlias ? typeAlias.right : null;\n          if (isNonExactObjectTypeAnnotation(propsDefinition)) {\n            reportFlowError(node);\n          }\n        }\n      },\n\n      MemberExpression(node) {\n        if (!propsUtil.isPropTypesDeclaration(node) || exactWrappers.size === 0) {\n          return;\n        }\n\n        const right = node.parent.right;\n        if (isNonEmptyObjectExpression(right)) {\n          reportPropTypesError(node);\n        } else if (isNonExactPropWrapperFunction(right)) {\n          reportPropTypesError(node);\n        } else if (right.type === 'Identifier') {\n          const identifier = right.name;\n          const propsDefinition = variableUtil.findVariableByName(context, node, identifier);\n          if (isNonEmptyObjectExpression(propsDefinition)) {\n            reportPropTypesError(node);\n          } else if (isNonExactPropWrapperFunction(propsDefinition)) {\n            reportPropTypesError(node);\n          }\n        }\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Require component props to be typed as read-only.\n * @author Luke Zapart\n */\n\n'use strict';\n\nconst flatMap = require('array.prototype.flatmap');\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\nfunction isFlowPropertyType(node) {\n  return node.type === 'ObjectTypeProperty';\n}\n\nfunction isTypescriptPropertyType(node) {\n  return node.type === 'TSPropertySignature';\n}\n\nfunction isCovariant(node) {\n  return (node.variance && node.variance.kind === 'plus')\n    || (\n      node.parent\n      && node.parent.parent\n      && node.parent.parent.parent\n      && node.parent.parent.parent.id\n      && node.parent.parent.parent.id.name === '$ReadOnly'\n    );\n}\n\nfunction isReadonly(node) {\n  return (\n    node.typeAnnotation\n    && node.typeAnnotation.parent\n    && node.typeAnnotation.parent.readonly\n  );\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  readOnlyProp: 'Prop \\'{{name}}\\' should be read-only.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce that props are read-only',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('prefer-read-only-props'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [],\n  },\n\n  create: Components.detect((context, components) => {\n    function reportReadOnlyProp(prop, propName, fixer) {\n      report(context, messages.readOnlyProp, 'readOnlyProp', {\n        node: prop.node,\n        data: {\n          name: propName,\n        },\n        fix: fixer,\n      });\n    }\n\n    return {\n      'Program:exit'() {\n        flatMap(\n          values(components.list()),\n          (component) => component.declaredPropTypes || []\n        ).forEach((declaredPropTypes) => {\n          Object.keys(declaredPropTypes).forEach((propName) => {\n            const prop = declaredPropTypes[propName];\n            if (!prop.node) {\n              return;\n            }\n\n            if (isFlowPropertyType(prop.node)) {\n              if (!isCovariant(prop.node)) {\n                reportReadOnlyProp(prop, propName, (fixer) => {\n                  if (!prop.node.variance) {\n                    // Insert covariance\n                    return fixer.insertTextBefore(prop.node, '+');\n                  }\n\n                  // Replace contravariance with covariance\n                  return fixer.replaceText(prop.node.variance, '+');\n                });\n              }\n\n              return;\n            }\n\n            if (isTypescriptPropertyType(prop.node)) {\n              if (!isReadonly(prop.node)) {\n                reportReadOnlyProp(prop, propName, (fixer) => (\n                  fixer.insertTextBefore(prop.node, 'readonly ')\n                ));\n              }\n            }\n          });\n        });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Enforce stateless components to be written as a pure function\n * @author Yannick Croissant\n * @author Alberto Rodríguez\n * @copyright 2015 Alberto Rodríguez. All rights reserved.\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst testReactVersion = require('../util/version').testReactVersion;\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst eslintUtil = require('../util/eslint');\n\nconst getScope = eslintUtil.getScope;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  componentShouldBePure: 'Component should be written as a pure function',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce stateless components to be written as a pure function',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('prefer-stateless-function'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignorePureComponents: {\n          default: false,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    const configuration = context.options[0] || {};\n    const ignorePureComponents = configuration.ignorePureComponents || false;\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    /**\n     * Checks whether a given array of statements is a single call of `super`.\n     * @see eslint no-useless-constructor rule\n     * @param {ASTNode[]} body - An array of statements to check.\n     * @returns {boolean} `true` if the body is a single call of `super`.\n     */\n    function isSingleSuperCall(body) {\n      return (\n        body.length === 1\n        && body[0].type === 'ExpressionStatement'\n        && astUtil.isCallExpression(body[0].expression)\n        && body[0].expression.callee.type === 'Super'\n      );\n    }\n\n    /**\n     * Checks whether a given node is a pattern which doesn't have any side effects.\n     * Default parameters and Destructuring parameters can have side effects.\n     * @see eslint no-useless-constructor rule\n     * @param {ASTNode} node - A pattern node.\n     * @returns {boolean} `true` if the node doesn't have any side effects.\n     */\n    function isSimple(node) {\n      return node.type === 'Identifier' || node.type === 'RestElement';\n    }\n\n    /**\n     * Checks whether a given array of expressions is `...arguments` or not.\n     * `super(...arguments)` passes all arguments through.\n     * @see eslint no-useless-constructor rule\n     * @param {ASTNode[]} superArgs - An array of expressions to check.\n     * @returns {boolean} `true` if the superArgs is `...arguments`.\n     */\n    function isSpreadArguments(superArgs) {\n      return (\n        superArgs.length === 1\n        && superArgs[0].type === 'SpreadElement'\n        && superArgs[0].argument.type === 'Identifier'\n        && superArgs[0].argument.name === 'arguments'\n      );\n    }\n\n    /**\n     * Checks whether given 2 nodes are identifiers which have the same name or not.\n     * @see eslint no-useless-constructor rule\n     * @param {ASTNode} ctorParam - A node to check.\n     * @param {ASTNode} superArg - A node to check.\n     * @returns {boolean} `true` if the nodes are identifiers which have the same\n     *      name.\n     */\n    function isValidIdentifierPair(ctorParam, superArg) {\n      return (\n        ctorParam.type === 'Identifier'\n        && superArg.type === 'Identifier'\n        && ctorParam.name === superArg.name\n      );\n    }\n\n    /**\n     * Checks whether given 2 nodes are a rest/spread pair which has the same values.\n     * @see eslint no-useless-constructor rule\n     * @param {ASTNode} ctorParam - A node to check.\n     * @param {ASTNode} superArg - A node to check.\n     * @returns {boolean} `true` if the nodes are a rest/spread pair which has the\n     *      same values.\n     */\n    function isValidRestSpreadPair(ctorParam, superArg) {\n      return (\n        ctorParam.type === 'RestElement'\n        && superArg.type === 'SpreadElement'\n        && isValidIdentifierPair(ctorParam.argument, superArg.argument)\n      );\n    }\n\n    /**\n     * Checks whether given 2 nodes have the same value or not.\n     * @see eslint no-useless-constructor rule\n     * @param {ASTNode} ctorParam - A node to check.\n     * @param {ASTNode} superArg - A node to check.\n     * @returns {boolean} `true` if the nodes have the same value or not.\n     */\n    function isValidPair(ctorParam, superArg) {\n      return (\n        isValidIdentifierPair(ctorParam, superArg)\n        || isValidRestSpreadPair(ctorParam, superArg)\n      );\n    }\n\n    /**\n     * Checks whether the parameters of a constructor and the arguments of `super()`\n     * have the same values or not.\n     * @see eslint no-useless-constructor rule\n     * @param {ASTNode[]} ctorParams - The parameters of a constructor to check.\n     * @param {ASTNode} superArgs - The arguments of `super()` to check.\n     * @returns {boolean} `true` if those have the same values.\n     */\n    function isPassingThrough(ctorParams, superArgs) {\n      if (ctorParams.length !== superArgs.length) {\n        return false;\n      }\n\n      for (let i = 0; i < ctorParams.length; ++i) {\n        if (!isValidPair(ctorParams[i], superArgs[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    /**\n     * Checks whether the constructor body is a redundant super call.\n     * @see eslint no-useless-constructor rule\n     * @param {Array} body - constructor body content.\n     * @param {Array} ctorParams - The params to check against super call.\n     * @returns {boolean} true if the constructor body is redundant\n     */\n    function isRedundantSuperCall(body, ctorParams) {\n      return (\n        isSingleSuperCall(body)\n        && ctorParams.every(isSimple)\n        && (\n          isSpreadArguments(body[0].expression.arguments)\n          || isPassingThrough(ctorParams, body[0].expression.arguments)\n        )\n      );\n    }\n\n    /**\n     * Check if a given AST node have any other properties the ones available in stateless components\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if the node has at least one other property, false if not.\n     */\n    function hasOtherProperties(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties.some((property) => {\n        const name = astUtil.getPropertyName(property);\n        const isDisplayName = name === 'displayName';\n        const isPropTypes = name === 'propTypes' || ((name === 'props') && property.typeAnnotation);\n        const contextTypes = name === 'contextTypes';\n        const defaultProps = name === 'defaultProps';\n        const isUselessConstructor = property.kind === 'constructor'\n          && !!property.value.body\n          && isRedundantSuperCall(property.value.body.body, property.value.params);\n        const isRender = name === 'render';\n        return !isDisplayName && !isPropTypes && !contextTypes && !defaultProps && !isUselessConstructor && !isRender;\n      });\n    }\n\n    /**\n     * Mark component as pure as declared\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markSCUAsDeclared(node) {\n      components.set(node, {\n        hasSCU: true,\n      });\n    }\n\n    /**\n     * Mark childContextTypes as declared\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markChildContextTypesAsDeclared(node) {\n      components.set(node, {\n        hasChildContextTypes: true,\n      });\n    }\n\n    /**\n     * Mark a setState as used\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markThisAsUsed(node) {\n      components.set(node, {\n        useThis: true,\n      });\n    }\n\n    /**\n     * Mark a props or context as used\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markPropsOrContextAsUsed(node) {\n      components.set(node, {\n        usePropsOrContext: true,\n      });\n    }\n\n    /**\n     * Mark a ref as used\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markRefAsUsed(node) {\n      components.set(node, {\n        useRef: true,\n      });\n    }\n\n    /**\n     * Mark return as invalid\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markReturnAsInvalid(node) {\n      components.set(node, {\n        invalidReturn: true,\n      });\n    }\n\n    /**\n     * Mark a ClassDeclaration as having used decorators\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markDecoratorsAsUsed(node) {\n      components.set(node, {\n        useDecorators: true,\n      });\n    }\n\n    function visitClass(node) {\n      if (ignorePureComponents && componentUtil.isPureComponent(node, context)) {\n        markSCUAsDeclared(node);\n      }\n\n      if (node.decorators && node.decorators.length) {\n        markDecoratorsAsUsed(node);\n      }\n    }\n\n    return {\n      ClassDeclaration: visitClass,\n      ClassExpression: visitClass,\n\n      // Mark `this` destructuring as a usage of `this`\n      VariableDeclarator(node) {\n        // Ignore destructuring on other than `this`\n        if (!node.id || node.id.type !== 'ObjectPattern' || !node.init || node.init.type !== 'ThisExpression') {\n          return;\n        }\n        // Ignore `props` and `context`\n        const useThis = node.id.properties.some((property) => {\n          const name = astUtil.getPropertyName(property);\n          return name !== 'props' && name !== 'context';\n        });\n        if (!useThis) {\n          markPropsOrContextAsUsed(node);\n          return;\n        }\n        markThisAsUsed(node);\n      },\n\n      // Mark `this` usage\n      MemberExpression(node) {\n        if (node.object.type !== 'ThisExpression') {\n          if (node.property && node.property.name === 'childContextTypes') {\n            const component = utils.getRelatedComponent(node);\n            if (!component) {\n              return;\n            }\n            markChildContextTypesAsDeclared(component.node);\n          }\n          return;\n        // Ignore calls to `this.props` and `this.context`\n        }\n        if (\n          (node.property.name || node.property.value) === 'props'\n          || (node.property.name || node.property.value) === 'context'\n        ) {\n          markPropsOrContextAsUsed(node);\n          return;\n        }\n        markThisAsUsed(node);\n      },\n\n      // Mark `ref` usage\n      JSXAttribute(node) {\n        const name = getText(context, node.name);\n        if (name !== 'ref') {\n          return;\n        }\n        markRefAsUsed(node);\n      },\n\n      // Mark `render` that do not return some JSX\n      ReturnStatement(node) {\n        let blockNode;\n        let scope = getScope(context, node);\n        while (scope) {\n          blockNode = scope.block && scope.block.parent;\n          if (blockNode && (blockNode.type === 'MethodDefinition' || blockNode.type === 'Property')) {\n            break;\n          }\n          scope = scope.upper;\n        }\n        const isRender = blockNode\n          && blockNode.key\n          && blockNode.key.name === 'render';\n        const allowNull = testReactVersion(context, '>= 15.0.0'); // Stateless components can return null since React 15\n        const isReturningJSX = utils.isReturningJSX(node, !allowNull);\n        const isReturningNull = node.argument && (node.argument.value === null || node.argument.value === false);\n        if (\n          !isRender\n          || (allowNull && (isReturningJSX || isReturningNull))\n          || (!allowNull && isReturningJSX)\n        ) {\n          return;\n        }\n        markReturnAsInvalid(node);\n      },\n\n      'Program:exit'() {\n        const list = components.list();\n        values(list)\n          .filter((component) => (\n            !hasOtherProperties(component.node)\n            && !component.useThis\n            && !component.useRef\n            && !component.invalidReturn\n            && !component.hasChildContextTypes\n            && !component.useDecorators\n            && !component.hasSCU\n            && (\n              componentUtil.isES5Component(component.node, context)\n              || componentUtil.isES6Component(component.node, context)\n            )\n          ))\n          .forEach((component) => {\n            report(context, messages.componentShouldBePure, 'componentShouldBePure', {\n              node: component.node,\n            });\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Prevent missing props validation in a React component definition\n * @author Yannick Croissant\n */\n\n'use strict';\n\n// As for exceptions for props.children or props.className (and alike) look at\n// https://github.com/jsx-eslint/eslint-plugin-react/issues/7\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  missingPropType: '\\'{{name}}\\' is missing in props validation',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow missing props validation in a React component definition',\n      category: 'Best Practices',\n      recommended: true,\n      url: docsUrl('prop-types'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignore: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        customValidators: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        skipUndeclared: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    const ignored = configuration.ignore || [];\n    const skipUndeclared = configuration.skipUndeclared || false;\n\n    /**\n     * Checks if the prop is ignored\n     * @param {string} name Name of the prop to check.\n     * @returns {boolean} True if the prop is ignored, false if not.\n     */\n    function isIgnored(name) {\n      return ignored.indexOf(name) !== -1;\n    }\n\n    /**\n     * Checks if the component must be validated\n     * @param {Object} component The component to process\n     * @returns {boolean} True if the component must be validated, false if not.\n     */\n    function mustBeValidated(component) {\n      const isSkippedByConfig = skipUndeclared && typeof component.declaredPropTypes === 'undefined';\n      return !!(\n        component\n        && component.usedPropTypes\n        && !component.ignorePropsValidation\n        && !isSkippedByConfig\n      );\n    }\n\n    /**\n     * Internal: Checks if the prop is declared\n     * @param {Object} declaredPropTypes Description of propTypes declared in the current component\n     * @param {string[]} keyList Dot separated name of the prop to check.\n     * @returns {boolean} True if the prop is declared, false if not.\n     */\n    function internalIsDeclaredInComponent(declaredPropTypes, keyList) {\n      for (let i = 0, j = keyList.length; i < j; i++) {\n        const key = keyList[i];\n        const propType = (\n          declaredPropTypes && (\n            // Check if this key is declared\n            (declaredPropTypes[key] // If not, check if this type accepts any key\n            || declaredPropTypes.__ANY_KEY__) // eslint-disable-line no-underscore-dangle\n          )\n        );\n\n        if (!propType) {\n          // If it's a computed property, we can't make any further analysis, but is valid\n          return key === '__COMPUTED_PROP__';\n        }\n        if (typeof propType === 'object' && !propType.type) {\n          return true;\n        }\n        // Consider every children as declared\n        if (propType.children === true || propType.containsUnresolvedSpread || propType.containsIndexers) {\n          return true;\n        }\n        if (propType.acceptedProperties) {\n          return key in propType.acceptedProperties;\n        }\n        if (propType.type === 'union') {\n          // If we fall in this case, we know there is at least one complex type in the union\n          if (i + 1 >= j) {\n            // this is the last key, accept everything\n            return true;\n          }\n          // non trivial, check all of them\n          const unionTypes = propType.children;\n          const unionPropType = {};\n          for (let k = 0, z = unionTypes.length; k < z; k++) {\n            unionPropType[key] = unionTypes[k];\n            const isValid = internalIsDeclaredInComponent(\n              unionPropType,\n              keyList.slice(i)\n            );\n            if (isValid) {\n              return true;\n            }\n          }\n\n          // every possible union were invalid\n          return false;\n        }\n        declaredPropTypes = propType.children;\n      }\n      return true;\n    }\n\n    /**\n     * Checks if the prop is declared\n     * @param {ASTNode} node The AST node being checked.\n     * @param {string[]} names List of names of the prop to check.\n     * @returns {boolean} True if the prop is declared, false if not.\n     */\n    function isDeclaredInComponent(node, names) {\n      while (node) {\n        const component = components.get(node);\n\n        const isDeclared = component && component.confidence >= 2\n          && internalIsDeclaredInComponent(component.declaredPropTypes || {}, names);\n\n        if (isDeclared) {\n          return true;\n        }\n\n        node = node.parent;\n      }\n      return false;\n    }\n\n    /**\n     * Reports undeclared proptypes for a given component\n     * @param {Object} component The component to process\n     */\n    function reportUndeclaredPropTypes(component) {\n      const undeclareds = component.usedPropTypes.filter((propType) => (\n        propType.node\n        && !isIgnored(propType.allNames[0])\n        && !isDeclaredInComponent(component.node, propType.allNames)\n      ));\n      undeclareds.forEach((propType) => {\n        report(context, messages.missingPropType, 'missingPropType', {\n          node: propType.node,\n          data: {\n            name: propType.allNames.join('.').replace(/\\.__COMPUTED_PROP__/g, '[]'),\n          },\n        });\n      });\n    }\n\n    /**\n     * @param {Object} component The current component to process\n     * @param {Array} list The all components to process\n     * @returns {boolean} True if the component is nested False if not.\n     */\n    function checkNestedComponent(component, list) {\n      const componentIsMemo = component.node.callee && component.node.callee.name === 'memo';\n      const argumentIsForwardRef = component.node.arguments && component.node.arguments[0].callee && component.node.arguments[0].callee.name === 'forwardRef';\n      if (componentIsMemo && argumentIsForwardRef) {\n        const forwardComponent = list.find(\n          (innerComponent) => (\n            innerComponent.node.range[0] === component.node.arguments[0].range[0]\n            && innerComponent.node.range[0] === component.node.arguments[0].range[0]\n          ));\n\n        const isValidated = mustBeValidated(forwardComponent);\n        const isIgnorePropsValidation = forwardComponent.ignorePropsValidation;\n\n        return isIgnorePropsValidation || isValidated;\n      }\n    }\n\n    return {\n      'Program:exit'() {\n        const list = components.list();\n        // Report undeclared proptypes for all classes\n        values(list)\n          .filter((component) => mustBeValidated(component))\n          .forEach((component) => {\n            if (checkNestedComponent(component, values(list))) return;\n            reportUndeclaredPropTypes(component);\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Prevent missing React when using JSX\n * @author Glen Mailer\n */\n\n'use strict';\n\nconst variableUtil = require('../util/variable');\nconst pragmaUtil = require('../util/pragma');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// -----------------------------------------------------------------------------\n// Rule Definition\n// -----------------------------------------------------------------------------\n\nconst messages = {\n  notInScope: '\\'{{name}}\\' must be in scope when using JSX',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow missing React when using JSX',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('react-in-jsx-scope'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create(context) {\n    const pragma = pragmaUtil.getFromContext(context);\n\n    function checkIfReactIsInScope(node) {\n      if (variableUtil.getVariableFromContext(context, node, pragma)) {\n        return;\n      }\n      report(context, messages.notInScope, 'notInScope', {\n        node,\n        data: {\n          name: pragma,\n        },\n      });\n    }\n\n    return {\n      JSXOpeningElement: checkIfReactIsInScope,\n      JSXOpeningFragment: checkIfReactIsInScope,\n    };\n  },\n};\n", "/**\n * @fileOverview Enforce a defaultProps definition for every prop that is not a required prop.\n * @author Vitor Balocco\n */\n\n'use strict';\n\nconst entries = require('object.entries');\nconst values = require('object.values');\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noDefaultWithRequired: 'propType \"{{name}}\" is required and should not have a defaultProps declaration.',\n  shouldHaveDefault: 'propType \"{{name}}\" is not required, but has no corresponding defaultProps declaration.',\n  noDefaultPropsWithFunction: 'Don’t use defaultProps with function components.',\n  shouldAssignObjectDefault: 'propType \"{{name}}\" is not required, but has no corresponding default argument value.',\n  destructureInSignature: 'Must destructure props in the function signature to initialize an optional prop.',\n};\n\nfunction isPropWithNoDefaulVal(prop) {\n  if (prop.type === 'RestElement' || prop.type === 'ExperimentalRestProperty') {\n    return false;\n  }\n  return prop.value.type !== 'AssignmentPattern';\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce a defaultProps definition for every prop that is not a required prop',\n      category: 'Best Practices',\n      url: docsUrl('require-default-props'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        forbidDefaultForRequired: {\n          type: 'boolean',\n        },\n        classes: {\n          enum: ['defaultProps', 'ignore'],\n        },\n        functions: {\n          enum: ['defaultArguments', 'defaultProps', 'ignore'],\n        },\n        /**\n         * @deprecated\n         */\n        ignoreFunctionalComponents: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    const forbidDefaultForRequired = configuration.forbidDefaultForRequired || false;\n    const classes = configuration.classes || 'defaultProps';\n    /**\n     * @todo\n     * - Remove ignoreFunctionalComponents\n     * - Change default to 'defaultArguments'\n     */\n    const functions = configuration.ignoreFunctionalComponents\n      ? 'ignore'\n      : configuration.functions || 'defaultProps';\n\n    /**\n     * Reports all propTypes passed in that don't have a defaultProps counterpart.\n     * @param  {Object[]} propTypes    List of propTypes to check.\n     * @param  {Object}   defaultProps Object of defaultProps to check. Keys are the props names.\n     * @return {void}\n     */\n    function reportPropTypesWithoutDefault(propTypes, defaultProps) {\n      entries(propTypes).forEach((propType) => {\n        const propName = propType[0];\n        const prop = propType[1];\n\n        if (!prop.node) {\n          return;\n        }\n        if (prop.isRequired) {\n          if (forbidDefaultForRequired && defaultProps[propName]) {\n            report(context, messages.noDefaultWithRequired, 'noDefaultWithRequired', {\n              node: prop.node,\n              data: { name: propName },\n            });\n          }\n          return;\n        }\n\n        if (defaultProps[propName]) {\n          return;\n        }\n\n        report(context, messages.shouldHaveDefault, 'shouldHaveDefault', {\n          node: prop.node,\n          data: { name: propName },\n        });\n      });\n    }\n\n    /**\n     * If functions option is 'defaultArguments', reports defaultProps is used and all params that doesn't initialized.\n     * @param {Object} componentNode Node of component.\n     * @param {Object[]} declaredPropTypes List of propTypes to check `isRequired`.\n     * @param {Object} defaultProps Object of defaultProps to check used.\n     */\n    function reportFunctionComponent(componentNode, declaredPropTypes, defaultProps) {\n      if (defaultProps) {\n        report(context, messages.noDefaultPropsWithFunction, 'noDefaultPropsWithFunction', {\n          node: componentNode,\n        });\n      }\n\n      const props = componentNode.params[0];\n      const propTypes = declaredPropTypes;\n\n      if (!props) {\n        return;\n      }\n\n      if (props.type === 'Identifier') {\n        const hasOptionalProp = values(propTypes).some((propType) => !propType.isRequired);\n        if (hasOptionalProp) {\n          report(context, messages.destructureInSignature, 'destructureInSignature', {\n            node: props,\n          });\n        }\n      } else if (props.type === 'ObjectPattern') {\n        // Filter required props with default value and report error\n        props.properties.filter((prop) => {\n          const propName = prop && prop.key && prop.key.name;\n          const isPropRequired = propTypes[propName] && propTypes[propName].isRequired;\n          return propTypes[propName] && isPropRequired && !isPropWithNoDefaulVal(prop);\n        }).forEach((prop) => {\n          report(context, messages.noDefaultWithRequired, 'noDefaultWithRequired', {\n            node: prop,\n            data: { name: prop.key.name },\n          });\n        });\n\n        // Filter non required props with no default value and report error\n        props.properties.filter((prop) => {\n          const propName = prop && prop.key && prop.key.name;\n          const isPropRequired = propTypes[propName] && propTypes[propName].isRequired;\n          return propTypes[propName] && !isPropRequired && isPropWithNoDefaulVal(prop);\n        }).forEach((prop) => {\n          report(context, messages.shouldAssignObjectDefault, 'shouldAssignObjectDefault', {\n            node: prop,\n            data: { name: prop.key.name },\n          });\n        });\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------\n\n    return {\n      'Program:exit'() {\n        const list = components.list();\n\n        values(list).filter((component) => {\n          if (functions === 'ignore' && astUtil.isFunctionLike(component.node)) {\n            return false;\n          }\n          if (classes === 'ignore' && astUtil.isClass(component.node)) {\n            return false;\n          }\n\n          // If this defaultProps is \"unresolved\", then we should ignore this component and not report\n          // any errors for it, to avoid false-positives with e.g. external defaultProps declarations or spread operators.\n          if (component.defaultProps === 'unresolved') {\n            return false;\n          }\n          return component.declaredPropTypes !== undefined;\n        }).forEach((component) => {\n          if (functions === 'defaultArguments' && astUtil.isFunctionLike(component.node)) {\n            reportFunctionComponent(\n              component.node,\n              component.declaredPropTypes,\n              component.defaultProps\n            );\n          } else {\n            reportPropTypesWithoutDefault(\n              component.declaredPropTypes,\n              component.defaultProps || {}\n            );\n          }\n        });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Enforce React components to have a shouldComponentUpdate method\n * @author Evgueni Naverniouk\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst getScope = require('../util/eslint').getScope;\n\nconst messages = {\n  noShouldComponentUpdate: 'Component is not optimized. Please add a shouldComponentUpdate method.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce React components to have a shouldComponentUpdate method',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('require-optimization'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        allowDecorators: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components) => {\n    const configuration = context.options[0] || {};\n    const allowDecorators = configuration.allowDecorators || [];\n\n    /**\n     * Checks to see if our component is decorated by PureRenderMixin via reactMixin\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if node is decorated with a PureRenderMixin, false if not.\n     */\n    function hasPureRenderDecorator(node) {\n      if (node.decorators && node.decorators.length) {\n        for (let i = 0, l = node.decorators.length; i < l; i++) {\n          if (\n            node.decorators[i].expression\n            && node.decorators[i].expression.callee\n            && node.decorators[i].expression.callee.object\n            && node.decorators[i].expression.callee.object.name === 'reactMixin'\n            && node.decorators[i].expression.callee.property\n            && node.decorators[i].expression.callee.property.name === 'decorate'\n            && node.decorators[i].expression.arguments\n            && node.decorators[i].expression.arguments.length\n            && node.decorators[i].expression.arguments[0].name === 'PureRenderMixin'\n          ) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Checks to see if our component is custom decorated\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if node is decorated name with a custom decorated, false if not.\n     */\n    function hasCustomDecorator(node) {\n      const allowLength = allowDecorators.length;\n\n      if (allowLength && node.decorators && node.decorators.length) {\n        for (let i = 0; i < allowLength; i++) {\n          for (let j = 0, l = node.decorators.length; j < l; j++) {\n            const expression = node.decorators[j].expression;\n            if (\n              expression\n              && expression.name === allowDecorators[i]\n            ) {\n              return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Checks if we are declaring a shouldComponentUpdate method\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if we are declaring a shouldComponentUpdate method, false if not.\n     */\n    function isSCUDeclared(node) {\n      return !!node && node.name === 'shouldComponentUpdate';\n    }\n\n    /**\n     * Checks if we are declaring a PureRenderMixin mixin\n     * @param {ASTNode} node The AST node being checked.\n     * @returns {boolean} True if we are declaring a PureRenderMixin method, false if not.\n     */\n    function isPureRenderDeclared(node) {\n      let hasPR = false;\n      if (node.value && node.value.elements) {\n        for (let i = 0, l = node.value.elements.length; i < l; i++) {\n          if (node.value.elements[i] && node.value.elements[i].name === 'PureRenderMixin') {\n            hasPR = true;\n            break;\n          }\n        }\n      }\n\n      return (\n        !!node\n        && node.key.name === 'mixins'\n        && hasPR\n      );\n    }\n\n    /**\n     * Mark shouldComponentUpdate as declared\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markSCUAsDeclared(node) {\n      components.set(node, {\n        hasSCU: true,\n      });\n    }\n\n    /**\n     * Reports missing optimization for a given component\n     * @param {Object} component The component to process\n     */\n    function reportMissingOptimization(component) {\n      report(context, messages.noShouldComponentUpdate, 'noShouldComponentUpdate', {\n        node: component.node,\n      });\n    }\n\n    /**\n     * Checks if we are declaring function in class\n     * @param {ASTNode} node\n     * @returns {boolean} True if we are declaring function in class, false if not.\n     */\n    function isFunctionInClass(node) {\n      let blockNode;\n      let scope = getScope(context, node);\n      while (scope) {\n        blockNode = scope.block;\n        if (blockNode && blockNode.type === 'ClassDeclaration') {\n          return true;\n        }\n        scope = scope.upper;\n      }\n\n      return false;\n    }\n\n    return {\n      ArrowFunctionExpression(node) {\n        // Skip if the function is declared in the class\n        if (isFunctionInClass(node)) {\n          return;\n        }\n        // Stateless Functional Components cannot be optimized (yet)\n        markSCUAsDeclared(node);\n      },\n\n      ClassDeclaration(node) {\n        if (!(\n          hasPureRenderDecorator(node)\n          || hasCustomDecorator(node)\n          || componentUtil.isPureComponent(node, context)\n        )) {\n          return;\n        }\n        markSCUAsDeclared(node);\n      },\n\n      FunctionDeclaration(node) {\n        // Skip if the function is declared in the class\n        if (isFunctionInClass(node)) {\n          return;\n        }\n        // Stateless Functional Components cannot be optimized (yet)\n        markSCUAsDeclared(node);\n      },\n\n      FunctionExpression(node) {\n        // Skip if the function is declared in the class\n        if (isFunctionInClass(node)) {\n          return;\n        }\n        // Stateless Functional Components cannot be optimized (yet)\n        markSCUAsDeclared(node);\n      },\n\n      MethodDefinition(node) {\n        if (!isSCUDeclared(node.key)) {\n          return;\n        }\n        markSCUAsDeclared(node);\n      },\n\n      ObjectExpression(node) {\n        // Search for the shouldComponentUpdate declaration\n        const found = node.properties.some((property) => (\n          property.key\n          && (isSCUDeclared(property.key) || isPureRenderDeclared(property))\n        ));\n        if (found) {\n          markSCUAsDeclared(node);\n        }\n      },\n\n      'Program:exit'() {\n        // Report missing shouldComponentUpdate for all components\n        values(components.list())\n          .filter((component) => !component.hasSCU)\n          .forEach((component) => {\n            reportMissingOptimization(component);\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Enforce ES5 or ES6 class for returning value in render function.\n * @author Mark Orel\n */\n\n'use strict';\n\nconst values = require('object.values');\n\nconst Components = require('../util/Components');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst getAncestors = require('../util/eslint').getAncestors;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  noRenderReturn: 'Your render method should have a return statement',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce ES5 or ES6 class for returning value in render function',\n      category: 'Possible Errors',\n      recommended: true,\n      url: docsUrl('require-render-return'),\n    },\n\n    messages,\n\n    schema: [],\n  },\n\n  create: Components.detect((context, components) => {\n    /**\n     * Mark a return statement as present\n     * @param {ASTNode} node The AST node being checked.\n     */\n    function markReturnStatementPresent(node) {\n      components.set(node, {\n        hasReturnStatement: true,\n      });\n    }\n\n    /**\n     * Find render method in a given AST node\n     * @param {ASTNode} node The component to find render method.\n     * @returns {ASTNode} Method node if found, undefined if not.\n     */\n    function findRenderMethod(node) {\n      const properties = astUtil.getComponentProperties(node);\n      return properties\n        .filter((property) => astUtil.getPropertyName(property) === 'render' && property.value)\n        .find((property) => astUtil.isFunctionLikeExpression(property.value));\n    }\n\n    return {\n      ReturnStatement(node) {\n        const ancestors = getAncestors(context, node).reverse();\n        let depth = 0;\n        ancestors.forEach((ancestor) => {\n          if (/Function(Expression|Declaration)$/.test(ancestor.type)) {\n            depth += 1;\n          }\n          if (\n            /(MethodDefinition|Property|ClassProperty|PropertyDefinition)$/.test(ancestor.type)\n            && astUtil.getPropertyName(ancestor) === 'render'\n            && depth <= 1\n          ) {\n            markReturnStatementPresent(node);\n          }\n        });\n      },\n\n      ArrowFunctionExpression(node) {\n        if (node.expression === false || astUtil.getPropertyName(node.parent) !== 'render') {\n          return;\n        }\n        markReturnStatementPresent(node);\n      },\n\n      'Program:exit'() {\n        values(components.list())\n          .filter((component) => (\n            findRenderMethod(component.node)\n            && !component.hasReturnStatement\n            && (\n              componentUtil.isES5Component(component.node, context)\n              || componentUtil.isES6Component(component.node, context)\n            )\n          ))\n          .forEach((component) => {\n            report(context, messages.noRenderReturn, 'noRenderReturn', {\n              node: findRenderMethod(component.node),\n            });\n          });\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Prevent extra closing tags for components without children\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst docsUrl = require('../util/docsUrl');\nconst jsxUtil = require('../util/jsx');\nconst report = require('../util/report');\n\nconst optionDefaults = { component: true, html: true };\n\nfunction isComponent(node) {\n  return (\n    node.name\n    && (node.name.type === 'JSXIdentifier' || node.name.type === 'JSXMemberExpression')\n    && !jsxUtil.isDOMComponent(node)\n  );\n}\n\nfunction childrenIsEmpty(node) {\n  return node.parent.children.length === 0;\n}\n\nfunction childrenIsMultilineSpaces(node) {\n  const childrens = node.parent.children;\n\n  return (\n    childrens.length === 1\n    && (childrens[0].type === 'Literal' || childrens[0].type === 'JSXText')\n    && childrens[0].value.indexOf('\\n') !== -1\n    && childrens[0].value.replace(/(?!\\xA0)\\s/g, '') === ''\n  );\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  notSelfClosing: 'Empty components are self-closing',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow extra closing tags for components without children',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('self-closing-comp'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        component: {\n          default: optionDefaults.component,\n          type: 'boolean',\n        },\n        html: {\n          default: optionDefaults.html,\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    function isShouldBeSelfClosed(node) {\n      const configuration = Object.assign({}, optionDefaults, context.options[0]);\n      return (\n        (configuration.component && isComponent(node))\n        || (configuration.html && jsxUtil.isDOMComponent(node))\n      ) && !node.selfClosing && (childrenIsEmpty(node) || childrenIsMultilineSpaces(node));\n    }\n\n    return {\n      JSXOpeningElement(node) {\n        if (!isShouldBeSelfClosed(node)) {\n          return;\n        }\n        report(context, messages.notSelfClosing, 'notSelfClosing', {\n          node,\n          fix(fixer) {\n            // Represents the last character of the JSXOpeningElement, the '>' character\n            const openingElementEnding = node.range[1] - 1;\n            // Represents the last character of the JSXClosingElement, the '>' character\n            const closingElementEnding = node.parent.closingElement.range[1];\n\n            // Replace />.*<\\/.*>/ with '/>'\n            const range = [openingElementEnding, closingElementEnding];\n            return fixer.replaceTextRange(range, ' />');\n          },\n        });\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce component methods order\n * @author Yannick Croissant\n */\n\n'use strict';\n\nconst has = require('hasown');\nconst entries = require('object.entries');\nconst values = require('object.values');\nconst arrayIncludes = require('array-includes');\n\nconst Components = require('../util/Components');\nconst astUtil = require('../util/ast');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\nconst defaultConfig = {\n  order: [\n    'static-methods',\n    'lifecycle',\n    'everything-else',\n    'render',\n  ],\n  groups: {\n    lifecycle: [\n      'displayName',\n      'propTypes',\n      'contextTypes',\n      'childContextTypes',\n      'mixins',\n      'statics',\n      'defaultProps',\n      'constructor',\n      'getDefaultProps',\n      'state',\n      'getInitialState',\n      'getChildContext',\n      'getDerivedStateFromProps',\n      'componentWillMount',\n      'UNSAFE_componentWillMount',\n      'componentDidMount',\n      'componentWillReceiveProps',\n      'UNSAFE_componentWillReceiveProps',\n      'shouldComponentUpdate',\n      'componentWillUpdate',\n      'UNSAFE_componentWillUpdate',\n      'getSnapshotBeforeUpdate',\n      'componentDidUpdate',\n      'componentDidCatch',\n      'componentWillUnmount',\n    ],\n  },\n};\n\n/**\n * Get the methods order from the default config and the user config\n * @param {Object} userConfig The user configuration.\n * @returns {Array} Methods order\n */\nfunction getMethodsOrder(userConfig) {\n  userConfig = userConfig || {};\n\n  const groups = Object.assign({}, defaultConfig.groups, userConfig.groups);\n  const order = userConfig.order || defaultConfig.order;\n\n  let config = [];\n  let entry;\n  for (let i = 0, j = order.length; i < j; i++) {\n    entry = order[i];\n    if (has(groups, entry)) {\n      config = config.concat(groups[entry]);\n    } else {\n      config.push(entry);\n    }\n  }\n\n  return config;\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  unsortedProps: '{{propA}} should be placed {{position}} {{propB}}',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce component methods order',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('sort-comp'),\n    },\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        order: {\n          type: 'array',\n          items: {\n            type: 'string',\n          },\n        },\n        groups: {\n          type: 'object',\n          patternProperties: {\n            '^.*$': {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create: Components.detect((context, components) => {\n    /** @satisfies {Record<string, { node: ASTNode, score: number, closest: { distance: number, ref: { node: null | ASTNode, index: number } } }>} */\n    const errors = {};\n    const methodsOrder = getMethodsOrder(context.options[0]);\n\n    // --------------------------------------------------------------------------\n    // Public\n    // --------------------------------------------------------------------------\n\n    const regExpRegExp = /\\/(.*)\\/([gimsuy]*)/;\n\n    /**\n     * Get indexes of the matching patterns in methods order configuration\n     * @param {Object} method - Method metadata.\n     * @returns {Array} The matching patterns indexes. Return [Infinity] if there is no match.\n     */\n    function getRefPropIndexes(method) {\n      const methodGroupIndexes = [];\n\n      methodsOrder.forEach((currentGroup, groupIndex) => {\n        if (currentGroup === 'getters') {\n          if (method.getter) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        } else if (currentGroup === 'setters') {\n          if (method.setter) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        } else if (currentGroup === 'type-annotations') {\n          if (method.typeAnnotation) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        } else if (currentGroup === 'static-variables') {\n          if (method.staticVariable) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        } else if (currentGroup === 'static-methods') {\n          if (method.staticMethod) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        } else if (currentGroup === 'instance-variables') {\n          if (method.instanceVariable) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        } else if (currentGroup === 'instance-methods') {\n          if (method.instanceMethod) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        } else if (arrayIncludes([\n          'displayName',\n          'propTypes',\n          'contextTypes',\n          'childContextTypes',\n          'mixins',\n          'statics',\n          'defaultProps',\n          'constructor',\n          'getDefaultProps',\n          'state',\n          'getInitialState',\n          'getChildContext',\n          'getDerivedStateFromProps',\n          'componentWillMount',\n          'UNSAFE_componentWillMount',\n          'componentDidMount',\n          'componentWillReceiveProps',\n          'UNSAFE_componentWillReceiveProps',\n          'shouldComponentUpdate',\n          'componentWillUpdate',\n          'UNSAFE_componentWillUpdate',\n          'getSnapshotBeforeUpdate',\n          'componentDidUpdate',\n          'componentDidCatch',\n          'componentWillUnmount',\n          'render',\n        ], currentGroup)) {\n          if (currentGroup === method.name) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        } else {\n          // Is the group a regex?\n          const isRegExp = currentGroup.match(regExpRegExp);\n          if (isRegExp) {\n            const isMatching = new RegExp(isRegExp[1], isRegExp[2]).test(method.name);\n            if (isMatching) {\n              methodGroupIndexes.push(groupIndex);\n            }\n          } else if (currentGroup === method.name) {\n            methodGroupIndexes.push(groupIndex);\n          }\n        }\n      });\n\n      // No matching pattern, return 'everything-else' index\n      if (methodGroupIndexes.length === 0) {\n        const everythingElseIndex = methodsOrder.indexOf('everything-else');\n\n        if (everythingElseIndex !== -1) {\n          methodGroupIndexes.push(everythingElseIndex);\n        } else {\n          // No matching pattern and no 'everything-else' group\n          methodGroupIndexes.push(Infinity);\n        }\n      }\n\n      return methodGroupIndexes;\n    }\n\n    /**\n     * Get properties name\n     * @param {Object} node - Property.\n     * @returns {string} Property name.\n     */\n    function getPropertyName(node) {\n      if (node.kind === 'get') {\n        return 'getter functions';\n      }\n\n      if (node.kind === 'set') {\n        return 'setter functions';\n      }\n\n      return astUtil.getPropertyName(node);\n    }\n\n    /**\n     * Store a new error in the error list\n     * @param {Object} propA - Mispositioned property.\n     * @param {Object} propB - Reference property.\n     */\n    function storeError(propA, propB) {\n      // Initialize the error object if needed\n      if (!errors[propA.index]) {\n        errors[propA.index] = {\n          node: propA.node,\n          score: 0,\n          closest: {\n            distance: Infinity,\n            ref: {\n              node: null,\n              index: 0,\n            },\n          },\n        };\n      }\n      // Increment the prop score\n      errors[propA.index].score += 1;\n      // Stop here if we already have pushed another node at this position\n      if (getPropertyName(errors[propA.index].node) !== getPropertyName(propA.node)) {\n        return;\n      }\n      // Stop here if we already have a closer reference\n      if (Math.abs(propA.index - propB.index) > errors[propA.index].closest.distance) {\n        return;\n      }\n      // Update the closest reference\n      errors[propA.index].closest.distance = Math.abs(propA.index - propB.index);\n      errors[propA.index].closest.ref.node = propB.node;\n      errors[propA.index].closest.ref.index = propB.index;\n    }\n\n    /**\n     * Dedupe errors, only keep the ones with the highest score and delete the others\n     */\n    function dedupeErrors() {\n      entries(errors).forEach((entry) => {\n        const i = entry[0];\n        const error = entry[1];\n\n        const index = error.closest.ref.index;\n        if (errors[index]) {\n          if (error.score > errors[index].score) {\n            delete errors[index];\n          } else {\n            delete errors[i];\n          }\n        }\n      });\n    }\n\n    /**\n     * Report errors\n     */\n    function reportErrors() {\n      dedupeErrors();\n\n      entries(errors).forEach((entry) => {\n        const nodeA = entry[1].node;\n        const nodeB = entry[1].closest.ref.node;\n        const indexA = entry[0];\n        const indexB = entry[1].closest.ref.index;\n\n        report(context, messages.unsortedProps, 'unsortedProps', {\n          node: nodeA,\n          data: {\n            propA: getPropertyName(nodeA),\n            propB: getPropertyName(nodeB),\n            position: indexA < indexB ? 'before' : 'after',\n          },\n        });\n      });\n    }\n\n    /**\n     * Compare two properties and find out if they are in the right order\n     * @param {Array} propertiesInfos Array containing all the properties metadata.\n     * @param {Object} propA First property name and metadata\n     * @param {Object} propB Second property name.\n     * @returns {Object} Object containing a correct true/false flag and the correct indexes for the two properties.\n     */\n    function comparePropsOrder(propertiesInfos, propA, propB) {\n      let i;\n      let j;\n      let k;\n      let l;\n      let refIndexA;\n      let refIndexB;\n\n      // Get references indexes (the correct position) for given properties\n      const refIndexesA = getRefPropIndexes(propA);\n      const refIndexesB = getRefPropIndexes(propB);\n\n      // Get current indexes for given properties\n      const classIndexA = propertiesInfos.indexOf(propA);\n      const classIndexB = propertiesInfos.indexOf(propB);\n\n      // Loop around the references indexes for the 1st property\n      for (i = 0, j = refIndexesA.length; i < j; i++) {\n        refIndexA = refIndexesA[i];\n\n        // Loop around the properties for the 2nd property (for comparison)\n        for (k = 0, l = refIndexesB.length; k < l; k++) {\n          refIndexB = refIndexesB[k];\n\n          if (\n            // Comparing the same properties\n            refIndexA === refIndexB\n            // 1st property is placed before the 2nd one in reference and in current component\n            || ((refIndexA < refIndexB) && (classIndexA < classIndexB))\n            // 1st property is placed after the 2nd one in reference and in current component\n            || ((refIndexA > refIndexB) && (classIndexA > classIndexB))\n          ) {\n            return {\n              correct: true,\n              indexA: classIndexA,\n              indexB: classIndexB,\n            };\n          }\n        }\n      }\n\n      // We did not find any correct match between reference and current component\n      return {\n        correct: false,\n        indexA: refIndexA,\n        indexB: refIndexB,\n      };\n    }\n\n    /**\n     * Check properties order from a properties list and store the eventual errors\n     * @param {Array} properties Array containing all the properties.\n     */\n    function checkPropsOrder(properties) {\n      const propertiesInfos = properties.map((node) => ({\n        name: getPropertyName(node),\n        getter: node.kind === 'get',\n        setter: node.kind === 'set',\n        staticVariable: node.static\n          && (node.type === 'ClassProperty' || node.type === 'PropertyDefinition')\n          && (!node.value || !astUtil.isFunctionLikeExpression(node.value)),\n        staticMethod: node.static\n          && (node.type === 'ClassProperty' || node.type === 'PropertyDefinition' || node.type === 'MethodDefinition')\n          && node.value\n          && (astUtil.isFunctionLikeExpression(node.value)),\n        instanceVariable: !node.static\n          && (node.type === 'ClassProperty' || node.type === 'PropertyDefinition')\n          && (!node.value || !astUtil.isFunctionLikeExpression(node.value)),\n        instanceMethod: !node.static\n          && (node.type === 'ClassProperty' || node.type === 'PropertyDefinition')\n          && node.value\n          && (astUtil.isFunctionLikeExpression(node.value)),\n        typeAnnotation: !!node.typeAnnotation && node.value === null,\n      }));\n\n      // Loop around the properties\n      propertiesInfos.forEach((propA, i) => {\n        // Loop around the properties a second time (for comparison)\n        propertiesInfos.forEach((propB, k) => {\n          if (i === k) {\n            return;\n          }\n\n          // Compare the properties order\n          const order = comparePropsOrder(propertiesInfos, propA, propB);\n\n          if (!order.correct) {\n            // Store an error if the order is incorrect\n            storeError({\n              node: properties[i],\n              index: order.indexA,\n            }, {\n              node: properties[k],\n              index: order.indexB,\n            });\n          }\n        });\n      });\n    }\n\n    return {\n      'Program:exit'() {\n        values(components.list()).forEach((component) => {\n          const properties = astUtil.getComponentProperties(component.node);\n          checkPropsOrder(properties);\n        });\n\n        reportErrors();\n      },\n    };\n  }),\n\n  defaultConfig,\n};\n", "/**\n * @fileoverview Enforce default props alphabetical sorting\n * @author Vladimir Kattsov\n * @deprecated\n */\n\n'use strict';\n\nconst variableUtil = require('../util/variable');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\nconst eslintUtil = require('../util/eslint');\n\nconst getFirstTokens = eslintUtil.getFirstTokens;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  propsNotSorted: 'Default prop types declarations should be sorted alphabetically',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce defaultProps declarations alphabetical sorting',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('sort-default-props'),\n    },\n    // fixable: 'code',\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        ignoreCase: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const ignoreCase = configuration.ignoreCase || false;\n\n    /**\n     * Get properties name\n     * @param {Object} node - Property.\n     * @returns {string} Property name.\n     */\n    function getPropertyName(node) {\n      if (node.key || ['MethodDefinition', 'Property'].indexOf(node.type) !== -1) {\n        return node.key.name;\n      }\n      if (node.type === 'MemberExpression') {\n        return node.property.name;\n      // Special case for class properties\n      // (babel-eslint@5 does not expose property name so we have to rely on tokens)\n      }\n      if (node.type === 'ClassProperty') {\n        const tokens = getFirstTokens(context, node, 2);\n        return tokens[1] && tokens[1].type === 'Identifier' ? tokens[1].value : tokens[0].value;\n      }\n      return '';\n    }\n\n    /**\n     * Checks if the Identifier node passed in looks like a defaultProps declaration.\n     * @param   {ASTNode}  node The node to check. Must be an Identifier node.\n     * @returns {boolean}       `true` if the node is a defaultProps declaration, `false` if not\n     */\n    function isDefaultPropsDeclaration(node) {\n      const propName = getPropertyName(node);\n      return (propName === 'defaultProps' || propName === 'getDefaultProps');\n    }\n\n    function getKey(node) {\n      return getText(context, node.key || node.argument);\n    }\n\n    /**\n     * Find a variable by name in the current scope.\n     * @param  {ASTNode} node The node to look for.\n     * @param  {string} name Name of the variable to look for.\n     * @returns {ASTNode|null} Return null if the variable could not be found, ASTNode otherwise.\n     */\n    function findVariableByName(node, name) {\n      const variable = variableUtil.getVariableFromContext(context, node, name);\n\n      if (!variable || !variable.defs[0] || !variable.defs[0].node) {\n        return null;\n      }\n\n      if (variable.defs[0].node.type === 'TypeAlias') {\n        return variable.defs[0].node.right;\n      }\n\n      return variable.defs[0].node.init;\n    }\n\n    /**\n     * Checks if defaultProps declarations are sorted\n     * @param {Array} declarations The array of AST nodes being checked.\n     * @returns {void}\n     */\n    function checkSorted(declarations) {\n      // function fix(fixer) {\n      //   return propTypesSortUtil.fixPropTypesSort(context, fixer, declarations, ignoreCase);\n      // }\n\n      declarations.reduce((prev, curr, idx, decls) => {\n        if (/Spread(?:Property|Element)$/.test(curr.type)) {\n          return decls[idx + 1];\n        }\n\n        let prevPropName = getKey(prev);\n        let currentPropName = getKey(curr);\n\n        if (ignoreCase) {\n          prevPropName = prevPropName.toLowerCase();\n          currentPropName = currentPropName.toLowerCase();\n        }\n\n        if (currentPropName < prevPropName) {\n          report(context, messages.propsNotSorted, 'propsNotSorted', {\n            node: curr,\n            // fix\n          });\n\n          return prev;\n        }\n\n        return curr;\n      }, declarations[0]);\n    }\n\n    function checkNode(node) {\n      if (!node) {\n        return;\n      }\n      if (node.type === 'ObjectExpression') {\n        checkSorted(node.properties);\n      } else if (node.type === 'Identifier') {\n        const propTypesObject = findVariableByName(node, node.name);\n        if (propTypesObject && propTypesObject.properties) {\n          checkSorted(propTypesObject.properties);\n        }\n      }\n    }\n\n    // --------------------------------------------------------------------------\n    // Public API\n    // --------------------------------------------------------------------------\n\n    return {\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!isDefaultPropsDeclaration(node)) {\n          return;\n        }\n\n        checkNode(node.value);\n      },\n\n      MemberExpression(node) {\n        if (!isDefaultPropsDeclaration(node)) {\n          return;\n        }\n\n        checkNode('right' in node.parent && node.parent.right);\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Enforce propTypes declarations alphabetical sorting\n */\n\n'use strict';\n\nconst astUtil = require('../util/ast');\nconst variableUtil = require('../util/variable');\nconst propsUtil = require('../util/props');\nconst docsUrl = require('../util/docsUrl');\nconst propWrapperUtil = require('../util/propWrapper');\nconst propTypesSortUtil = require('../util/propTypesSort');\nconst report = require('../util/report');\nconst eslintUtil = require('../util/eslint');\n\nconst getSourceCode = eslintUtil.getSourceCode;\nconst getText = eslintUtil.getText;\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  requiredPropsFirst: 'Required prop types must be listed before all other prop types',\n  callbackPropsLast: 'Callback prop types must be listed after all other prop types',\n  propsNotSorted: 'Prop types declarations should be sorted alphabetically',\n};\n\nfunction getKey(context, node) {\n  if (node.type === 'ObjectTypeProperty') {\n    return getSourceCode(context).getFirstToken(node).value;\n  }\n  if (node.key && node.key.value) {\n    return node.key.value;\n  }\n  return getText(context, node.key || node.argument);\n}\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce propTypes declarations alphabetical sorting',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('sort-prop-types'),\n    },\n    fixable: 'code',\n\n    messages,\n\n    schema: [{\n      type: 'object',\n      properties: {\n        requiredFirst: {\n          type: 'boolean',\n        },\n        callbacksLast: {\n          type: 'boolean',\n        },\n        ignoreCase: {\n          type: 'boolean',\n        },\n        // Whether alphabetical sorting should be enforced\n        noSortAlphabetically: {\n          type: 'boolean',\n        },\n        sortShapeProp: {\n          type: 'boolean',\n        },\n        checkTypes: {\n          type: 'boolean',\n        },\n      },\n      additionalProperties: false,\n    }],\n  },\n\n  create(context) {\n    const configuration = context.options[0] || {};\n    const requiredFirst = configuration.requiredFirst || false;\n    const callbacksLast = configuration.callbacksLast || false;\n    const ignoreCase = configuration.ignoreCase || false;\n    const noSortAlphabetically = configuration.noSortAlphabetically || false;\n    const sortShapeProp = configuration.sortShapeProp || false;\n    const checkTypes = configuration.checkTypes || false;\n\n    const typeAnnotations = new Map();\n\n    /**\n     * Checks if propTypes declarations are sorted\n     * @param {Array} declarations The array of AST nodes being checked.\n     * @returns {void}\n     */\n    function checkSorted(declarations) {\n      // Declarations will be `undefined` if the `shape` is not a literal. For\n      // example, if it is a propType imported from another file.\n      if (!declarations) {\n        return;\n      }\n\n      function fix(fixer) {\n        return propTypesSortUtil.fixPropTypesSort(\n          context,\n          fixer,\n          declarations,\n          ignoreCase,\n          requiredFirst,\n          callbacksLast,\n          noSortAlphabetically,\n          sortShapeProp,\n          checkTypes\n        );\n      }\n\n      const callbackPropsLastSeen = new WeakSet();\n      const requiredPropsFirstSeen = new WeakSet();\n      const propsNotSortedSeen = new WeakSet();\n\n      declarations.reduce((prev, curr, idx, decls) => {\n        if (curr.type === 'ExperimentalSpreadProperty' || curr.type === 'SpreadElement') {\n          return decls[idx + 1];\n        }\n\n        let prevPropName = getKey(context, prev);\n        let currentPropName = getKey(context, curr);\n        const previousIsRequired = propTypesSortUtil.isRequiredProp(prev);\n        const currentIsRequired = propTypesSortUtil.isRequiredProp(curr);\n        const previousIsCallback = propTypesSortUtil.isCallbackPropName(prevPropName);\n        const currentIsCallback = propTypesSortUtil.isCallbackPropName(currentPropName);\n\n        if (ignoreCase) {\n          prevPropName = String(prevPropName).toLowerCase();\n          currentPropName = String(currentPropName).toLowerCase();\n        }\n\n        if (requiredFirst) {\n          if (previousIsRequired && !currentIsRequired) {\n            // Transition between required and non-required. Don't compare for alphabetical.\n            return curr;\n          }\n          if (!previousIsRequired && currentIsRequired) {\n            // Encountered a non-required prop after a required prop\n            if (!requiredPropsFirstSeen.has(curr)) {\n              requiredPropsFirstSeen.add(curr);\n              report(context, messages.requiredPropsFirst, 'requiredPropsFirst', {\n                node: curr,\n                fix,\n              });\n            }\n            return curr;\n          }\n        }\n\n        if (callbacksLast) {\n          if (!previousIsCallback && currentIsCallback) {\n            // Entering the callback prop section\n            return curr;\n          }\n          if (previousIsCallback && !currentIsCallback) {\n            // Encountered a non-callback prop after a callback prop\n            if (!callbackPropsLastSeen.has(prev)) {\n              callbackPropsLastSeen.add(prev);\n              report(context, messages.callbackPropsLast, 'callbackPropsLast', {\n                node: prev,\n                fix,\n              });\n            }\n            return prev;\n          }\n        }\n\n        if (!noSortAlphabetically && currentPropName < prevPropName) {\n          if (!propsNotSortedSeen.has(curr)) {\n            propsNotSortedSeen.add(curr);\n            report(context, messages.propsNotSorted, 'propsNotSorted', {\n              node: curr,\n              fix,\n            });\n          }\n          return prev;\n        }\n\n        return curr;\n      }, declarations[0]);\n    }\n\n    function checkNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.type === 'ObjectExpression') {\n        checkSorted(node.properties);\n      } else if (node.type === 'Identifier') {\n        const propTypesObject = variableUtil.findVariableByName(context, node, node.name);\n        if (propTypesObject && propTypesObject.properties) {\n          checkSorted(propTypesObject.properties);\n        }\n      } else if (astUtil.isCallExpression(node)) {\n        const innerNode = node.arguments && node.arguments[0];\n        if (propWrapperUtil.isPropWrapperFunction(context, node.callee.name) && innerNode) {\n          checkNode(innerNode);\n        }\n      }\n    }\n\n    function handleFunctionComponent(node) {\n      const firstArg = node.params\n        && node.params.length > 0\n        && node.params[0].typeAnnotation\n        && node.params[0].typeAnnotation.typeAnnotation;\n      if (firstArg && firstArg.type === 'TSTypeReference') {\n        const propType = typeAnnotations.get(firstArg.typeName.name)\n          && typeAnnotations.get(firstArg.typeName.name)[0];\n        if (propType && propType.members) {\n          checkSorted(propType.members);\n        }\n      } else if (firstArg && firstArg.type === 'TSTypeLiteral') {\n        if (firstArg.members) {\n          checkSorted(firstArg.members);\n        }\n      } else if (firstArg && firstArg.type === 'GenericTypeAnnotation') {\n        const propType = typeAnnotations.get(firstArg.id.name)\n          && typeAnnotations.get(firstArg.id.name)[0];\n        if (propType && propType.properties) {\n          checkSorted(propType.properties);\n        }\n      } else if (firstArg && firstArg.type === 'ObjectTypeAnnotation') {\n        if (firstArg.properties) {\n          checkSorted(firstArg.properties);\n        }\n      }\n    }\n\n    return Object.assign({\n      CallExpression(node) {\n        if (!sortShapeProp || !propTypesSortUtil.isShapeProp(node) || !(node.arguments && node.arguments[0])) {\n          return;\n        }\n\n        const firstArg = node.arguments[0];\n        if (firstArg.properties) {\n          checkSorted(firstArg.properties);\n        } else if (firstArg.type === 'Identifier') {\n          const variable = variableUtil.findVariableByName(context, node, firstArg.name);\n          if (variable && variable.properties) {\n            checkSorted(variable.properties);\n          }\n        }\n      },\n\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!propsUtil.isPropTypesDeclaration(node)) {\n          return;\n        }\n        checkNode(node.value);\n      },\n\n      MemberExpression(node) {\n        if (!propsUtil.isPropTypesDeclaration(node)) {\n          return;\n        }\n\n        checkNode(node.parent.right);\n      },\n\n      ObjectExpression(node) {\n        node.properties.forEach((property) => {\n          if (!property.key) {\n            return;\n          }\n\n          if (!propsUtil.isPropTypesDeclaration(property)) {\n            return;\n          }\n          if (property.value.type === 'ObjectExpression') {\n            checkSorted(property.value.properties);\n          }\n        });\n      },\n    }, checkTypes ? {\n      TSTypeLiteral(node) {\n        if (node && node.parent.id) {\n          const currentNode = [].concat(\n            typeAnnotations.get(node.parent.id.name) || [],\n            node\n          );\n          typeAnnotations.set(node.parent.id.name, currentNode);\n        }\n      },\n\n      TypeAlias(node) {\n        if (node.right.type === 'ObjectTypeAnnotation') {\n          const currentNode = [].concat(\n            typeAnnotations.get(node.id.name) || [],\n            node.right\n          );\n          typeAnnotations.set(node.id.name, currentNode);\n        }\n      },\n\n      TSTypeAliasDeclaration(node) {\n        if (node.typeAnnotation.type === 'TSTypeLiteral' || node.typeAnnotation.type === 'ObjectTypeAnnotation') {\n          const currentNode = [].concat(\n            typeAnnotations.get(node.id.name) || [],\n            node.typeAnnotation\n          );\n          typeAnnotations.set(node.id.name, currentNode);\n        }\n      },\n      FunctionDeclaration: handleFunctionComponent,\n      ArrowFunctionExpression: handleFunctionComponent,\n    } : null);\n  },\n};\n", "/**\n * @fileoverview Enforce the state initialization style to be either in a constructor or with a class property\n * @author Kanitkorn Sujautra\n */\n\n'use strict';\n\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst docsUrl = require('../util/docsUrl');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  stateInitConstructor: 'State initialization should be in a constructor',\n  stateInitClassProp: 'State initialization should be in a class property',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce class component state initialization style',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('state-in-constructor'),\n    },\n\n    messages,\n\n    schema: [{\n      enum: ['always', 'never'],\n    }],\n  },\n\n  create(context) {\n    const option = context.options[0] || 'always';\n    return {\n      'ClassProperty, PropertyDefinition'(node) {\n        if (\n          option === 'always'\n          && !node.static\n          && node.key.name === 'state'\n          && componentUtil.getParentES6Component(context, node)\n        ) {\n          report(context, messages.stateInitConstructor, 'stateInitConstructor', {\n            node,\n          });\n        }\n      },\n      AssignmentExpression(node) {\n        if (\n          option === 'never'\n          && componentUtil.isStateMemberExpression(node.left)\n          && astUtil.inConstructor(context, node)\n          && componentUtil.getParentES6Component(context, node)\n        ) {\n          report(context, messages.stateInitClassProp, 'stateInitClassProp', {\n            node,\n          });\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Defines where React component static properties should be positioned.\n * @author Daniel Mason\n */\n\n'use strict';\n\nconst fromEntries = require('object.fromentries');\nconst Components = require('../util/Components');\nconst docsUrl = require('../util/docsUrl');\nconst astUtil = require('../util/ast');\nconst componentUtil = require('../util/componentUtil');\nconst propsUtil = require('../util/props');\nconst report = require('../util/report');\nconst getScope = require('../util/eslint').getScope;\n\n// ------------------------------------------------------------------------------\n// Positioning Options\n// ------------------------------------------------------------------------------\nconst STATIC_PUBLIC_FIELD = 'static public field';\nconst STATIC_GETTER = 'static getter';\nconst PROPERTY_ASSIGNMENT = 'property assignment';\nconst POSITION_SETTINGS = [STATIC_PUBLIC_FIELD, STATIC_GETTER, PROPERTY_ASSIGNMENT];\n\n// ------------------------------------------------------------------------------\n// Rule messages\n// ------------------------------------------------------------------------------\nconst ERROR_MESSAGES = {\n  [STATIC_PUBLIC_FIELD]: 'notStaticClassProp',\n  [STATIC_GETTER]: 'notGetterClassFunc',\n  [PROPERTY_ASSIGNMENT]: 'declareOutsideClass',\n};\n\n// ------------------------------------------------------------------------------\n// Properties to check\n// ------------------------------------------------------------------------------\nconst propertiesToCheck = {\n  propTypes: propsUtil.isPropTypesDeclaration,\n  defaultProps: propsUtil.isDefaultPropsDeclaration,\n  childContextTypes: propsUtil.isChildContextTypesDeclaration,\n  contextTypes: propsUtil.isContextTypesDeclaration,\n  contextType: propsUtil.isContextTypeDeclaration,\n  displayName: (node) => propsUtil.isDisplayNameDeclaration(astUtil.getPropertyNameNode(node)),\n};\n\nconst classProperties = Object.keys(propertiesToCheck);\nconst schemaProperties = fromEntries(classProperties.map((property) => [property, { enum: POSITION_SETTINGS }]));\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  notStaticClassProp: '\\'{{name}}\\' should be declared as a static class property.',\n  notGetterClassFunc: '\\'{{name}}\\' should be declared as a static getter class function.',\n  declareOutsideClass: '\\'{{name}}\\' should be declared outside the class body.',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforces where React component static properties should be positioned.',\n      category: 'Stylistic Issues',\n      recommended: false,\n      url: docsUrl('static-property-placement'),\n    },\n    fixable: null, // or 'code' or 'whitespace'\n\n    messages,\n\n    schema: [\n      { enum: POSITION_SETTINGS },\n      {\n        type: 'object',\n        properties: schemaProperties,\n        additionalProperties: false,\n      },\n    ],\n  },\n\n  create: Components.detect((context, components, utils) => {\n    // variables should be defined here\n    const options = context.options;\n    const defaultCheckType = options[0] || STATIC_PUBLIC_FIELD;\n    const hasAdditionalConfig = options.length > 1;\n    const additionalConfig = hasAdditionalConfig ? options[1] : {};\n\n    // Set config\n    const config = fromEntries(classProperties.map((property) => [\n      property,\n      additionalConfig[property] || defaultCheckType,\n    ]));\n\n    // ----------------------------------------------------------------------\n    // Helpers\n    // ----------------------------------------------------------------------\n\n    /**\n      * Checks if we are declaring context in class\n      * @param {ASTNode} node\n      * @returns {boolean} True if we are declaring context in class, false if not.\n     */\n    function isContextInClass(node) {\n      let blockNode;\n      let scope = getScope(context, node);\n      while (scope) {\n        blockNode = scope.block;\n        if (blockNode && blockNode.type === 'ClassDeclaration') {\n          return true;\n        }\n        scope = scope.upper;\n      }\n\n      return false;\n    }\n\n    /**\n     * Check if we should report this property node\n     * @param {ASTNode} node\n     * @param {string} expectedRule\n     */\n    function reportNodeIncorrectlyPositioned(node, expectedRule) {\n      // Detect if this node is an expected property declaration adn return the property name\n      const name = classProperties.find((propertyName) => {\n        if (propertiesToCheck[propertyName](node)) {\n          return !!propertyName;\n        }\n\n        return false;\n      });\n\n      // If name is set but the configured rule does not match expected then report error\n      if (\n        name\n        && (\n          config[name] !== expectedRule\n          || (!node.static && (config[name] === STATIC_PUBLIC_FIELD || config[name] === STATIC_GETTER))\n        )\n      ) {\n        const messageId = ERROR_MESSAGES[config[name]];\n        report(context, messages[messageId], messageId, {\n          node,\n          data: { name },\n        });\n      }\n    }\n\n    // ----------------------------------------------------------------------\n    // Public\n    // ----------------------------------------------------------------------\n    return {\n      'ClassProperty, PropertyDefinition'(node) {\n        if (!componentUtil.getParentES6Component(context, node)) {\n          return;\n        }\n\n        reportNodeIncorrectlyPositioned(node, STATIC_PUBLIC_FIELD);\n      },\n\n      MemberExpression(node) {\n        // If definition type is undefined then it must not be a defining expression or if the definition is inside a\n        // class body then skip this node.\n        const right = node.parent.right;\n        if (!right || right.type === 'undefined' || isContextInClass(node)) {\n          return;\n        }\n\n        // Get the related component\n        const relatedComponent = utils.getRelatedComponent(node);\n\n        // If the related component is not an ES6 component then skip this node\n        if (!relatedComponent || !componentUtil.isES6Component(relatedComponent.node, context)) {\n          return;\n        }\n\n        // Report if needed\n        reportNodeIncorrectlyPositioned(node, PROPERTY_ASSIGNMENT);\n      },\n\n      MethodDefinition(node) {\n        // If the function is inside a class and is static getter then check if correctly positioned\n        if (\n          componentUtil.getParentES6Component(context, node)\n          && node.static\n          && node.kind === 'get'\n        ) {\n          // Report error if needed\n          reportNodeIncorrectlyPositioned(node, STATIC_GETTER);\n        }\n      },\n    };\n  }),\n};\n", "/**\n * @fileoverview Enforce style prop value is an object\n * @author David Petersen\n */\n\n'use strict';\n\nconst variableUtil = require('../util/variable');\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst messages = {\n  stylePropNotObject: 'Style prop value must be an object',\n};\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Enforce style prop value is an object',\n      category: 'Possible Errors',\n      recommended: false,\n      url: docsUrl('style-prop-object'),\n    },\n\n    messages,\n\n    schema: [\n      {\n        type: 'object',\n        properties: {\n          allow: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n            additionalItems: false,\n            uniqueItems: true,\n          },\n        },\n      },\n    ],\n  },\n\n  create(context) {\n    const allowed = new Set(((context.options.length > 0) && context.options[0].allow) || []);\n\n    /**\n     * @param {ASTNode} expression An Identifier node\n     * @returns {boolean}\n     */\n    function isNonNullaryLiteral(expression) {\n      return expression.type === 'Literal' && expression.value !== null;\n    }\n\n    /**\n     * @param {object} node A Identifier node\n     */\n    function checkIdentifiers(node) {\n      const variable = variableUtil.getVariableFromContext(context, node, node.name);\n\n      if (!variable || !variable.defs[0] || !variable.defs[0].node.init) {\n        return;\n      }\n\n      if (isNonNullaryLiteral(variable.defs[0].node.init)) {\n        report(context, messages.stylePropNotObject, 'stylePropNotObject', {\n          node,\n        });\n      }\n    }\n\n    return {\n      CallExpression(node) {\n        if (\n          isCreateElement(context, node)\n          && node.arguments.length > 1\n        ) {\n          if ('name' in node.arguments[0] && node.arguments[0].name) {\n            // store name of component\n            const componentName = node.arguments[0].name;\n\n            // allowed list contains the name\n            if (allowed.has(componentName)) {\n              // abort operation\n              return;\n            }\n          }\n          if (node.arguments[1].type === 'ObjectExpression') {\n            const style = node.arguments[1].properties.find((property) => (\n              'key' in property\n              && property.key\n              && 'name' in property.key\n              && property.key.name === 'style'\n              && !property.computed\n            ));\n\n            if (style && 'value' in style) {\n              if (style.value.type === 'Identifier') {\n                checkIdentifiers(style.value);\n              } else if (isNonNullaryLiteral(style.value)) {\n                report(context, messages.stylePropNotObject, 'stylePropNotObject', {\n                  node: style.value,\n                });\n              }\n            }\n          }\n        }\n      },\n\n      JSXAttribute(node) {\n        if (!node.value || node.name.name !== 'style') {\n          return;\n        }\n        // store parent element\n        const parentElement = node.parent;\n\n        // parent element is a JSXOpeningElement\n        if (parentElement && parentElement.type === 'JSXOpeningElement') {\n          // get the name of the JSX element\n          const name = parentElement.name && parentElement.name.name;\n\n          // allowed list contains the name\n          if (allowed.has(name)) {\n            // abort operation\n            return;\n          }\n        }\n\n        if (node.value.type !== 'JSXExpressionContainer' || isNonNullaryLiteral(node.value.expression)) {\n          report(context, messages.stylePropNotObject, 'stylePropNotObject', {\n            node,\n          });\n        } else if (node.value.expression.type === 'Identifier') {\n          checkIdentifiers(node.value.expression);\n        }\n      },\n    };\n  },\n};\n", "/**\n * @fileoverview Prevent void elements (e.g. <img />, <br />) from receiving\n *   children\n * @author Joe Lencioni\n */\n\n'use strict';\n\nconst has = require('hasown');\n\nconst docsUrl = require('../util/docsUrl');\nconst isCreateElement = require('../util/isCreateElement');\nconst report = require('../util/report');\n\n// ------------------------------------------------------------------------------\n// Helpers\n// ------------------------------------------------------------------------------\n\n// Using an object here to avoid array scan. We should switch to Set once\n// support is good enough.\nconst VOID_DOM_ELEMENTS = {\n  area: true,\n  base: true,\n  br: true,\n  col: true,\n  embed: true,\n  hr: true,\n  img: true,\n  input: true,\n  keygen: true,\n  link: true,\n  menuitem: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n};\n\nfunction isVoidDOMElement(elementName) {\n  return has(VOID_DOM_ELEMENTS, elementName);\n}\n\n// ------------------------------------------------------------------------------\n// Rule Definition\n// ------------------------------------------------------------------------------\n\nconst noChildrenInVoidEl = 'Void DOM element <{{element}} /> cannot receive children.';\n\n/** @type {import('eslint').Rule.RuleModule} */\nmodule.exports = {\n  meta: {\n    docs: {\n      description: 'Disallow void DOM elements (e.g. `<img />`, `<br />`) from receiving children',\n      category: 'Best Practices',\n      recommended: false,\n      url: docsUrl('void-dom-elements-no-children'),\n    },\n\n    messages: {\n      noChildrenInVoidEl,\n    },\n\n    schema: [],\n  },\n\n  create: (context) => ({\n    JSXElement(node) {\n      const elementName = node.openingElement.name.name;\n\n      if (!isVoidDOMElement(elementName)) {\n        // e.g. <div />\n        return;\n      }\n\n      if (node.children.length > 0) {\n        // e.g. <br>Foo</br>\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName,\n          },\n        });\n      }\n\n      const attributes = node.openingElement.attributes;\n\n      const hasChildrenAttributeOrDanger = attributes.some((attribute) => {\n        if (!attribute.name) {\n          return false;\n        }\n\n        return attribute.name.name === 'children' || attribute.name.name === 'dangerouslySetInnerHTML';\n      });\n\n      if (hasChildrenAttributeOrDanger) {\n        // e.g. <br children=\"Foo\" />\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName,\n          },\n        });\n      }\n    },\n\n    CallExpression(node) {\n      if (node.callee.type !== 'MemberExpression' && node.callee.type !== 'Identifier') {\n        return;\n      }\n\n      if (!isCreateElement(context, node)) {\n        return;\n      }\n\n      const args = node.arguments;\n\n      if (args.length < 1) {\n        // React.createElement() should not crash linter\n        return;\n      }\n\n      const elementName = 'value' in args[0] ? args[0].value : undefined;\n\n      if (!isVoidDOMElement(elementName)) {\n        // e.g. React.createElement('div');\n        return;\n      }\n\n      if (args.length < 2 || args[1].type !== 'ObjectExpression') {\n        return;\n      }\n\n      const firstChild = args[2];\n      if (firstChild) {\n        // e.g. React.createElement('br', undefined, 'Foo')\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName,\n          },\n        });\n      }\n\n      const props = args[1].properties;\n\n      const hasChildrenPropOrDanger = props.some((prop) => {\n        if (!('key' in prop) || !prop.key || !('name' in prop.key)) {\n          return false;\n        }\n\n        return prop.key.name === 'children' || prop.key.name === 'dangerouslySetInnerHTML';\n      });\n\n      if (hasChildrenPropOrDanger) {\n        // e.g. React.createElement('br', { children: 'Foo' })\n        report(context, noChildrenInVoidEl, 'noChildrenInVoidEl', {\n          node,\n          data: {\n            element: elementName,\n          },\n        });\n      }\n    },\n  }),\n};\n", "'use strict';\n\n/* eslint global-require: 0 */\n\n/** @satisfies {Record<string, import('eslint').Rule.RuleModule>} */\nmodule.exports = {\n  'boolean-prop-naming': require('./boolean-prop-naming'),\n  'button-has-type': require('./button-has-type'),\n  'checked-requires-onchange-or-readonly': require('./checked-requires-onchange-or-readonly'),\n  'default-props-match-prop-types': require('./default-props-match-prop-types'),\n  'destructuring-assignment': require('./destructuring-assignment'),\n  'display-name': require('./display-name'),\n  'forbid-component-props': require('./forbid-component-props'),\n  'forbid-dom-props': require('./forbid-dom-props'),\n  'forbid-elements': require('./forbid-elements'),\n  'forbid-foreign-prop-types': require('./forbid-foreign-prop-types'),\n  'forbid-prop-types': require('./forbid-prop-types'),\n  'forward-ref-uses-ref': require('./forward-ref-uses-ref'),\n  'function-component-definition': require('./function-component-definition'),\n  'hook-use-state': require('./hook-use-state'),\n  'iframe-missing-sandbox': require('./iframe-missing-sandbox'),\n  'jsx-boolean-value': require('./jsx-boolean-value'),\n  'jsx-child-element-spacing': require('./jsx-child-element-spacing'),\n  'jsx-closing-bracket-location': require('./jsx-closing-bracket-location'),\n  'jsx-closing-tag-location': require('./jsx-closing-tag-location'),\n  'jsx-curly-spacing': require('./jsx-curly-spacing'),\n  'jsx-curly-newline': require('./jsx-curly-newline'),\n  'jsx-equals-spacing': require('./jsx-equals-spacing'),\n  'jsx-filename-extension': require('./jsx-filename-extension'),\n  'jsx-first-prop-new-line': require('./jsx-first-prop-new-line'),\n  'jsx-handler-names': require('./jsx-handler-names'),\n  'jsx-indent': require('./jsx-indent'),\n  'jsx-indent-props': require('./jsx-indent-props'),\n  'jsx-key': require('./jsx-key'),\n  'jsx-max-depth': require('./jsx-max-depth'),\n  'jsx-max-props-per-line': require('./jsx-max-props-per-line'),\n  'jsx-newline': require('./jsx-newline'),\n  'jsx-no-bind': require('./jsx-no-bind'),\n  'jsx-no-comment-textnodes': require('./jsx-no-comment-textnodes'),\n  'jsx-no-constructed-context-values': require('./jsx-no-constructed-context-values'),\n  'jsx-no-duplicate-props': require('./jsx-no-duplicate-props'),\n  'jsx-no-leaked-render': require('./jsx-no-leaked-render'),\n  'jsx-no-literals': require('./jsx-no-literals'),\n  'jsx-no-script-url': require('./jsx-no-script-url'),\n  'jsx-no-target-blank': require('./jsx-no-target-blank'),\n  'jsx-no-useless-fragment': require('./jsx-no-useless-fragment'),\n  'jsx-one-expression-per-line': require('./jsx-one-expression-per-line'),\n  'jsx-no-undef': require('./jsx-no-undef'),\n  'jsx-curly-brace-presence': require('./jsx-curly-brace-presence'),\n  'jsx-pascal-case': require('./jsx-pascal-case'),\n  'jsx-fragments': require('./jsx-fragments'),\n  'jsx-props-no-multi-spaces': require('./jsx-props-no-multi-spaces'),\n  'jsx-props-no-spreading': require('./jsx-props-no-spreading'),\n  'jsx-props-no-spread-multi': require('./jsx-props-no-spread-multi'),\n  'jsx-sort-default-props': require('./jsx-sort-default-props'),\n  'jsx-sort-props': require('./jsx-sort-props'),\n  'jsx-space-before-closing': require('./jsx-space-before-closing'),\n  'jsx-tag-spacing': require('./jsx-tag-spacing'),\n  'jsx-uses-react': require('./jsx-uses-react'),\n  'jsx-uses-vars': require('./jsx-uses-vars'),\n  'jsx-wrap-multilines': require('./jsx-wrap-multilines'),\n  'no-invalid-html-attribute': require('./no-invalid-html-attribute'),\n  'no-access-state-in-setstate': require('./no-access-state-in-setstate'),\n  'no-adjacent-inline-elements': require('./no-adjacent-inline-elements'),\n  'no-array-index-key': require('./no-array-index-key'),\n  'no-arrow-function-lifecycle': require('./no-arrow-function-lifecycle'),\n  'no-children-prop': require('./no-children-prop'),\n  'no-danger': require('./no-danger'),\n  'no-danger-with-children': require('./no-danger-with-children'),\n  'no-deprecated': require('./no-deprecated'),\n  'no-did-mount-set-state': require('./no-did-mount-set-state'),\n  'no-did-update-set-state': require('./no-did-update-set-state'),\n  'no-direct-mutation-state': require('./no-direct-mutation-state'),\n  'no-find-dom-node': require('./no-find-dom-node'),\n  'no-is-mounted': require('./no-is-mounted'),\n  'no-multi-comp': require('./no-multi-comp'),\n  'no-namespace': require('./no-namespace'),\n  'no-set-state': require('./no-set-state'),\n  'no-string-refs': require('./no-string-refs'),\n  'no-redundant-should-component-update': require('./no-redundant-should-component-update'),\n  'no-render-return-value': require('./no-render-return-value'),\n  'no-this-in-sfc': require('./no-this-in-sfc'),\n  'no-typos': require('./no-typos'),\n  'no-unescaped-entities': require('./no-unescaped-entities'),\n  'no-unknown-property': require('./no-unknown-property'),\n  'no-unsafe': require('./no-unsafe'),\n  'no-unstable-nested-components': require('./no-unstable-nested-components'),\n  'no-unused-class-component-methods': require('./no-unused-class-component-methods'),\n  'no-unused-prop-types': require('./no-unused-prop-types'),\n  'no-unused-state': require('./no-unused-state'),\n  'no-object-type-as-default-prop': require('./no-object-type-as-default-prop'),\n  'no-will-update-set-state': require('./no-will-update-set-state'),\n  'prefer-es6-class': require('./prefer-es6-class'),\n  'prefer-exact-props': require('./prefer-exact-props'),\n  'prefer-read-only-props': require('./prefer-read-only-props'),\n  'prefer-stateless-function': require('./prefer-stateless-function'),\n  'prop-types': require('./prop-types'),\n  'react-in-jsx-scope': require('./react-in-jsx-scope'),\n  'require-default-props': require('./require-default-props'),\n  'require-optimization': require('./require-optimization'),\n  'require-render-return': require('./require-render-return'),\n  'self-closing-comp': require('./self-closing-comp'),\n  'sort-comp': require('./sort-comp'),\n  'sort-default-props': require('./sort-default-props'),\n  'sort-prop-types': require('./sort-prop-types'),\n  'state-in-constructor': require('./state-in-constructor'),\n  'static-property-placement': require('./static-property-placement'),\n  'style-prop-object': require('./style-prop-object'),\n  'void-dom-elements-no-children': require('./void-dom-elements-no-children'),\n};\n", "'use strict';\n\nconst fromEntries = require('object.fromentries');\nconst entries = require('object.entries');\n\nconst allRules = require('./lib/rules');\n\nfunction filterRules(rules, predicate) {\n  return fromEntries(entries(rules).filter((entry) => predicate(entry[1])));\n}\n\n/**\n * @param {object} rules - rules object mapping rule name to rule module\n * @returns {Record<string, 2>}\n */\nfunction configureAsError(rules) {\n  return fromEntries(Object.keys(rules).map((key) => [`react/${key}`, 2]));\n}\n\nconst activeRules = filterRules(allRules, (rule) => !rule.meta.deprecated);\nconst activeRulesConfig = configureAsError(activeRules);\n\nconst deprecatedRules = filterRules(allRules, (rule) => rule.meta.deprecated);\n\n// for legacy config system\nconst plugins = [\n  'react',\n];\n\nconst plugin = {\n  deprecatedRules,\n  rules: allRules,\n  configs: {\n    recommended: {\n      plugins,\n      parserOptions: {\n        ecmaFeatures: {\n          jsx: true,\n        },\n      },\n      rules: {\n        'react/display-name': 2,\n        'react/jsx-key': 2,\n        'react/jsx-no-comment-textnodes': 2,\n        'react/jsx-no-duplicate-props': 2,\n        'react/jsx-no-target-blank': 2,\n        'react/jsx-no-undef': 2,\n        'react/jsx-uses-react': 2,\n        'react/jsx-uses-vars': 2,\n        'react/no-children-prop': 2,\n        'react/no-danger-with-children': 2,\n        'react/no-deprecated': 2,\n        'react/no-direct-mutation-state': 2,\n        'react/no-find-dom-node': 2,\n        'react/no-is-mounted': 2,\n        'react/no-render-return-value': 2,\n        'react/no-string-refs': 2,\n        'react/no-unescaped-entities': 2,\n        'react/no-unknown-property': 2,\n        'react/no-unsafe': 0,\n        'react/prop-types': 2,\n        'react/react-in-jsx-scope': 2,\n        'react/require-render-return': 2,\n      },\n    },\n    all: {\n      plugins,\n      parserOptions: {\n        ecmaFeatures: {\n          jsx: true,\n        },\n      },\n      rules: activeRulesConfig,\n    },\n    'jsx-runtime': {\n      plugins,\n      parserOptions: {\n        ecmaFeatures: {\n          jsx: true,\n        },\n        jsxPragma: null, // for @typescript/eslint-parser\n      },\n      rules: {\n        'react/react-in-jsx-scope': 0,\n        'react/jsx-uses-react': 0,\n      },\n    },\n  },\n};\n\nplugin.configs.flat = {\n  recommended: {\n    plugins: { react: plugin },\n    rules: plugin.configs.recommended.rules,\n    languageOptions: { parserOptions: plugin.configs.recommended.parserOptions },\n  },\n  all: {\n    plugins: { react: plugin },\n    rules: plugin.configs.all.rules,\n    languageOptions: { parserOptions: plugin.configs.all.parserOptions },\n  },\n  'jsx-runtime': {\n    plugins: { react: plugin },\n    rules: plugin.configs['jsx-runtime'].rules,\n    languageOptions: { parserOptions: plugin.configs['jsx-runtime'].parserOptions },\n  },\n};\n\nmodule.exports = plugin;\n"],
  "mappings": "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",
  "names": ["require_implementation", "concatty", "slicy", "Empty", "undefined", "doEval", "stringToPath", "getBaseIntrinsic", "hasPropertyDescriptors", "applyBind", "require_IsArray", "require_Type", "isNaN", "value", "T", "require_shams", "tryStringObject", "CompletionRecord", "require_isPrimitive", "GetMethod", "require_implementation", "require_implementation", "require_polyfill", "require_shim", "require_object", "require_IsPropertyKey", "require_Type", "require_Get", "require_IsArray", "require_FromPropertyDescriptor", "require_IsDataDescriptor", "require_SameValue", "require_ToBoolean", "require_IsCallable", "require_ToPropertyDescriptor", "require_Call", "require_IsAccessorDescriptor", "require_IsExtensible", "require_IsGenericDescriptor", "require_ValidateAndApplyPropertyDescriptor", "require_OrdinaryDefineOwnProperty", "require_CreateDataProperty", "require_CreateDataPropertyOrThrow", "require_ToPrimitive", "require_implementation", "require_polyfill", "require_shim", "require_ToString", "require_ToObject", "require_implementation", "require_polyfill", "require_shim", "require_implementation", "require_polyfill", "require_shim", "require_object", "require_StringToNumber", "require_ToNumber", "require_floor", "require_truncate", "require_ToIntegerOrInfinity", "require_ToLength", "require_implementation", "require_polyfill", "require_shim", "require_polyfill", "require_shim", "tryNumberObject", "forEachArray", "forEachString", "forEachObject", "forEach", "functionsHaveNames", "require_implementation", "require_polyfill", "require_shim", "isPromise", "isKnownBuiltin", "require_implementation", "require_polyfill", "require_shim", "require_implementation", "Iterator", "require_polyfill", "globalThis", "require_implementation", "require_implementation", "require_shim", "globalThis", "require_polyfill", "require_shim", "require_Iterator", "isString", "IteratorHelper", "require_implementation", "require_polyfill", "require_shim", "exports", "replace", "result", "path", "traverse", "element", "key", "comment", "require_ast", "ch", "previous", "index", "token", "value", "hasOwnProperty", "exports", "index", "parse", "stack", "getNodeModulesDirs", "maybeRealpath", "defaultReadPackage", "getPackageCandidates", "err", "basedir", "pkg", "x", "callback", "cb", "exts", "m", "isdir", "onfile", "maybeRealpathSync", "defaultReadPackageSync", "getPackageCandidates", "x", "m", "n", "i", "range", "comp", "require_implementation", "require_polyfill", "require_shim", "require_Iterator_prototype", "require_implementation", "require_polyfill", "require_shim", "require_Iterator_prototype", "require_implementation", "require_polyfill", "require_shim", "require_array_prototype", "require_implementation", "require_polyfill", "require_shim", "require_object", "noop", "errorMessage", "extractValue", "require_elementType", "require_package", "require_getProp", "require_implementation", "require_polyfill", "require_shim", "require_Iterator_prototype", "minimatch", "Minimatch", "filter", "makeRe", "braceExpand", "set", "self", "require_RequireObjectCoercible", "require_ToString", "require_floor", "require_ToPrimitive", "require_ToNumber", "require_ToPrimitive", "require_ToNumber", "require_ToInteger", "require_implementation", "require_polyfill", "require_shim", "require_string_prototype", "require_implementation", "require_polyfill", "require_shim", "require_DefinePropertyOrThrow", "Set", "Set", "RegExpStringIterator", "global", "require_IsConstructor", "Set", "global", "require_implementation", "getMatcher", "require_polyfill", "require_shim", "require_string_prototype", "require_hasProp", "require_propName", "regex", "replacement", "messageId", "require_implementation", "require_polyfill", "require_shim", "require_Iterator_prototype", "require_implementation", "require_polyfill", "require_shim", "require_Iterator_prototype", "require_ArrayCreate", "require_lessThan", "isNaN", "isNaN", "require_LengthOfArrayLike", "require_HasProperty", "require_ToObject", "require_implementation", "require_polyfill", "require_shim", "require_array_prototype", "source", "current", "require_implementation", "require_polyfill", "require_shim", "require_array_prototype", "i", "checker", "require_prop_types"]
}
